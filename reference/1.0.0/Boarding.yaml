openapi: 3.0.1
info:
  title: Boarding Latam API
  version: v3.4
servers:
  - url: https://uat-merchant-services.fiservapp.com/boarding-ui/external-api/
    description: Generated server url
paths:
  /api/v1/tmp/{id}:
    put:
      tags:
        - tmp-controller
      x-proxy-name: updateTmp
      x-group-name: tmp-controller
      x-child-product-name: Service Provider
      description: Update Order
      operationId: updateTmp
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TmpInstallUpdateRequestDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TmpEntity'
  /api/v1/maintenance/pcf:
    put:
      tags:
        - maintenance-controller
      x-proxy-name: editTerminal
      x-group-name: maintenance-controller
      x-child-product-name: Terminal Maintenance
      description: |-
        To edit a terminal data, it will be mandatory terminal id. 

        Important! As Base 24 doesn't have a get API to provide settings requested by the terminal, this API doesn't have that either. So you must get the data from your internal system.
      operationId: updateTerminal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenericTerminalRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PcfResponse'
    post:
      tags:
        - maintenance-controller
      x-proxy-name: addTerminal
      x-group-name: maintenance-controller
      x-child-product-name: Terminal Maintenance
      description: |-
        The maintenance feature is a gateway to add new terminals under an existed Merchant ID. The gateway will delivery the request to Base 24 for a terminal configuration. 

        After submitting the request api will give back a response payload with "Terminal ID" number. So, six terminals requested will generate six Terminals Ids - each will be included with a single code.

        Important! Since Base 24 doesn't have a get API to offer, our system can't provide that either. Therefore, for the PUT and DELETE methods, you must register the "terminal id" response data and fulfill your own needs.
      operationId: addTerminal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenericTerminalRequestDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PcfResponse'
    delete:
      tags:
        - maintenance-controller
      x-proxy-name: deleteTerminal
      x-group-name: maintenance-controller
      x-child-product-name: Terminal Maintenance
      description: |-
        To delete a terminal from an existing merchant, it will be mandatory to inform the terminal's identification number

        Important! As Base 24 doesn't have a get API to provide terminal id, this API doesn't have that either. So you must get the data from your internal system.
      operationId: deleteTerminal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenericTerminalRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PcfResponse'
  /api/v1/fdpos/{fdposId}:
    get:
      tags:
        - fdpos-controller
      x-proxy-name: getFdpos
      x-group-name: fdpos-controller
      x-child-product-name: Fdpos Terminals
      description: Retrieve the Fdpos
      operationId: get
      parameters:
        - name: fdposId
          in: path
          description: Fdpos' ID
          required: true
          schema:
            type: integer
          example: 234233
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FdposDto'
        '204':
          description: No register was found
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized request
        '403':
          description: Forbidden request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '502':
          description: API Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - fdpos-controller
      x-proxy-name: updateFdpos
      x-group-name: fdpos-controller
      x-child-product-name: Fdpos Terminals
      description: Updates the Fdpos
      operationId: updateFdpos
      parameters:
        - name: fdposId
          in: path
          description: Fdpos' ID
          required: true
          schema:
            type: integer
          example: 234233
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FdposDto'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FdposDto'
        '204':
          description: No register was found
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized request
        '403':
          description: Forbidden request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '502':
          description: API Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/application/{id}:
    put:
      tags:
        - application-impl-controller
      x-proxy-name: updateApplication
      x-group-name: Application-controller
      x-child-product-name: Boarding
      description: update the application
      operationId: update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FullApplicationDtoRequest_UpdateApplication'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullApplicationDtoResponse'
        '204':
          description: No register was found
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized request
        '403':
          description: Forbidden request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '502':
          description: API Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/diligence/{id}:
    get:
      tags:
        - diligence-controller
      x-proxy-name: getDilligence
      x-group-name: Dilligence-controller
      x-child-product-name: KYC
      description: get the application
      operationId: getApplication_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DiligenceApplicationResponse'
        '204':
          description: No register was found
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized request
        '403':
          description: Forbidden request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '502':
          description: API Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - diligence-controller
      x-proxy-name: updateDilligence
      x-group-name: Dilligence-controller
      x-child-product-name: KYC
      description: update the application
      operationId: updateApplication
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiligenceApplicationRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DiligenceApplicationResponse'
        '204':
          description: No register was found
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized request
        '403':
          description: Forbidden request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '502':
          description: API Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /token:
    post:
      tags:
        - token-controller
      x-proxy-name: postToken
      x-group-name: Token-controller
      x-child-product-name: Boarding
      description: retrieve a token for authentication
      operationId: token
      parameters:
        - name: grant_type
          in: query
          required: true
          schema:
            type: string
        - name: client_id
          in: query
          required: true
          schema:
            type: string
        - name: username
          in: query
          required: true
          schema:
            type: string
        - name: password
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DTokenResp'
  /api/v1/tms:
    post:
      tags:
        - tms-controller
      x-proxy-name: createTmsRequest
      x-group-name: Tms-controller
      x-child-product-name: Terminal Management System
      description: Saves new terminals to tms
      operationId: createApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TmsRequestDto'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TmsResponseDto'
        '204':
          description: No register was found
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized request
        '403':
          description: Forbidden request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '502':
          description: API Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/tmp:
    post:
      tags:
        - tmp-controller
      x-proxy-name: saveTmp
      x-group-name: tmp-controller
      x-child-product-name: Service Provider
      description: Create Order
      operationId: saveTmp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TmpInstallRequestDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TmpInstallResponseDto'
  /api/v1/fdpos:
    post:
      tags:
        - fdpos-controller
      x-proxy-name: createFdpos
      x-group-name: fdpos-controller
      x-child-product-name: Fdpos Terminals
      description: Creates a new Fdpos for an application
      operationId: createFdpos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FdposDto'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FdposDto'
        '204':
          description: No register was found
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized request
        '403':
          description: Forbidden request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '502':
          description: API Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/fdpos/terminals/{fdposId}:
    post:
      tags:
        - fdpos-controller
      x-proxy-name: postTerminals
      x-group-name: fdpos-controller
      x-child-product-name: Fdpos Terminals
      description: Add new FDPOS Terminals or update existing ones
      operationId: postTerminals
      parameters:
        - name: fdposId
          in: path
          description: Fdpos' ID
          required: true
          schema:
            type: integer
          example: 234233
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TerminalsDtoRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TerminalsDtoRequest'
        '204':
          description: No register was found
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized request
        '403':
          description: Forbidden request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '502':
          description: API Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/application:
    post:
      tags:
        - application-impl-controller
      x-proxy-name: createApplication
      x-group-name: Application-controller
      x-child-product-name: Boarding
      description: Create a new application for boarding
      operationId: createApplication_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FullApplicationDtoRequest_CreateApplication'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FullApplicationDtoResponse'
        '204':
          description: No register was found
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized request
        '403':
          description: Forbidden request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '502':
          description: API Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/application/{applicationId}/board:
    post:
      tags:
        - application-impl-controller
      x-proxy-name: startBoarding
      x-group-name: Application-controller
      x-child-product-name: Boarding
      description: Initiates boarding process for an application
      operationId: startProcess
      parameters:
        - name: applicationId
          in: path
          description: Application's ID
          required: true
          schema:
            type: integer
          example: 82341256
      responses:
        '200':
          description: Successful operation
        '204':
          description: No register was found
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized request
        '403':
          description: Forbidden request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '502':
          description: API Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/diligence:
    post:
      tags:
        - diligence-controller
      x-proxy-name: saveDilligence
      x-group-name: Dilligence-controller
      x-child-product-name: KYC
      description: save the application
      operationId: saveApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiligenceApplicationRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DiligenceApplicationResponse'
        '204':
          description: No register was found
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized request
        '403':
          description: Forbidden request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '502':
          description: API Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/tmp/application/{applicationId}:
    get:
      tags:
        - tmp-controller
      x-proxy-name: getTmp
      x-group-name: tmp-controller
      x-child-product-name: Service Provider
      description: Retrieve Order
      operationId: getTmp
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TmpTerminalDto'
  /api/v1/fdpos/terminalsAndFeatures/{countryCode}:
    get:
      tags:
        - fdpos-controller
      x-proxy-name: getTerminalsAndFeatures
      x-group-name: fdpos-controller
      x-child-product-name: Fdpos Terminals
      description: Retrieve FDPOS Terminals Information's
      operationId: getTerminalsAndFeatures
      parameters:
        - name: countryCode
          in: path
          description: 3 letter code - ISO-3166 alpha country code representing the country
          required: true
          schema:
            maxLength: 3
            minLength: 3
            pattern: '[A-Z]{3}'
            type: string
          example: BRB
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductsAndFeatures'
        '204':
          description: No register was found
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized request
        '403':
          description: Forbidden request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '502':
          description: API Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/application/{applicationId}:
    get:
      tags:
        - application-impl-controller
      x-proxy-name: getApplication
      x-group-name: Application-controller
      x-child-product-name: Boarding
      description: Retireves an application
      operationId: getApplication
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FullApplicationDtoResponse'
        '204':
          description: No register was found
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized request
        '403':
          description: Forbidden request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '502':
          description: API Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/application/transaction-charges:
    get:
      tags:
        - application-impl-controller
      x-proxy-name: getTransactionChargesPaginated
      x-group-name: Application-controller
      x-child-product-name: Boarding
      description: Retrieves Transaction Charges information paginate
      operationId: getTransactionCharges
      parameters:
        - name: offset
          in: query
          description: offset
          required: false
          allowEmptyValue: true
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
          example: 0
        - name: pageSize
          in: query
          description: Number of items per page
          required: false
          allowEmptyValue: true
          schema:
            minimum: 1
            type: integer
            format: int32
            default: 100
          example: 100
        - name: serviceIndex
          in: query
          description: Code id for the acquiring service. Filter results by specific service id.
          required: false
          allowEmptyValue: true
          schema:
            type: string
            default: ''
          example: 101
        - name: tariffIndex
          in: query
          description: Code Id for specific merchat tariff. Filter results by merchant tariff.
          required: false
          allowEmptyValue: true
          schema:
            type: string
            default: ''
          example: '000287'
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceTransactionChargeResponseDto'
        '204':
          description: No register was found
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized request
        '403':
          description: Forbidden request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '502':
          description: API Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/application/transaction-charges/all:
    get:
      tags:
        - application-impl-controller
      x-proxy-name: getAllTransactionCharges
      x-group-name: Application-controller
      x-child-product-name: Boarding
      description: Retrieves all Transaction Charges information   
      operationId: getAllTransactionCharges
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceTransactionChargeDto'
        '204':
          description: No register was found
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized request
        '403':
          description: Forbidden request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '502':
          description: API Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/application/services:
    get:
      tags:
        - application-impl-controller
      x-proxy-name: getServices
      x-group-name: Application-controller
      x-child-product-name: Boarding
      description: Retrieves Services Information
      operationId: findServiceTariff
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceTariff'
  /api/v1/application/reference-fields:
    get:
      tags:
        - application-impl-controller
      x-proxy-name: getReferenceFields
      x-group-name: Application-controller
      x-child-product-name: Boarding
      description: Retrieves Reference Fields information for each groupLevel
      operationId: referenceFields
      parameters:
        - name: groupLevel
          in: query
          description: The group level of merchant
          required: true
          schema:
            type: integer
            format: int32
          example: 3
        - name: countryCode
          in: query
          description: 3 letter code - ISO-3166 alpha country code representing the country
          required: true
          schema:
            type: string
          example: CHL
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FieldConfiguration_Basic'
  /api/v1/application/optional-details:
    get:
      tags:
        - application-impl-controller
      x-proxy-name: getOptionalDetails
      x-group-name: Application-controller
      x-child-product-name: Boarding
      description: Retrieves Omnipay Optional Details information
      operationId: findOptionaldetails
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OptionslDetailFilled'
  /api/v1/application/mcc:
    get:
      tags:
        - application-impl-controller
      x-proxy-name: getMccList
      x-group-name: Application-controller
      x-child-product-name: Boarding
      description: Retrieves MCC List        
      operationId: getMccList
      parameters:
        - name: page
          in: query
          description: Page Number
          required: false
          allowEmptyValue: true
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
          example: 0
        - name: pageSize
          in: query
          description: Number of items per page
          required: false
          allowEmptyValue: true
          schema:
            minimum: 1
            type: integer
            format: int32
            default: 15
          example: 15
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageMccDto'
        '204':
          description: No register was found
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized request
        '403':
          description: Forbidden request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '502':
          description: API Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/application/hierarchy:
    get:
      tags:
        - application-impl-controller
      x-proxy-name: searchForHierarchy
      x-group-name: Application-controller
      x-child-product-name: Boarding
      description: For find the parent merchant id for an application use this source. Please insert the MID, or Trade Name and the Level.
      operationId: searchForHierarchy
      parameters:
        - name: companyNameOrMID
          in: query
          description: Query information - Merchant Trade Name or MID (merchant id identification).
          required: true
          schema:
            maxLength: 2147483647
            minLength: 3
            type: string
        - name: merchantLevelCode
          in: query
          description: 'Query information - For each institution Boarding has parameterize a list o levels that represent the merchant hierarchy. To valid codes use this API - GET: /api/v1/application/data.'
          required: true
          schema:
            minimum: 1
            type: integer
            format: int32
        - name: page
          in: query
          description: Page Number
          required: false
          allowEmptyValue: true
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
          example: 0
        - name: pageSize
          in: query
          description: Number of items per page
          required: false
          allowEmptyValue: true
          schema:
            minimum: 1
            type: integer
            format: int32
            default: 15
          example: 15
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApplicationHierarchyArmor'
        '204':
          description: No register was found
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized request
        '403':
          description: Forbidden request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '502':
          description: API Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/application/data:
    get:
      tags:
        - application-impl-controller
      x-proxy-name: getData
      x-group-name: Application-controller
      x-child-product-name: Boarding
      description: Retrieves Institution information  
      operationId: findApplicationData
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DomainContextMainDecision'
        '204':
          description: No register was found
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized request
        '403':
          description: Forbidden request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '502':
          description: API Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/application/data/{countryCode}:
    get:
      tags:
        - application-impl-controller
      x-proxy-name: getDataByCountry
      x-group-name: Application-controller
      x-child-product-name: Boarding
      description: Retrieves Institution information by Country  
      operationId: findApplicationDataByCountry
      parameters:
        - name: countryCode
          in: path
          description: 3 letter code - ISO-3166 alpha country code representing the country
          required: true
          schema:
            maxLength: 3
            minLength: 3
            pattern: '[A-Z]{3}'
            type: string
          example: BRB
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DomainContextPerCountryMainDecision'
        '204':
          description: No register was found
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized request
        '403':
          description: Forbidden request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '502':
          description: API Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/application/contracts:
    get:
      tags:
        - application-impl-controller
      x-proxy-name: getContracts
      x-group-name: Application-controller
      x-child-product-name: Boarding
      description: Retrieves Institution Contracts information
      operationId: findContracts
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContractFilled'
  /api/v1/application/acquirer-profile:
    get:
      tags:
        - application-impl-controller
      x-proxy-name: getAcquirerProfile
      x-group-name: Application-controller
      x-child-product-name: Boarding
      description: Retrieves Backend Institution information  
      operationId: retrieveOmniData
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GenericField'
        '204':
          description: No register was found
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized request
        '403':
          description: Forbidden request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '502':
          description: API Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/application/account-type:
    get:
      tags:
        - application-impl-controller
      x-proxy-name: getAccountType
      x-group-name: Application-controller
      x-child-product-name: Boarding
      description: Retrieves Institution´s Account Type information  
      operationId: findAccountType
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/AccountType'
        '204':
          description: No register was found
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized request
        '403':
          description: Forbidden request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '502':
          description: API Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/application/account-settlements:
    get:
      tags:
        - application-impl-controller
      x-proxy-name: getAccountSettlement
      x-group-name: Application-controller
      x-child-product-name: Boarding
      description: Retrieves Institution´s Settlement information  
      operationId: getAccountSettlements
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '204':
          description: No register was found
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized request
        '403':
          description: Forbidden request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '502':
          description: API Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/application/account-record:
    get:
      tags:
        - application-impl-controller
      x-proxy-name: getAccountRecord
      x-group-name: Application-controller
      x-child-product-name: Boarding
      description: Retrieves Account Record information by type and currency  
      operationId: findAccountRecord
      parameters:
        - name: accountType
          in: query
          required: true
          schema:
            type: string
        - name: accountCurrency
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContractAccountFee'
        '204':
          description: No register was found
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized request
        '403':
          description: Forbidden request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '502':
          description: API Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/application/account-fees:
    get:
      tags:
        - application-impl-controller
      x-proxy-name: getAccountFees
      x-group-name: Application-controller
      x-child-product-name: Boarding
      description: Retrieves Account Fees information  
      operationId: getAccountFees
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContractAccountFee'
        '204':
          description: No register was found
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized request
        '403':
          description: Forbidden request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '502':
          description: API Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/application/account-currency:
    get:
      tags:
        - application-impl-controller
      x-proxy-name: getAccountCurrency
      x-group-name: Application-controller
      x-child-product-name: Boarding
      description: Retrieves Institution´s Account Currency information  
      operationId: findAccountCurrency
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
        '204':
          description: No register was found
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized request
        '403':
          description: Forbidden request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '502':
          description: API Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    AddressTmpDto:
      required:
        - address
        - city
        - number
        - state
        - zipCode
      type: object
      properties:
        address:
          maxLength: 50
          minLength: 0
          type: string
          description: Address of merchant
          example: Rua Santa Rosa
        number:
          maxLength: 35
          minLength: 0
          type: string
          description: Number of address of merchant
          example: '360'
        complement:
          maxLength: 35
          minLength: 0
          type: string
          description: Complement of address of merchant
          example: Loja 26
        neighborhood:
          maxLength: 35
          minLength: 0
          type: string
          description: Neighborhood of address of merchant
          example: Centro
        zipCode:
          maxLength: 10
          minLength: 0
          type: string
          description: Zipcode of address of merchant
          example: '49010640'
        state:
          maxLength: 2
          minLength: 0
          type: string
          description: State of address of merchant
          example: SE
        city:
          maxLength: 35
          minLength: 0
          type: string
          description: City of address of merchant
          example: Aracaju
        customerPhoneNumber:
          type: string
    TmpInstallUpdateRequestDto:
      type: object
      properties:
        typeTechnology:
          type: string
        address:
          $ref: '#/components/schemas/AddressTmpDto'
    Address:
      type: object
      properties:
        address:
          type: string
        number:
          type: string
        complement:
          type: string
        neighborhood:
          type: string
        zipCode:
          type: string
        state:
          type: string
        city:
          type: string
        customerPhoneNumber:
          type: string
    ApplicationStatusEnum:
      type: string
      description: |-
        * IN_PROGRESS - The application has an ID generated. Some information is saved, but not been applied yet
        * CANCELED - This application has been canceled by the user
        * REJECTED - Rejected during user review.
        * APPROVED - Approved during review.
        * SUCCESSFUL_PROCESSED - Has been successfully processed
        * FAIL_PROCESSED - Has been processed, but has failed* BOARDING_PROCESS - Started bording Process* UNDER_REVIEW - Under review
      enum:
        - IN_PROGRESS
        - CANCELED
        - REJECTED
        - APPROVED
        - FAIL_PROCESSED
        - SUCCESSFUL_PROCESSED
        - BOARDING_PROCESS
        - UNDER_REVIEW
    Bit63:
      type: object
      properties:
        idOnbBit63:
          type: integer
        idSpecialConditional:
          type: string
        notesOfSpecialConditional:
          type: string
        descriptionFlag:
          type: string
        idModal:
          type: string
        mobileOperatorRegistration:
          type: string
          enum:
            - SEM_CHIP
            - CHIP_VIVO
            - CHIP_TIM
            - CHIP_CLARO
            - CHIP_OI
            - CHIP_ALGAR
        idMotive:
          type: string
        descriptionMotive:
          type: string
        idImmediateDelivery:
          type: string
        descriptionImmediateDelivery:
          type: string
        simCardType:
          type: string
          enum:
            - ONE-PIECE
            - TRIPLE-CUT
        lunchTimeList:
          type: array
          items:
            $ref: '#/components/schemas/LunchTime'
        maintenanceTimeList:
          type: array
          items:
            $ref: '#/components/schemas/MaintenanceTime'
        longitude:
          type: string
        latitude:
          type: string
        recipientName:
          type: string
        contactRecipient:
          type: string
        referencePoint:
          type: string
        complement:
          type: string
        establishmentName:
          type: string
        activityBranch:
          type: string
        typeLocationDelivery:
          type: string
        free:
          type: string
        idMaintenanceMotive:
          type: string
    LocalTime:
      type: object
      properties:
        hour:
          type: integer
          format: int32
        minute:
          type: integer
          format: int32
        second:
          type: integer
          format: int32
        nano:
          type: integer
          format: int32
    LunchTime:
      type: object
      properties:
        idOnbLunchTime:
          type: integer
        bit63:
          $ref: '#/components/schemas/Bit63'
        weekDay:
          type: string
          enum:
            - SUNDAY
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
        openingTime:
          $ref: '#/components/schemas/LocalTime'
        openingLunchTime:
          $ref: '#/components/schemas/LocalTime'
        closingLunchTime:
          $ref: '#/components/schemas/LocalTime'
        closingTime:
          $ref: '#/components/schemas/LocalTime'
    MaintenanceTime:
      type: object
      properties:
        idOnbMaintenanceTime:
          type: integer
        bit63:
          $ref: '#/components/schemas/Bit63'
        weekDay:
          type: string
          enum:
            - SUNDAY
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
        openingTime:
          $ref: '#/components/schemas/LocalTime'
        openingLunchTime:
          $ref: '#/components/schemas/LocalTime'
        closingLunchTime:
          $ref: '#/components/schemas/LocalTime'
        closingTime:
          $ref: '#/components/schemas/LocalTime'
    Product:
      type: object
      properties:
        idOnbProduct:
          type: integer
        codeProduct:
          type: string
        descriptionProduct:
          type: string
        quantity:
          type: string
        typeServiceProvider:
          type: string
          enum:
            - INCLUDE
            - REMOVE
            - BOTH
    TmpEntity:
      type: object
      properties:
        idOnbTmp:
          type: integer
        idOnbOmnipay:
          type: integer
        timeTransaction:
          type: string
        dateTransaction:
          type: string
        terminalId:
          type: string
        typeTechnology:
          type: string
        additionalData63:
          $ref: '#/components/schemas/Bit63'
        product:
          $ref: '#/components/schemas/Product'
        address:
          $ref: '#/components/schemas/Address'
        status:
          $ref: '#/components/schemas/ApplicationStatusEnum'
        statusDescription:
          type: string
        statusUpdateTime:
          type: string
          format: date-time
        referenceNumberIDResponseIntegration:
          type: string
        cardAcceptorIDCodeResponseIntegration:
          type: string
        cardAcceptorTermIDResponseIntegration:
          type: string
        ticketTypeResponseIntegration:
          type: string
    EncryptionData:
      required:
        - checkDigitsMac
        - checkDigitsPin
        - macKey
        - macType
        - pinMasterKey
        - pinType
        - validatePin
      type: object
      properties:
        checkDigitsMac:
          type: string
        checkDigitsPin:
          type: string
        macKey:
          maximum: 16
          minimum: 16
          type: integer
          format: int32
        macType:
          type: integer
          format: int32
        pinCharacter:
          type: string
        pinMasterKey:
          type: string
        pinType:
          type: integer
          format: int32
        validatePin:
          type: string
    GenericTerminalRequest:
      required:
        - dateTime
        - fileName
        - maintenanceData
        - retailCardDataLayout122
        - retailLayout
        - retailerId
        - traceAuditNumber
      type: object
      properties:
        dateTime:
          type: string
        fileName:
          type: string
        maintenanceData:
          $ref: '#/components/schemas/MaintenanceData'
        retailCardDataLayout122:
          $ref: '#/components/schemas/RetailCardDataLayout122'
        retailLayout:
          $ref: '#/components/schemas/RetailLayout'
        retailerId:
          type: string
        terminalCardDataLayout:
          $ref: '#/components/schemas/TerminalCardDataLayout'
        terminalCardLayoutPTDD2:
          $ref: '#/components/schemas/TerminalCardLayoutPTDD2'
        terminalId:
          type: string
        terminalLayout:
          $ref: '#/components/schemas/TerminalLayout'
        traceAuditNumber:
          type: integer
          format: int32
    MaintenanceData:
      required:
        - completionRequired
        - dpcNumber
        - lastTransactionTime
        - logIndicator
        - logicalNetwork
        - stationIndex
        - userInformation
      type: object
      properties:
        completionRequired:
          type: string
        dpcNumber:
          maximum: 9999
          type: integer
          format: int32
        lastTransactionTime:
          type: string
        logIndicator:
          type: string
        logicalNetwork:
          type: string
        stationIndex:
          maximum: 9999
          type: integer
          format: int32
        userInformation:
          type: string
    RetailCardDataLayout122:
      required:
        - recordToBeUpdated
      type: object
      properties:
        fileLayout:
          type: string
        recordToBeUpdated:
          $ref: '#/components/schemas/RetailCardDataLayout122Record'
    RetailCardDataLayout122Record:
      required:
        - cardCount
        - cards
      type: object
      properties:
        cardCount:
          maximum: 30
          minimum: 1
          type: integer
          format: int32
        cards:
          type: array
          items:
            $ref: '#/components/schemas/RetailCardDataLayout122RecordCard'
    RetailCardDataLayout122RecordCard:
      required:
        - alternateId
        - cardType
        - ceilingLimit
        - checkFile
        - draftCapture
      type: object
      properties:
        alternateId:
          type: string
        cardType:
          type: string
        ceilingLimit:
          maximum: 999999999
          type: integer
          format: int32
        checkFile:
          type: string
        draftCapture:
          maximum: 9
          type: integer
          format: int32
    RetailCardDataLayout124RecordCard:
      type: object
      properties:
        cardType:
          type: string
        cashAdvanceLimit:
          maximum: 999999999
          type: integer
          format: int32
        electronicFollowup:
          maximum: 9
          type: integer
          format: int32
        mailOrderLimit:
          maximum: 999999999
          type: integer
          format: int32
        purchaseFloorLimit:
          maximum: 999999999
          type: integer
          format: int32
        tranLimit:
          maximum: 999999999
          type: integer
          format: int32
        transactionProfile:
          maximum: 9
          type: integer
          format: int32
    RetailLayout:
      required:
        - FIID
        - account
        - acquirerTransactionProfile
        - address
        - afterHourPhone
        - city
        - country
        - county
        - fiid
        - fileLayout
        - multipleInstallmentTransaction
        - phone
        - postalCode
        - referralPhone
        - retailerGroup
        - retailerId
        - retailerName
        - retailerProgram
        - retailerRegion
        - serviceStablishment
        - settlementMethod
        - sicCode
        - state
      type: object
      properties:
        account:
          type: string
        acquirerTransactionProfile:
          type: string
        address:
          type: string
        afterHourPhone:
          type: string
        city:
          type: string
        country:
          type: string
        county:
          type: string
        fileLayout:
          type: string
        multipleInstallmentTransaction:
          type: string
        phone:
          type: string
        postalCode:
          type: string
        referralPhone:
          type: string
        retailerGroup:
          type: string
        retailerId:
          type: string
        retailerName:
          type: string
        retailerProgram:
          type: string
        retailerRegion:
          type: string
        serviceStablishment:
          maximum: 9999999999
          type: integer
          format: int64
        settlementMethod:
          type: string
        sicCode:
          maximum: 9999
          type: integer
          format: int32
        state:
          type: string
        FIID:
          type: string
        fiid:
          type: string
    ServiceRepresentativeData:
      required:
        - address
        - city
      type: object
      properties:
        address:
          type: string
        city:
          type: string
        country:
          type: string
        name:
          type: string
        phone:
          type: string
    TerminalCapabilities:
      required:
        - cardCapture
        - cardholderAuthentication
        - cardholderTerminal
        - contactCapabilities
        - contactlessCapabilities
        - terminalAttendance
        - terminalCapabilities
        - terminalLocation
      type: object
      properties:
        cardCapture:
          type: integer
          format: int32
        cardholderAuthentication:
          type: integer
          format: int32
        cardholderTerminal:
          type: integer
          format: int32
        contactCapabilities:
          type: integer
          format: int32
        contactlessCapabilities:
          type: integer
          format: int32
        softwareControl:
          type: string
        terminalAttendance:
          type: integer
          format: int32
        terminalCapabilities:
          type: integer
          format: int32
        terminalControl:
          type: string
        terminalLocation:
          type: integer
          format: int32
        terminalVersion:
          type: string
    TerminalCardDataLayout:
      type: object
      properties:
        fileLayout:
          type: string
        record:
          $ref: '#/components/schemas/TerminalCardDataLayoutRecord'
    TerminalCardDataLayoutRecord:
      required:
        - cards
      type: object
      properties:
        cardCount:
          type: integer
          format: int32
        cards:
          type: array
          items:
            $ref: '#/components/schemas/TerminalCardDataLayoutRecordCard'
    TerminalCardDataLayoutRecordCard:
      type: object
      properties:
        cardType:
          type: string
        cashAdvanceLimit:
          maximum: 999999999
          type: integer
          format: int32
        electronicFollowup:
          maximum: 9
          type: integer
          format: int32
        mailOrderLimit:
          maximum: 999999999
          type: integer
          format: int32
        purchaseFloorLimit:
          maximum: 999999999
          type: integer
          format: int32
        tranLimit:
          maximum: 999999999
          type: integer
          format: int32
        transactionProfile:
          maximum: 9
          type: integer
          format: int32
    TerminalCardLayoutPTDD2:
      type: object
      properties:
        fileLayout:
          type: string
        recordToBeUpdated:
          $ref: '#/components/schemas/TerminalCardLayoutPTDD2Record'
    TerminalCardLayoutPTDD2Record:
      type: object
      properties:
        cardCount:
          maximum: 20
          type: integer
          format: int32
        cards:
          type: array
          items:
            $ref: '#/components/schemas/RetailCardDataLayout124RecordCard'
    TerminalFlag:
      required:
        - acquiredProfile
        - adjustAmt1
        - authAmount
        - balanceReturn
        - completeData
        - currencyCode
        - custBalanceDisplay
        - salesDraft
        - serialNumber
      type: object
      properties:
        acquiredProfile:
          type: string
        adjustAmt1:
          type: string
        authAmount:
          type: string
        balanceReturn:
          type: string
        completeData:
          type: string
        currencyCode:
          maximum: 999
          minimum: 1
          type: integer
          format: int32
        custBalanceDisplay:
          maximum: 9
          minimum: 1
          type: integer
          format: int32
        salesDraft:
          type: integer
          format: int32
        serialNumber:
          maximum: 9
          minimum: 9
          type: integer
          format: int32
        softwareRelease:
          type: string
    TerminalLayout:
      required:
        - encryptionData
        - recordType
        - siteId
        - termStatus
        - terminalCapabilities
        - terminalFlag
        - terminalGroup
        - terminalID
        - terminalLimit
        - terminalOwner
        - terminalType
        - timeOffset
      type: object
      properties:
        billingInfo:
          type: string
        encryptionData:
          $ref: '#/components/schemas/EncryptionData'
        fileLayout:
          type: string
        languageId:
          type: string
        recordType:
          type: string
        serviceRepresentativeData:
          $ref: '#/components/schemas/ServiceRepresentativeData'
        siteId:
          type: string
        termStatus:
          type: string
        terminalCapabilities:
          $ref: '#/components/schemas/TerminalCapabilities'
        terminalFlag:
          $ref: '#/components/schemas/TerminalFlag'
        terminalGroup:
          type: string
        terminalID:
          type: string
        terminalLimit:
          $ref: '#/components/schemas/TerminalLimit'
        terminalOwner:
          type: string
        terminalType:
          type: string
        timeOffset:
          type: string
    TerminalLimit:
      required:
        - adjustCount
        - adjustLimit
        - defaultAmount
        - preIncrement
        - preTime
        - returnCount
        - returnLimit
      type: object
      properties:
        adjustCount:
          type: string
        adjustLimit:
          type: string
        defaultAmount:
          type: integer
          format: int32
        preIncrement:
          maximum: 9
          type: integer
          format: int32
        preTime:
          type: string
        returnCount:
          maximum: 4
          minimum: 4
          type: integer
          format: int32
        returnLimit:
          type: string
    MaintenanceDataResponse:
      type: object
      properties:
        completionRequired:
          type: string
        dpcNumber:
          type: integer
          format: int32
        lastTransactionTime:
          type: string
        logIndicator:
          type: string
        logicalNetwork:
          type: string
        stationIndex:
          type: integer
          format: int32
        userInformation:
          type: string
    PcfDataResponse:
      type: object
      properties:
        additionalData:
          type: string
        dateTime:
          type: string
        fileName:
          type: string
        fileUpdateCode:
          type: string
        maintenanceData:
          $ref: '#/components/schemas/MaintenanceDataResponse'
        responseCode:
          type: string
        retailerId:
          type: string
        terminalId:
          type: string
        traceAuditNumber:
          type: integer
          format: int32
    PcfResponse:
      type: object
      properties:
        hasError:
          type: boolean
        errors:
          type: array
          items:
            type: object
        data:
          $ref: '#/components/schemas/PcfDataResponse'
    FdposDto:
      type: object
      properties:
        id:
          type: integer
        posUsername:
          maxLength: 20
          minLength: 0
          type: string
          description: FDPOS provided username to validate authorization within FDPOS
          nullable: true
        posPassword:
          maxLength: 20
          minLength: 0
          type: string
          description: FDPOS provided password to validate authorization within FDPOS
          nullable: true
        rqdtMerchantNumber:
          maxLength: 16
          minLength: 0
          type: string
          description: It refers to the backend MID. Currently FDPOS supports North and Omaha backend MID
          nullable: true
        rqdtKeyedBy:
          maxLength: 30
          minLength: 0
          type: string
          description: User name who is actually using this service from source system. Actual user id/Username of originating system. In case if this service is being used by any batch job or process, send ‘XXXXXSYS’
          nullable: true
          example: '118380'
        rqdtExternalOrderId:
          maxLength: 30
          minLength: 0
          type: string
          description: if source system is having any order id associated with the request
          nullable: true
          example: CMS2398614
        rqdtAccountType:
          type: string
          description: Account types supported by FDPOS for boarding fresh equipment
          nullable: true
          example: '[ NEW_ACCOUNT, ADDITIONAL, EQUIPMENT ]'
          enum:
            - NEW_ACCONT
            - ADDITINAL
            - EQUIPMENT
        rqdtSalesRepId:
          maxLength: 4
          minLength: 0
          type: string
          description: Account types supported by FDPOS for boarding fresh equipment
          nullable: true
          example: '1234'
        rqdtSalesRegion:
          maxLength: 24
          minLength: 0
          type: string
          description: Holds the salesman region from which the equipment data is keyed into FDPOS
          nullable: true
          example: BOA
        rqdtTrainingInd:
          type: string
          description: Holds flag that determines whether the merchant needs training or not. X – 'No Training Needed’, I – 'Installer Will Train’, N – 'MAG Will Train’, Y – ‘Sales Rep Will Train’
          nullable: true
          example: X, I, N, Y
          enum:
            - X
            - I
            - 'N'
            - 'Y'
        rqdtTrainingBestTime:
          type: string
          description: Holds information that tells the best time to start training. Time in 24:00 format
          nullable: true
          example: '08:00'
        rqdtBestContactStartTime:
          type: string
          description: Holds information that tells the best time to contact the merchant. Time in 24:00 format
          nullable: true
          example: '14:40'
        rqdtBestContactStopTime:
          type: string
          description: Holds information that tells the time after which the merchant won’t take any helpdesk call. Time in 24:00 format
          nullable: true
          example: '17:00'
        rqdtInstallComments:
          maxLength: 300
          minLength: 0
          type: string
          description: 'Installation comments if any to be referred to by deployment group or FD helpdesk. ex: IC VERIFY INSTALL AND TRAINING, SPEAKS VERY GOOD ENGLISH WITH JAPANESE ACCENT, PURCH POS REST 10 MONTH, FD200TI C/O'
          nullable: true
          example: IC VERIFY INSTALL AND TRAINING
        rqdtInstallContact:
          maxLength: 24
          minLength: 0
          type: string
          description: Name of the person if any to be referred to by deployment group or FD helpdesk for setting up the terminal
          nullable: true
          example: TOM GLASHEEN
        rqdtLanguagePreference:
          maxLength: 3
          minLength: 0
          type: string
          description: Language in which the FD helpdesk/deployment group will talk with the merchant. The merchant is proficient with this language. Three letter codes in ISO standard
          nullable: true
          example: ENG
        rqdtAltPhoneNumber:
          maxLength: 10
          minLength: 0
          type: string
          example: '2482240072'
        rqdtShipTo:
          type: string
          description: 'Express where to ship in 6 character. Mandatory Order needs to be shipped to different address than Merchant address. Enum: [ OTHER, NOSHIP, OUTLET, DO_NOT, BILLTO ]Alternate phone number in which the FD helpdesk/deployment group will talk to the merchant'
          enum:
            - OTHER
            - NOSHIP
            - OUTLET
            - DO_NOT
            - BILLTO
        rqdtShipAttention:
          maxLength: 24
          minLength: 0
          type: string
          description: Any wording which will get attention during shipping. Any wording in 24 characters, Mandatory Order needs to be shipped to different address than Merchant address
          nullable: true
        rqdtShipStreet:
          maxLength: 40
          minLength: 0
          type: string
          description: Shipping street name. Any wording in 40 characters, Mandatory Order needs to be shipped to different address than Merchant address
          nullable: true
          example: 4000 CORAL RIDGE DRIVE
        rqdtShipCity:
          maxLength: 24
          minLength: 0
          type: string
          description: Shipping city name. Any wording in 24 characters, Mandatory Order needs to be shipped to different address than Merchant address
          nullable: true
          example: CORALSPRINGS
        rqdtShipState:
          maxLength: 2
          minLength: 0
          type: string
          description: Shipping state name. ISO standard state code, FL, MD etc. Mandatory Order needs to be shipped to different address than Merchant address
          nullable: true
          example: FL
        rqdtShipZip:
          maxLength: 9
          minLength: 0
          type: string
          description: Shipping zip code. Mandatory Order needs to be shipped to different address than Merchant address
          nullable: true
          example: '33065'
        rqdtDeployable:
          maxLength: 1
          type: integer
          format: int32
        rqdtBlockDeployment:
          maxLength: 1
          type: integer
          format: int32
        rqdtDeploymentInd:
          maxLength: 1
          type: string
          description: Deployment parameter for deployable/Log request to be created at POS. L –- 'Log request’, D – ‘Deployable TASQ Request’
          nullable: true
          example: '[ L, D ]'
          enum:
            - L
            - D
        rqdtBlockDeployentReason:
          maxLength: 60
          minLength: 0
          type: string
        requestId:
          maxLength: 10
          minLength: 0
          type: string
          description: Request Id is a value that is receive, When boarding send to FDPOS. He is to control items.
          nullable: true
        merchantData:
          $ref: '#/components/schemas/MerchantData'
        installmentPaymentIndicator:
          maxLength: 300
          minLength: 0
          type: string
          description: .
          nullable: true
        fullAcquirer:
          maxLength: 1
          minLength: 0
          type: string
          nullable: true
        paymentFacilitatorId:
          maxLength: 11
          minLength: 0
          type: string
          nullable: true
        isoId:
          maxLength: 11
          minLength: 0
          type: string
          nullable: true
      description: Fdpos' data
    MerchantData:
      type: object
      properties:
        multiCurrencyInd:
          pattern: '[A-Za-z0-9]+'
          type: string
    ErrorResponse:
      type: object
      properties:
        statusCode:
          type: integer
          description: HTTP status code
          format: int32
        statusMessage:
          type: string
          description: HTTP status message
        errorType:
          type: string
          description: HTTP error type
        requestPath:
          type: string
          description: HTTP request path
        errors:
          type: array
          description: Error list
          items:
            type: object
            additionalProperties:
              type: object
              description: Error list
            description: Error list
    AccountDto_UpdateApplication:
      required:
        - accountCurrencyCode
        - accountTypeIndex
        - billingLevel
      type: object
      properties:
        id:
          maximum: 1e+27
          type: integer
          description: Account identification inside our Boarding System.
        billingLevel:
          type: boolean
          description: Indicates if the account will be settled to on a funding. Billing accounts should have the Bank Account details filled.
          default: false
        receiverCountryCode:
          maxLength: 3
          minLength: 3
          pattern: ^[A-Z]{3}$
          type: string
          description: ISO-3166 alpha country code for the merchant's bank country. Mandatory if billing level is set to true.
          nullable: true
          example: IRE
        statementTypeIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Statement type to be generated. As per the predefined values or left blank where not applicable. For possible values check get:/api/v1/application/acquirer-profile with field name STATEMENTTYPEINDEX.
          example: '001'
        statementGenerationCode:
          type: string
          description: Option for statement generation.
          nullable: true
          example: SUPPRESS
          default: GENERATE_IF_ACTIVITY
          enum:
            - SUPPRESS
            - GENERATE
            - GENERATE_IF_ACTIVITY
            - GENERATE_IF_NO_ACTIVITY
        annualFeeDueDate:
          pattern: ^([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])$
          type: string
          description: YYYYMMDD Date which the annual fee for this account should be generated
          format: date
        calendarTypeIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Defines the scheme exception days when calculating the funding date of merchant payments. As per the institution configuration. For possible values check get:/api/v1/application/acquirer-profile with field name CALENDARTYPEINDEX.
          example: '001'
        paymentReference:
          maxLength: 18
          pattern: ^[0-9a-zA-Z]{0,18}$
          type: string
          description: For institutions using IFS funding file this field should contain the direct debit contract number (required for merchant debits). For others it is a reference text to display on merchant's bank statement if supported on the funding file.
          nullable: true
          example: '999999999999999999'
        payable:
          $ref: '#/components/schemas/PayableDto_UpdateApplication'
        receivable:
          $ref: '#/components/schemas/ReceivableDto_UpdateApplication'
        applicationId:
          maximum: 1e+26
          type: integer
          description: Application ID, owner of this Account
        accountTypeIndex:
          maxLength: 3
          minLength: 3
          type: string
          description: Index of the account type to be assigned to the merchant. For a list of valid codes use API get /application/account-settlements with field name accountSettlement.accountType or get /application/account-type.
          nullable: true
          example: '170'
        accountCurrencyCode:
          maxLength: 3
          minLength: 3
          pattern: ^[a-zA-Z]{3}$
          type: string
          description: ISO 4217 currency of the account selected, possible values are restricted based on the institution configuration. For a list of valid codes use API get /application/account-fees with field name accountCurrencyCode or get /application/account-currency.
          nullable: true
          example: EUR
    AddressDto_UpdateApplication:
      required:
        - categoryIndex
        - city
        - contactName
        - countryCode
        - email
        - line1
        - postCode
        - telephone
      type: object
      properties:
        categoryIndex:
          maxLength: 3
          minLength: 0
          pattern: ^[0-9]{3}$
          type: string
          description: The category of the address to be added. It can be a mandatory or optional category, defined per Institution. For possible values check get:/api/v1/application/acquirer-profile with field name addressCategories.
          nullable: true
          example: '001'
        contactName:
          maxLength: 35
          minLength: 0
          type: string
          description: The contact name at the address location. Any extended ASCII characters contains 2 bytes
          nullable: true
          example: Joe Smith
        groupSpecific:
          type: boolean
          description: Only applicable if a merchant is in a hierarchy. Indicates if the address is to be used for all merchants within the group.
          nullable: true
          example: false
        line1:
          maxLength: 35
          minLength: 0
          type: string
          description: Merchant address line 1 for the specified address category.
          nullable: true
          example: 15 Beach Street
        line2:
          maxLength: 35
          minLength: 0
          type: string
          description: Merchant address line 2 for the specified address category.
          nullable: true
          example: 4th Zone
        line3:
          maxLength: 35
          minLength: 0
          type: string
          description: Merchant address line 3 for the specified address category.
          nullable: true
          example: Bremen
        line4:
          maxLength: 35
          minLength: 0
          type: string
          description: Merchant address line 4 for the specified address category.
          nullable: true
          example: Saxony
        line5:
          maxLength: 35
          minLength: 0
          type: string
          description: Merchant address line 5 for the specified address category.
          nullable: true
          example: Ireland
        postCode:
          maxLength: 20
          minLength: 0
          type: string
          description: Merchant address post code or zip code for the specified address category.
          example: D18 R219
        city:
          maxLength: 35
          minLength: 0
          type: string
          description: Merchant city for the specified address category.
          example: Frankfurt
        state:
          maxLength: 3
          minLength: 0
          type: string
          description: Merchant state for the specified address category.
          example: TX2
        countryCode:
          maxLength: 3
          minLength: 3
          pattern: ^[A-Z]{3}$
          type: string
          description: ISO-3166 alpha country code representing the country the address category is located in, the values are restricted based on institutions configuration. For possible values check get:/api/v1/application/acquirer-profile with field name COUNTRYCODE.
          nullable: true
          example: IRE
        telephone:
          maxLength: 15
          minLength: 0
          pattern: ^[a-zA-Z0-9_ \.\-\,]{0,15}$
          type: string
          description: Telephone at the specified address category
          nullable: true
          example: '00353112345678'
        fax:
          maxLength: 15
          minLength: 0
          pattern: ^[a-zA-Z0-9_ \.\-\,]{0,15}$
          type: string
          description: Fax at the specified address category
          nullable: true
          example: '005351456789'
        deliveryMethodIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Delivery method code of correspondence to this address; however, it is dependent on the delivery solutions in place for the given institution. For possible values check get:/api/v1/application/acquirer-profile with field name DELIVERYMETHODINDEX.
          nullable: true
          example: '200'
        email:
          maxLength: 60
          pattern: ^([a-zA-Z0-9_\-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$
          type: string
          description: Email address (with extended length capacity) for the specified address category
          example: abc@omnipay.com
        effectiveDate:
          maxLength: 8
          minLength: 8
          pattern: "^([0-9]{4})(-?)(1[0-2]|0[1-9])\x02(3[01]|0[1-9]|[12][0-9])$"
          type: string
          description: Effective date of the address. When selecting address information the Omnipay platform will select the most recent effective address. For auditing reasons merchant address can not be deleted after it has become effective hence the use of effective dates for addresses. Format YYYYMMDD. If ommited the default is the current instituiton posting date.
          format: date
          nullable: true
        addressId:
          maximum: 1e+27
          type: integer
          description: Address identification inside our Boarding System.
        applicationId:
          maximum: 1e+26
          type: integer
          description: Application ID, owner of this address
    ContractDto_UpdateApplication:
      required:
        - clientRegionIndex
        - clientTariffIndex
        - postingTariffIndex
        - serviceContractIndex
        - settlementMethodIndex
      type: object
      properties:
        serviceContractIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: 'The service contract defines the processing rules for a merchant. For a list of valid codes use this API - GET: /api/v1/application/contracts with field name serviceContractIndex'
          example: '497'
        clientTariffIndex:
          maxLength: 6
          pattern: ^[0-9]{0,6}$
          type: string
          description: 'The client tariff determines the set of account fees applicable to the merchant. For a list of valid codes use this API - GET: /api/v1/application/contracts with field name clientTariffIndex'
          example: '321'
        postingTariffIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: 'The posting tariff determines how transactions and fees are posted to the merchant accounts. For a list of valid codes use this API - GET: /api/v1/application/contracts with field name postingTariffIndex'
          example: '503'
        settlementMethodIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: 'The settlement method defines the frequency and grouping of transactions posted to makeup a payment as well as the funding channel. For a list of valid codes use this API - GET: /api/v1/application/contracts with field name settlementMethodIndex'
          example: '179'
        paymentMethodIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: 'Institution defined value related to a specific payment interface.Default to spaces when no values provided. For a list of valid codes use this API - GET: /api/v1/application/contracts with field name paymentMethodIndex.'
          nullable: true
          example: '043'
        protectAgainstFXChange:
          type: boolean
          description: |-
            Flag to indicate if the merchant is protected against currency
            fluctuations on the event the transaction is disputed and the transaction currency is different to the merchant funding currency.
        clientRegionIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: 'The selected client region will determine how the transactions are settled to the scheme. For a list of valid codes use this API - GET: /api/v1/application/contracts with field name clientRegionIndex.'
          example: '901'
        tierStructureIndex:
          maxLength: 3
          pattern: ^[0-9]{0,3}$
          type: string
          description: 'If tier pricing is active on the institutions this field indicates which is the Tier Structure assigned to the merchant, if not in use for the institution use 000=N/A for this field. For a list of valid codes use this API - GET: /api/v1/application/contracts with field name tierStructureIndex.'
          nullable: true
          example: '1'
        reclassBillbackIndicatorCode:
          type: string
          description: Indicator to pass the Reclass fee to the merchant. Reclass Fees can only be passed to the merchant when configured for the Institution.
          nullable: true
          example: NA
          default: NA
          enum:
            - NA
            - NO_BILLBACK
            - AUT_BILLBACK_DR
            - AUT_BILLBACK_ALL
            - MANUAL_BILLBACK
        withholdIncomeTariffIndex:
          maxLength: 6
          minLength: 6
          pattern: ^[0-9]{6}$
          type: string
          description: 'The withhold income tariff id for the institution. For a list of valid codes use this API - GET: /api/v1/application/contracts with field name withholdIncomeTariffIndex'
          nullable: true
          example: '001007'
        withholdVatTariffIndex:
          maxLength: 6
          minLength: 6
          pattern: ^[0-9]{6}$
          type: string
          description: 'The withhold vat tariff id for the institution. For a list of valid codes use this API - GET: /api/v1/application/contracts with field name withholdVatTariffIndex'
          nullable: true
          example: '001007'
        regionalTaxIndex:
          maxLength: 3
          pattern: ^[0-9]{0,3}$
          type: string
          description: Indicator if regional tax to be generated or not. For possible values check get:/api/v1/application/acquirer-profile with field name REGIONALTAXINDEX.
          nullable: true
          example: '1'
    EncryptionDataDto_UpdateApplication:
      required:
        - pinCharacter
      type: object
      properties:
        pinCharacter:
          type: string
          enum:
            - F
            - ' '
            - '0'
            - '1'
            - '2'
            - '3'
            - '4'
            - '5'
            - '6'
            - '7'
            - '8'
            - '9'
    FullApplicationDtoRequest_UpdateApplication:
      required:
        - main
      type: object
      properties:
        main:
          $ref: '#/components/schemas/MainDtoRequest_UpdateApplication'
        terminals-processing:
          type: array
          items:
            $ref: '#/components/schemas/TerminalRequestDto_UpdateApplication'
        e-store:
          $ref: '#/components/schemas/IpgRequestDto_UpdateApplication'
    HierarchyDto_UpdateApplication:
      type: object
      properties:
        internalMerchantId:
          pattern: ^[0-9]{8}$
          type: string
          description: Unique merchant number generated by Fiserv after submitting an application. It´ll be used in response only.
          readOnly: true
          example: '00000099'
        parentInternalMerchantId:
          pattern: ^[0-9]{8}$
          type: string
          description: The internal OmniPay MID to which the merchant needs to be linked to as a child merchant. When populated should be an existing group /sub group merchant MID.
          nullable: true
          example: '00000100'
      description: Hierarchy data
    IpgDto_UpdateApplication:
      required:
        - stFsCheckBlockedCard
        - stFsCheckBlockedClassC
        - stFsCheckBlockedIp
        - stFsCheckBlockedName
        - stTimezone
      type: object
      properties:
        id:
          type: integer
        mercUserId:
          type: string
          description: Database user id (in case of creating the store this user id will be used for the new user in the new store)
        mercUserPassword:
          maxLength: 32
          minLength: 0
          type: string
          description: user password
        mercUserCertificatePassword:
          maxLength: 32
          minLength: 0
          type: string
          description: certificate password
        mercUserCertificateId:
          maxLength: 50
          minLength: 0
          type: string
          description: Reference to the certificate content (located in mcsResponse/certificates). This element is used only in response if certificateDeliveryMethod is set to MCSRESPONSE
        stEmail:
          maxLength: 100
          minLength: 0
          type: string
          description: store email address.
        stUrl:
          maxLength: 100
          minLength: 0
          type: string
          description: store url addrress - (e.g. https://www.webshop.com)
          example: https://www.webshop.com
        stDefaultCurrency:
          pattern: '[A-Z]{3}'
          type: string
          description: ISO 3 byte alphnumeric currency code. For possible value use get /application/data/countrycode
        stTimezone:
          maxLength: 50
          minLength: 0
          type: string
          description: Timezone code (e.g. 'Europe/London', 'Europe/Berlin', 'Brazil/West'). For valid values get - /api/v1/application/data/{countryCode}
          example: Brazil/West
        stStatus:
          type: string
          description: Actual status of the store (e.g. OPEN,CLOSED)
          example: OPEN
          enum:
            - OPEN
            - CLOSED
        stOpenDate:
          type: string
          description: Open date of the store
          format: date
        stCloseDate:
          type: string
          description: Close date of the store
          format: date
        stAcquirer:
          maxLength: 32
          minLength: 0
          type: string
          description: Acquirer 3dsecure  configuration  name,  e.g.  'Dummy'  if  3dsecure  is  not  relevant  or  in  test  environments.  Please  obtain  list  of  names  from  your  support  team.
        certificateDeliveryMethod:
          maxLength: 256
          minLength: 0
          type: string
        stFsBinBlockProfile:
          maximum: 99
          type: integer
          description: '        1 - Germany                       2 - Germany, Austria, Switzerland                       3 - Ireland                       4 - Greece                       5 - Italy                       6 - Italy, Switzerland                       7 - United                       Kingdom                       8 - United Kingdom, Ireland                       9 - Austria, Belgium, Denmark, Finland, France, Germany, Ireland, Italy, Netherlands, Norway, Portugal, Spain, Sweden, Switzerland, United Kingdom, Greece                       10 -                       Above countries + Australia, Canada, New Zealand, Japan, USA                       11 - All countries except: Bulgaria, Cameroon, Egypt, Gambia, Ghana, Indonesia, Iran, Israel, Lithuania, Malaysia, Morocco, Nigeria,                       Pakistan, Romania, Russia, Turkey,                       Ukraine , Vietnam                       99 - All countries                       Mind this will be changed soon to support also profile sets of other regions'
          format: int32
          example: 1
        stFsCheckBlockedIp:
          type: boolean
          description: Logical value which determine if blocked IP check should be evaluated. In this check you can choose to block certain IP addresses from purchasing at your store. Anyone visiting your site from that IP address will not be able to purchase at your online store.
        stFsCheckBlockedClassC:
          type: boolean
          description: Logical value which determine if blocked class-C check should be evaluated. In this check you can choose to block certain class C addresses from purchasing at your store. Anyone visiting your site from that class C address will not be able to purchase at your online store.
        stFsCheckBlockedName:
          type: boolean
          description: Logical value which determine if blocked name check should be evaluated. In this check you can choose to block certain person's names from purchasing at your store. Anyone visiting your site with that name will not be able to purchase at your online store.
        stFsCheckBlockedCard:
          type: boolean
          description: Logical value which determine if blocked card check should be evaluated. In this check you can choose to block certain card numbers from purchasing at your store. Those card numbers will be prohibited from buying at your online store.
        stFsBinBlockCustProfile:
          maximum: 10
          minimum: 0
          type: integer
          description: Number value of the bin block profile. Could be one of the following                       1    -    IMS                       2    -    IMS                       3    -    IMS                       4    -    IMS                       5    -    IMS                       6    -    IMS                       7    -    IMS                       8    -    IMS                       9    -    TELECASH                       Mind this may change soon to support different resllers.
          format: int32
          example: 1
        stFsDuplLockoutTimeSecs:
          minimum: 0
          type: integer
          description: Amount of time in seconds for duplicate lockout. You can choose how long a duplicate transaction will continue to be blocked. No duplicate orders will be approved until the lock out time has expired.
          format: int32
        stFsAutoLockoutTimeSecs:
          minimum: 0
          type: integer
          description: Amount of time in seconds for auto lockout. You can choose how long any automatically blocked transaction will continue to be blocked. No orders from that blocked name (or card, Domain, IP, or Class C address) will be approved until the lock out time has expired.
          format: int32
        store:
          $ref: '#/components/schemas/IpgStoreDto_UpdateApplication'
    IpgPurchaseLimitsRequestDto_UpdateApplication:
      type: object
      properties:
        currency:
          maxLength: 3
          minLength: 3
          pattern: ^[a-zA-Z]{3}$
          type: string
          nullable: true
          example: EUR
        limit:
          maximum: 9999999999.99
          exclusiveMaximum: false
          minimum: 0.01
          exclusiveMinimum: false
          type: number
          description: This field contains the merchant max amount limit for transaction processing in e-store. This is with no decimal.
          example: 100
    IpgRequestDto_UpdateApplication:
      required:
        - ipg
        - ipgPurchaseLimitsByIdIpg
        - ipgServices
        - ipgTerminalsByIdIpg
      type: object
      properties:
        ipgPurchaseLimitsByIdIpg:
          type: array
          items:
            $ref: '#/components/schemas/IpgPurchaseLimitsRequestDto_UpdateApplication'
        ipg:
          $ref: '#/components/schemas/IpgDto_UpdateApplication'
        ipgServices:
          type: array
          items:
            $ref: '#/components/schemas/IpgServiceFeaturesDto_UpdateApplication'
        ipgTerminalsByIdIpg:
          $ref: '#/components/schemas/IpgTerminalsByIdIpgDto_UpdateApplication'
    IpgServiceFeaturesConfig_UpdateApplication:
      type: object
      properties:
        item:
          maxLength: 50
          type: string
          description: Item type
          example: allowMOTO
        value:
          maxLength: 1024
          type: string
          description: Feature Value
          example: Specified value for given item type
    IpgServiceFeaturesDto_UpdateApplication:
      required:
        - configs
      type: object
      properties:
        type:
          maxLength: 50
          type: string
          description: Service type which should be configured
          example: payPal
        configs:
          type: array
          items:
            $ref: '#/components/schemas/IpgServiceFeaturesConfig_UpdateApplication'
    IpgStoreDto_UpdateApplication:
      type: object
      properties:
        storeId:
          type: string
          description: StoreId. Generated during boarding phrase
          readOnly: true
    IpgTerminalsByIdIpgDto_UpdateApplication:
      type: object
      properties:
        id:
          type: integer
        idOnbFdposterminals:
          type: integer
        idOnbFdposEquipRecord:
          type: integer
        idOnbIpg:
          type: integer
        endpointId:
          type: string
        paymentMethod:
          type: string
          description: |-
            Accepted payment methods (Visa, Amex, Mastercard and etc). By default options selected as per the services chosen on Services / Fee page. Fill all desired values separated by a comma
               Possible values: AMEX,BCMC,CUP,DINERSCLUB,JCB,MASTERCARD,VISA,DEBITDE,MAESTRO,MEXICOLOCAL,DIREKT,GIROPAY,PAYPAL,MOBILETOPUP,SOFORT,IDEAL,KLARNA,CABAL,SOROCRED,IKEA
        transactionOrigin:
          type: string
          description: |-
            Transaction Origins available to the Merchant. Fill all desired values separated by a comma
               Possible values: ECI,MOTO,RETAIL
        correlationID:
          type: string
          description: Unique identifier for this terminal element. Used for pairing terminal elements between request and response. When creating a new store, terminal ID can be assigned by IPG and correlation ID is used for easy request-resposne terminal pairing. This ID is not stored or processed, it's only copied to this terminal element in the response.
        submissionComponent:
          type: string
          description: |-
            Options available to the Merchant to submit a transaction from. Fill all desired values separated by a comma
               Possible Values: API,CONNECT,VT,EPAS
        payerSecurityLevel:
          type: string
          description: |-
            Only if 3dsecure traffic needs to be processed by diferent terminal, than only one of the two should be selected
               Possible Values: Options Empty / Not Empty
        currency:
          pattern: '[A-Z]{3}|\d{3}'
          type: string
          description: Currency Alpha ISO code supported by terminal
        active:
          maxLength: 1
          minLength: 1
          type: string
          description: Is the terminal Active ?
        correlationId:
          type: string
        terminalStatusCode:
          type: string
          description: Value of this terminal element indicates that status of terminal's certificate
    LocationDto_UpdateApplication:
      required:
        - cityUrl
        - countryCode
      type: object
      properties:
        countryCode:
          maxLength: 3
          minLength: 3
          pattern: ^[A-Z]{3}$
          type: string
          description: 'ISO-3166 alpha country code representing the country the merchant is located in, the values are restricted based on institutions configuration. For a list of valid codes use API - GET: /api/v1/application/data with field name COUNTRYCODE'
          example: IRE
        state:
          maxLength: 3
          minLength: 0
          type: string
          description: Code representing the state the merchant is located in. If the country selected is United States, Canada or Italy, this field is mandatory.
          nullable: true
          example: MYS
        cityUrl:
          maxLength: 13
          minLength: 0
          type: string
          description: Merchant city for physical merchants, URL for ecommerce merchants, Telephone number for Mail Order/Telephone Order.
          example: Paris
        zip:
          maxLength: 11
          minLength: 0
          type: string
          description: Merchant zip/postcode
          nullable: true
          example: D18 R529
        street:
          maxLength: 40
          minLength: 0
          type: string
          description: Merchant street
          nullable: true
          example: Rue Raynouard 24
        serviceTelNo:
          maxLength: 16
          minLength: 0
          pattern: ^[0-9]{0,16}$
          type: string
          description: Merchant service telephone number
          nullable: true
          example: '0123456789111'
        countyIndex:
          maxLength: 3
          pattern: ^[0-9]{0,3}$
          type: string
          description: County id where the merchant is located. As per Institution configuration. For a list of valid codes use Acquirer Profile API /api/v1/application/acquirer-profile with field name equal to COUNTYINDEX
          nullable: true
          example: '840'
        municipalityIndex:
          maxLength: 5
          minLength: 0
          pattern: ^[0-9]{0,5}$
          type: string
          description: Municipality id where the merchant is located. As per Institution configuration. For a list of valid codes use Acquirer Profile API /api/v1/application/acquirer-profile with field name equal to MUNICIPALITYINDEX
          nullable: true
          example: '80'
    MainDtoRequest_UpdateApplication:
      required:
        - accounts
        - addresses
        - contract
        - groupLevel
        - hierarchy
        - location
        - requiredDetails
      type: object
      properties:
        applicationId:
          type: integer
        groupLevel:
          type: integer
          description: 'For a list of valid codes use this API - GET: /api/v1/application/data with field name merchantLevels'
          format: int32
        cardPresence:
          type: string
          description: For member level is mandatory field, but for sub-group (corporate or economic group) it is optional. Valid values to member - PHYSICAL, VIRTUAL, BOTH. Valid value to sub-group - PHYSICAL, VIRTUAL, BOTH or NULL.
          enum:
            - PHYSICAL
            - VIRTUAL
            - BOTH
        hierarchy:
          $ref: '#/components/schemas/HierarchyDto_UpdateApplication'
        requiredDetails:
          $ref: '#/components/schemas/RequiredDetailsDto_UpdateApplication'
        optionalDetails:
          $ref: '#/components/schemas/OptionalDetailsDto_UpdateApplication'
        contract:
          $ref: '#/components/schemas/ContractDto_UpdateApplication'
        location:
          $ref: '#/components/schemas/LocationDto_UpdateApplication'
        schemeDetails:
          $ref: '#/components/schemas/SchemeDetailsDto_UpdateApplication'
        salesDetails:
          $ref: '#/components/schemas/SalesDetailsDto_UpdateApplication'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/AddressDto_UpdateApplication'
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/AccountDto_UpdateApplication'
        services:
          type: array
          items:
            $ref: '#/components/schemas/ServiceDto_UpdateApplication'
        references:
          type: array
          description: The merchants references are used to add additional information to a merchant or to flag a merchant to be included in certain reports or files. The applicable references are agreed between the institution and Fiserv. Depending on the institution setup some client references are mandatory at a member level or at billing level.
          items:
            $ref: '#/components/schemas/ReferencesDto_UpdateApplication'
        merchantDevices:
          type: array
          items:
            $ref: '#/components/schemas/MerchantDeviceDto_UpdateApplication'
        merchantAccountFees:
          type: array
          items:
            $ref: '#/components/schemas/MerchantAccountFeeDto_UpdateApplication'
        transactionCharges:
          type: array
          items:
            $ref: '#/components/schemas/TransactionChargesDto_UpdateApplication'
        merchantRequest:
          type: array
          items:
            $ref: '#/components/schemas/MerchantRequestDto_UpdateApplication'
        paymentInstructions:
          type: array
          items:
            $ref: '#/components/schemas/PaymentInstructionDto_UpdateApplication'
        lastUpdate:
          type: string
          format: date
        parentMerchant:
          type: integer
    MerchantAccountFeeDto_UpdateApplication:
      type: object
      properties:
        id:
          maximum: 1e+27
          type: integer
          description: MerchantAccountFee identification number inside our Boarding System.
        recordIdNumber:
          maxLength: 10
          minLength: 10
          pattern: ^[\d\.]{10}$
          type: string
          description: Record id of the client account fee to be overwritten. The corresponding id should belong to the client tariff id selected on the merchant contract details. For a list of valid codes use API get /application/account-fees with field name recordIdNumber or get /application/account-record end-point.
          nullable: true
          example: '9999999999'
        feePercentage:
          pattern: ^[\d\.]{0,11}$
          type: string
          description: Fee percentage to be applied. Valid value as per the Format NNNNNN.NNNN
          nullable: true
          example: '5.0'
          default: '0.0000'
        feeBase:
          maxLength: 11
          minLength: 0
          pattern: ^[\d\.]{0,11}$
          type: string
          description: Fee base to be applied. Valid value as per the Format NNNNNN.NNNN
          nullable: true
          example: '100.0'
          default: '0.0000'
        feeMinimum:
          maxLength: 11
          minLength: 0
          pattern: ^[\d\.]{0,11}$
          type: string
          description: Fee minimum to be applied. Valid value as per the Format NNNNNN.NNNN
          nullable: true
          example: '13.0'
          default: '0.0000'
        feeMaximum:
          maxLength: 11
          minLength: 0
          pattern: ^[\d\.]{0,11}$
          type: string
          description: Fee maximum to be applied. Valid value as per the Format NNNNNN.NNNN
          nullable: true
          example: '342.0'
          default: '0.0000'
        feeMode:
          type: boolean
          description: Indicates if the fee is being generated (true) or suppressed (false). Suppressing a fee in effect is the same as setting the fee's pricing to zero, i.e. no fee will be charged.
          nullable: true
          example: false
          default: true
        triggerHighValue:
          maxLength: 18
          minLength: 0
          pattern: ^[\d\.]{0,18}$
          type: string
          description: Indicates the upper threshold limit set in terms of value of transaction that is used as a trigger for fee calculation.
          nullable: true
          example: '250.0'
          default: '0.00'
        triggerLowValue:
          maxLength: 18
          minLength: 0
          pattern: ^[0-9\.]{0,18}$
          type: string
          description: Indicates the lower threshold limit set in terms of value of transaction that is used as a trigger for fee calculation.
          nullable: true
          example: '0.1'
        triggerVolumeHigh:
          maxLength: 18
          minLength: 0
          pattern: ^[0-9]{0,18}$
          type: string
          description: Indicates the upper threshold limit set in terms of volume of transactions that is used as a trigger for fee calculation.
          nullable: true
          example: '250'
          default: '0.00'
        triggerVolumeLow:
          maxLength: 18
          minLength: 0
          pattern: ^[0-9]{0,18}$
          type: string
          description: Indicates the lower threshold limit set in terms of volume of transactions that is used as a trigger for fee calculation.
          nullable: true
          example: '250'
          default: '0.00'
        applicationId:
          maximum: 1e+26
          type: integer
          description: Application ID, owner of this MerchantAccountFee
    MerchantDeviceDto_UpdateApplication:
      type: object
      properties:
        id:
          maximum: 1e+27
          type: integer
          description: MerchantDevice identification number inside our Boarding System.
        externalTerminalId:
          maxLength: 20
          minLength: 0
          pattern: ^[a-zA-Z0-9]{1,20}$
          type: string
          description: The unique id for the terminal. This value should be unique within the institution.
          example: '54999530'
        serialNumber:
          maxLength: 32
          minLength: 0
          pattern: ^[a-zA-Z0-9_ \.\&\, ]{0,9}$
          type: string
          description: The serial number of the terminal
          nullable: true
          example: '123456789'
        contactName:
          maxLength: 32
          minLength: 0
          pattern: ^[a-zA-Z0-9À-ý_ \.\&\, ]{0,41}$
          type: string
          description: Contract name at terminal location
          nullable: true
          example: John Doe
        terminalLocation:
          maxLength: 25
          minLength: 0
          pattern: ^[a-zA-Z0-9À-ý_ \.\&\, ]{0,25}$
          type: string
          description: Location of the terminal
          nullable: true
          example: Munich
        telephone:
          maxLength: 15
          minLength: 0
          pattern: ^[0-9]{0,15}$
          type: string
          description: Connection id or phone number for the terminal
          nullable: true
          example: '003531123456'
        schemeId:
          maxLength: 6
          minLength: 0
          pattern: ^[0-9]{0,6}$
          type: string
          description: The identity of the schema
          nullable: true
          example: '000000'
        accountCurrencyCode:
          maxLength: 3
          minLength: 0
          pattern: ^[A-Z]{3}$
          type: string
          description: ISO 4217 currency code.
          nullable: true
          example: EUR
        system_batchId:
          maximum: 999999
          maxLength: 6
          pattern: ^[0-9]{6}$
          type: integer
          description: Identity number of the system Batch
          format: int32
          nullable: true
          example: 234234
        feeEffeciveDate:
          maxLength: 8
          pattern: ^([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])$
          type: string
          description: Date the terminal fee is effective from. Format YYYYMMDD. If ommited the default will be the current institution posting date.
          format: date
          nullable: true
        lastFeeDate:
          maxLength: 8
          pattern: ^([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])$
          type: string
          description: Last fee date. Format YYYYMMDD
          format: date
          nullable: true
        clientFeeIndex:
          maximum: 999
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3,3}$
          type: integer
          description: If fees should be applied to the device, this code will indicate which is the corresponding fee to be triggered. For a list of valid codes use Acquirer Profile API get reference_data end-point with query parameter classification equal to clientFeeIndex.
          format: int32
          nullable: true
          example: 402
        feeExpiryDate:
          maxLength: 8
          pattern: ^([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])$
          type: string
          description: Fee expiry date. Format YYYYMMDD
          format: date
          nullable: true
        configOfTerminalIndex:
          maxLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Code corresponding to the configuration of the terminal. For possible values check get:/api/v1/application/acquirer-profile with field name CONFIGOFTERMINALINDEX.
          nullable: true
          example: '001'
        installDate:
          maxLength: 8
          pattern: ^([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])$
          type: string
          description: Date the terminal was installed. Format YYYYMMDD
          format: date
          nullable: true
        activeDate:
          maxLength: 8
          pattern: ^([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])$
          type: string
          description: Date the terminal was activated. Format YYYYMMDD
          format: date
          nullable: true
        terminationDate:
          maxLength: 8
          pattern: ^([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])$
          type: string
          description: Termination date. Format YYYYMMDD
          format: date
          nullable: true
        terminalPassword:
          maxLength: 8
          pattern: ^[a-zA-Z0-9À-ý_ \.\&\,]{8}$
          type: string
          description: The password for the terminal
          nullable: true
          example: password
        terminalTypeIndex:
          maxLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Code corresponding to the terminal type. For possible values check get:/api/v1/application/acquirer-profile with field name TERMINALTYPEINDEX.
          nullable: true
          example: '000'
        terminalCountryCode:
          maxLength: 3
          pattern: ^[A-Z]{3,3}$
          type: string
          description: ISO-3166 alpha country code representing the country the terminal is located. There is a restriction on the allowed countries for the institution.
          nullable: true
          example: IRE
        serviceProviderIndex:
          maxLength: 3
          pattern: ^[0-9,]{3}$
          type: string
          description: Code associated with the company who takes care of the terminal. For a list of valid codes use Acquirer Profile API get reference_data end-point with query parameter classification equal to serviceProviderIndex.
          nullable: true
          example: '001'
        emv:
          type: boolean
          description: Indicate if the terminal is EMV capable terminal
          nullable: true
          example: true
        city:
          maxLength: 13
          minLength: 0
          pattern: ^[a-zA-Z0-9À-ý_ \.\&\,]{0,13}$
          type: string
          description: The city were the terminal resides at
          nullable: true
          example: Valletta
        amex:
          type: boolean
          description: Indicates if the terminal supports Amex transactions, if true additional fields are required.
          nullable: true
          example: false
        acquiringProfileIndex:
          maxLength: 16
          minLength: 0
          pattern: ^[0-9]{16}$
          type: string
          description: Code correspnding to the acquirer profile setup on the terminal. For possible values check get:/api/v1/application/acquirer-profile with field name ACQUIRINGPROFILEINDEX.
          nullable: true
          example: '0000000000000000'
        templateId:
          maxLength: 4
          pattern: ^[0-9]{4}$
          type: string
          description: Template id for the terminal
          nullable: true
          example: '1234'
        amexPhoneNo1:
          maxLength: 24
          minLength: 0
          pattern: ^[0-9]{0,24}$
          type: string
          description: If Amex = true then Amex phone number 1 must be present.
          nullable: true
          example: '00012458754865148'
        amexPhoneNo2:
          maxLength: 24
          minLength: 0
          pattern: ^[0-9]{0,24}$
          type: string
          description: If Amex = true then Amex phone number 2 must be present.
          nullable: true
          example: '00012458754865148'
        relatedTId:
          maxLength: 20
          minLength: 0
          pattern: ^[a-zA-Z0-9]{0,20}$
          type: string
          description: If Amex = true then related TID must be present.
          nullable: true
          example: FreeText
        waiver:
          maxLength: 30
          minLength: 0
          pattern: ^[a-zA-Z0-9]{0,30}$
          type: string
          description: Waiver indicator text or amount.
          nullable: true
          example: waiver02
        socCode:
          maxLength: 15
          minLength: 0
          pattern: ^[a-zA-Z0-9]{0,15}$
          type: string
          description: Schedule of charges code
          nullable: true
          example: '00054214'
        setupFee:
          maxLength: 15
          minLength: 0
          pattern: ^[0-9]{7}$
          type: string
          description: Setup fee
          nullable: true
          example: '3232000'
        gprsRentalAmount:
          maxLength: 7
          minLength: 0
          pattern: ^[0-9]{0,7}$
          type: string
          description: GPRS Rental Amount
          nullable: true
          example: '325'
        gprsRental:
          maxLength: 8
          minLength: 0
          pattern: ^[a-zA-Z0-9]{0,8}$
          type: string
          description: GPRS renal ( Monthly/Annual)
          nullable: true
          example: '2342'
        installed:
          maxLength: 12
          minLength: 0
          pattern: ^([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])$
          type: string
          description: Installed/De-Installed. Format YYYYMMDD
          nullable: true
          example: '20200121'
        applicationId:
          maximum: 1e+26
          type: integer
          description: Application ID, owner of this MerchantDevice
    MerchantRequestDto_UpdateApplication:
      required:
        - quantity
        - requestIndex
      type: object
      properties:
        id:
          maximum: 1e+27
          type: integer
          description: MerchantRequest identification number inside our Boarding System.
        requestIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Indicates the user defined physical device or Information to be sent. Configured per pnstitution. For a list of valid codes use Acquirer Profile API get reference_data end-point with query parameter classification equal to requestIdIndex.
          example: '001'
        quantity:
          minimum: 0
          type: integer
          description: Number of items being requested
          format: int32
        applicationId:
          maximum: 1e+26
          type: integer
          description: Application ID, owner of this MerchantRequest
    OptionalDetailsDto_UpdateApplication:
      type: object
      properties:
        registrationNo:
          maxLength: 15
          pattern: ^[A-Z0-9 \-\/\.]{0,15}$
          type: string
          description: Merchant registration number. Note this value will be encrypted prior to be stored as this is considered PII data.
          nullable: true
          example: EA-3256
        vatRegNo:
          maxLength: 15
          pattern: ^[A-Z0-9 \-\/\.]{0,15}$
          type: string
          description: Merchant registered value added tax number (VAT) . Note this value will be encrypted prior to be stored as this is considered PII data.
          nullable: true
          example: GB123456789
        contractReference:
          maxLength: 8
          pattern: ^[0-9]{0,8}$
          type: string
          description: Application contract reference number. This is a free format field for information purpose only.
          nullable: true
          example: '32'
        bankReference:
          maxLength: 8
          pattern: ^[0-9]{0,8}$
          type: string
          description: Merchant bank reference number. This is a free format field, where the value can be defined by the merchant/acquirer, information purposes only, no impact to transaction processing
          nullable: true
          example: '420'
        floorLimitCurrencyCode:
          maxLength: 3
          minLength: 3
          pattern: ^[a-zA-Z]{3}$
          type: string
          description: ' This field contains the merchant floor limit currency for information purposes only, no impact to transaction processing. ISO 4217 currency code indicating the currency type.'
          nullable: true
          example: USD
        dynamicPricing:
          type: boolean
          description: Indicate if the merchant uses dynamic pricing
          nullable: true
          example: false
        paymentAdviceGenerationIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Frequency of payment advice for information only, it does not affect the processing of the payment. Valid values are configured per institution. For a list of valid codes use api/v1/application/optional-details with field name PAYMENTADVICEGENERATIONINDEX
          nullable: true
          example: '420'
        paymentDeliveryMethodCode:
          type: string
          description: Payment advice delivery method. This is for information only, it does not affect the processing of the payment.
          nullable: true
          example: NA
          default: NA
          enum:
            - EMAIL
            - FAX
            - POST
            - COLLECT
            - HAND_DELIVER
            - COURIER
            - ONLINE
            - MY_02_FAX
            - MY_03_COURIE
            - MY_04_HAND_KL
            - MY_05_HAND_PJ
            - MY_06_SPECIAL_DELIVE
            - MY_07_EMAIL
            - MY_01_EMAIL
            - NA
        merchantGradeIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Merchant grouping by business type and volume. For a list of valid codes use api/v1/application/optional-details with field name MERCHANTGRADEINDEX.
          nullable: true
          example: '420'
        priorityMemo:
          maxLength: 100
          pattern: ^[a-zA-Z0-9_\-\.\+ ]{0,100}$
          type: string
          description: Free text for additonal note
          nullable: true
        siteUrl:
          maxLength: 100
          minLength: 0
          type: string
          description: store url addrress - (e.g. https://www.webshop.com)
          nullable: true
        prosaDeterminant:
          pattern: ^[a-zA-Z0-9]{8}$
          type: string
          description: Local number to identify Mexican merchant regulated by Mexican authorities, handled by PROSA.
        prosaBDUNumber:
          pattern: ^[0-9]{8}$
          type: string
          description: Unique identifier of the business by the Internetwork, used by Prosa to process transactions.
        signerDateOfBirth:
          type: string
          description: Indicates Date of Birth of the Seller’s Authorized Signer.
          format: date
    PayableDto_UpdateApplication:
      type: object
      properties:
        bankName:
          maxLength: 40
          pattern: ^[a-zA-Z0-9À-ý_ \.\&\,\-]{0,40}$
          type: string
          description: Merchant's bank name, When Billing Level set to true Bank Name must be populated
          nullable: true
          example: Bank of Dublin
        accountName:
          maxLength: 35
          pattern: ^[a-zA-Z0-9À-ý_ \.\&\,\-]{0,35}$
          type: string
          description: Merchant's bank account name. Mandatory if billing level is set to true.
          nullable: true
          example: John Doe Credit Account
        counterBankNumber:
          maxLength: 22
          pattern: ^[A-Z0-9_ \.\&\,\-\/]{0,22}$
          type: string
          description: Clearing number of the merchant's bank i.e. the sort code or BSB number (Australia).
          nullable: true
          example: '13165987'
        accountNumber:
          maxLength: 35
          pattern: ^[A-Z0-9 \-\/\.]{0,35}$
          type: string
          description: Merchant's bank account number. This is considered PII data; the value will be encrypted prior to storing.
          nullable: true
          example: ZZ999999999999999
        iban:
          maxLength: 35
          pattern: ^[A-Z0-9 \-\/\.]{0,35}$
          type: string
          description: International Bank Account Number (IBAN) is a series of alphanumeric characters that uniquely identifies a customer's account held at a bank anywhere in the world. this is considered PII data; the value will be encrypted prior to storing
          nullable: true
          example: ZZ99999999999999999999
        bankTelephone:
          maxLength: 15
          pattern: ^[0-9]{0,15}$
          type: string
          description: The telephone number of the merchant bank.
          nullable: true
          example: '00535125412123'
        bankContactName:
          maxLength: 35
          pattern: ^[a-zA-Z0-9À-ý_ \.\&\,\-]{0,35}$
          type: string
          description: Name of contact at the merchant's bank. Mandatory if billing level is set to true.
          nullable: true
          example: Frank Castle
        customerPaymentText:
          maxLength: 18
          pattern: ^[a-zA-Z0-9]{0,18}$
          type: string
          description: Additional text that may be used to identify a payment item on the merchants statement. Only valid for institutions using IFS funding solution.
          nullable: true
          example: '9999999999'
        bankCity:
          maxLength: 35
          pattern: ^[a-zA-Z0-9_ \.\&\,\-]{0,35}$
          type: string
          description: CREDIT ACCOUNT Bank City optional field
          nullable: true
          example: Dublin
        paymentFormatIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Format to be used to present payments to the clearing entity. Only institutions using the IFS file for funding merchants. For a list of valid codes use Acquirer Profile API get reference_data end-point with query parameter classification equal to paymentFormatIndex.
          nullable: true
          example: '002'
        clearingEntityIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: The financial institution that will receive the payment. Only institutions using the IFS file for funding merchants. For a list of valid codes use Acquirer Profile API get reference_data end-point with query parameter classification equal to clearingEntityIndex.
          nullable: true
          example: '001'
        correspondentBankAccount:
          maxLength: 16
          pattern: ^[A-Z0-9 \-\/\.]{0,16}$
          type: string
          description: Bank account number for the intermediary bank used for fund transfers. Used in cases where merchant uses a small financial institution, for example a local credit union.
          nullable: true
          example: ZZ 9842512858747
        calendarDays:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Number of days to be added to the posting date to calculate the payment/collection funding date
          nullable: true
          example: '002'
        paymentDelayDays:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Number of days to hold payment to the merchant
          example: '001'
        correspondentBankNo:
          maxLength: 11
          pattern: ^[A-Z0-9_ \.\&\,\-\/]{0,11}$
          type: string
          description: For institutions using IFS funding file this field should contain the swift code of the payable bank (mapped to international bank code field on the IFS file).
          nullable: true
          example: ZZZZZZZZZZZ
      description: Details to be used when sending a payment instruction on the funding file
    PaymentInstructionDto_UpdateApplication:
      type: object
      properties:
        id:
          maximum: 1e+27
          type: integer
          description: PaymentInstruction identification number inside our Boarding System.
        accountTypeIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: From account array, this is the account type id for a billing level account for which the reserve, rolling reserve and/or factoring need to be set up
          nullable: true
          example: '470'
        accountCurrencyCode:
          maxLength: 3
          minLength: 3
          pattern: ^[a-zA-Z]{3}$
          type: string
          description: From the account array, the is the account currency corresponding to the selected account type id. ISO 4217
          nullable: true
          example: GBP
        instructionTypeIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Indicates the type of payment instruction to be set for the selected account. The values depends on the configured payment instructions for the Institution. For possible values check get:/api/v1/application/acquirer-profile with field name ACQUIRINGPROFILEINDEX.
          nullable: true
          example: '001'
        deductionStartDate:
          maxLength: 8
          minLength: 8
          pattern: ^([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])$
          type: string
          description: Date when the instruction starts. Format YYYYMMDD
          format: date
          nullable: true
        deductionEndDate:
          maxLength: 8
          minLength: 8
          pattern: ^([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])$
          type: string
          description: Date when the instruction ends. Format YYYYMMDD
          format: date
          nullable: true
        deductionPercentage:
          maxLength: 11
          minLength: 0
          pattern: ^[0-9\.\+\-]{0,11}$
          type: string
          description: The payment percent to be deducted from the calculated total amount, to be paid from the account type selected.
          nullable: true
          example: '5.0'
          default: '00.000000'
        deductionMinAmount:
          maxLength: 11
          minLength: 0
          pattern: ^[0-9\.\+\-]{0,11}$
          type: string
          description: The minimum value to be deducted from the payment.
          nullable: true
          example: '250.0'
          default: '00.000000'
        deductionMaxAmount:
          maxLength: 11
          minLength: 0
          pattern: ^[0-9\.\+\-]{0,11}$
          type: string
          description: The maximum value to be deducted from the payment.
          nullable: true
          example: '250.0'
          default: '00.000000'
        deductionBaseAmount:
          maxLength: 11
          minLength: 0
          pattern: ^[0-9\.\+\-]{0,11}$
          type: string
          description: The amount to be deducted from the calculated total amount, to be paid from the account type selected.
          nullable: true
          example: '250.0'
          default: '00.000000'
        deductionTotalCnt:
          maxLength: 11
          minLength: 0
          pattern: ^[0-9\.\+\-]{0,11}$
          type: string
          description: Indicates how many times this instruction should be executed
          nullable: true
          example: '100000'
        deductionTotalAmount:
          maxLength: 18
          minLength: 0
          pattern: ^[0-9\.\+\-]{0,18}$
          type: string
          description: Indicates how many times this instruction should be executed
          nullable: true
          example: '100000'
        factorAgent:
          maxLength: 24
          minLength: 0
          pattern: ^[a-zA-Z0-9À-ý_ \.\&\,]{0,24}$
          type: string
          description: Name of the factor agent
          nullable: true
          example: James Kirk
        note:
          maxLength: 674
          minLength: 0
          pattern: ^[a-zA-Z0-9À-ý_ \.\&\,]{0,674}$
          type: string
          description: Free Text for extra note
        applicationId:
          maximum: 1e+26
          type: integer
          description: Application ID, owner of this PaymentInstruction
      description: Payment instructions allow the acquirer to take away a portion of the calculated payment and post the portion of the amount to a another merchant account, the platform supports different types of instructions for example reserve, rolling reserve and factoring instructions. Payment instructions can only be setup against billing level accounts.
    ReceivableDto_UpdateApplication:
      type: object
      properties:
        bankName:
          maxLength: 40
          pattern: ^[a-zA-Z0-9À-ý_ \.\&\,\-]{0,40}$
          type: string
          description: Debit account merchant's bank name. When Billing Level set to true then bank name must be populated
          nullable: true
          example: BNP Paribas
        accountName:
          maxLength: 35
          pattern: ^[a-zA-Z0-9À-ý_ \.\&\,\-]{0,35}$
          type: string
          description: Debit account merchant's bank account name. Mandatory if billing level is set to true.
          nullable: true
          example: John Doe Debit Account
        counterBankNumber:
          maxLength: 22
          pattern: ^[A-Z0-9_ \.\&\,\-\/]{0,22}$
          type: string
          description: Debit account clearing number of the merchant's bank i.e. the sort code or BSB number (Australia). Mandatory if billing level is set to true.
          example: '18254'
        accountNumber:
          maxLength: 35
          pattern: ^[A-Z0-9 \-\/\.]{0,35}$
          type: string
          description: Debit account clearing number of the merchant's bank. Mandatory if billing level is set to true. This is considered PII data; the value will be encrypted prior to storing.
          nullable: true
          example: '68973953036'
        iban:
          maxLength: 35
          pattern: ^[A-Z0-9 \-\/\.]{0,35}$
          type: string
          description: Debit account International Bank Account Number (IBAN) is a series of alphanumeric characters that uniquely identifies a customer's account held at a bank anywhere in the world. It typically contains a two-character ISO country code, two check digits for validation purposes followed by the domestic bank code and account number. This is considered PII data; the value will be encrypted prior to storing.
          nullable: true
          example: FR32 18254 12225 68973953036 89
        bankTelephone:
          maxLength: 15
          pattern: ^[0-9]{0,15}$
          type: string
          description: Debit account bank telephone number.
          nullable: true
        bankContactName:
          maxLength: 35
          pattern: ^[a-zA-Z0-9À-ý_ \.\&\,\-]{0,35}$
          type: string
          description: Debit account contact name for Merchant's Bank.
          nullable: true
          example: Joanne Burke
        customerPaymentText:
          maxLength: 18
          pattern: ^[a-zA-Z0-9]{0,18}$
          type: string
          description: Additional text that may be used to identify a payment item on the merchants statement. Only valid for institutions using IFS funding solution.
          nullable: true
          example: item number 6478
        bankCity:
          maxLength: 35
          pattern: ^[a-zA-Z0-9_ \.\&\,\-]{0,35}$
          type: string
          description: Debit account bank city optional field
          nullable: true
          example: Dublin
        paymentFormatIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Debit account format to be used to present payments to the clearing entity. Only institutions using the IFS file for funding merchants. For a list of valid codes use Acquirer Profile API get reference_data end-point with query parameter classification equal to paymentFormatIndex.
          nullable: true
          example: '002'
        clearingEntityIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Debit account financial institution that will receive the collection. Only institutions using the IFS file for funding merchants. For a list of valid codes use Acquirer Profile API get reference_data end-point with query parameter classification equal to clearingEntityIndex.
          nullable: true
          example: '001'
        correspondentBankAccount:
          maxLength: 16
          pattern: ^[A-Z0-9 \-\/\.]{0,16}$
          type: string
          description: Bank account number for the intermediary bank used for collect funds. Used in cases where merchant uses a small financial institution, for example a local credit union.
          nullable: true
          example: ZZ 9842512858747
        calendarDays:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Number of days to be added to the posting date to calculate the payment/collection funding date
          nullable: true
          example: '001'
        collectionDelayDays:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: dDaysDr = Delay days debit. This field indicates the number of days to hold collection
          nullable: true
          example: '001'
        correspondentBankNo:
          maxLength: 11
          pattern: ^[A-Z0-9_ \.\&\,\-\/]{0,11}$
          type: string
          description: For institutions using IFS funding file this field should contain the swift code of the receiving bank (mapped to international bank code field on the IFS file).
          nullable: true
          example: ZZ99999999
      description: Details to be used when sending a collection instruction on the funding file
    ReferencesDto_UpdateApplication:
      required:
        - referenceIndex
      type: object
      properties:
        id:
          type: integer
        referenceIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Predefined reference index to tag merchant with additional information. For a list of valid codes use references API - GET:/api/v1/application/reference-fields with field name referenceIndex.
        referenceValue:
          maxLength: 32
          minLength: 0
          type: string
          description: Value to be associated with the client reference. The value to be placed in this field is dependent on the client reference type. Note some values may be validated against a list of predefined values depending on the setup of the client reference, if the client reference values are pre-defined the API - GET:/api/v1/application/reference-fields end point results will indicate the possible values for the client reference.
      description: The merchants references are used to add additional information to a merchant or to flag a merchant to be included in certain reports or files. The applicable references are agreed between the institution and Fiserv. Depending on the institution setup some client references are mandatory at a member level or at billing level.
    RequiredDetailsDto_UpdateApplication:
      required:
        - accountOfficerIndex
        - branchIndex
        - companyName
        - languageIndex
        - legalFormIndex
        - mcciso
        - residencyFeeLevelCode
        - residentStatusCode
        - retailerClassificationCode
        - tradeName
      type: object
      properties:
        externalMerchantId:
          maxLength: 20
          pattern: ^[a-zA-Z0-9]{0,20}$
          type: string
          description: Merchant number generated by Fiserv after submitting and approving an application. It´s a read only field. Used on the authorization and clearing cycle.
          nullable: true
          readOnly: true
        tradeName:
          maxLength: 22
          minLength: 1
          type: string
          description: Merchant Trade Name
          example: Burger King
        companyName:
          maxLength: 35
          minLength: 0
          pattern: ^[a-zA-Z]{3}$
          type: string
          description: Merchant's legal company name.
          example: Burger King Corporation
        legalFormIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Company entity type for information purposes only. No impact on transaction processing. For possible values check get:/api/v1/application/acquirer-profile with field name LEGALFORMINDEX
          example: '001'
        languageIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Merchant language for information purposes only. No impact on transaction processing. For possible values check get:/api/v1/application/acquirer-profile with field name LANGUAGEINDEX
          nullable: true
          example: '001'
        mcciso:
          maxLength: 4
          minLength: 4
          pattern: ^[0-9]{4}$
          type: string
          description: Merchant category code (ISO 18245 ), depending on the client region setting this value may be used for clearing transactions to the scheme. For possible values check get:/api/v1/application/mcc.
          example: '5814'
        residentStatusCode:
          type: string
          description: The residency status of the merchant. Indicates whether the merchant is a resident or non-resident for information purposes only, no impact to transaction processing.
          example: NA
          enum:
            - NA
            - RESIDENT
            - NON_RESIDENT
        accountOfficerIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Merchant account officer; the possible values can be customized per institution, use 000=N/A if not relevant for the institution. For possible values check get:/api/v1/application/acquirer-profile with field name ACCOUNTOFFICERINDEX
          example: '001'
        residencyFeeLevelCode:
          type: string
          description: Indicator only applicable to institutions that charge a residency fee.
          example: NA
          enum:
            - NA
            - GROUP_CLIENT
            - SUB_GROUP_CLIENT
            - MEMBER_CLIENT
        retailerClassificationCode:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: An RCC identifies the type of business performed within a merchant outlet. For possible values check get:/api/v1/application/acquirer-profile with field name RETAILERCLASSIFICATION.
          example: '001'
        branchIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Merchant branch; the possible values can be customized per institution, use 000=N/A if not relevant for the institution. For possible values check get:/api/v1/application/acquirer-profile with field name BRANCHINDEX.
          example: '001'
    RetailCardDataLayout122Dto_UpdateApplication:
      required:
        - recordToBeUpdated
      type: object
      properties:
        recordToBeUpdated:
          $ref: '#/components/schemas/RetailCardDataLayout122RecordDto_UpdateApplication'
    RetailCardDataLayout122RecordCardDto_UpdateApplication:
      required:
        - cardType
      type: object
      properties:
        cardType:
          type: string
          enum:
            - M
            - MD
            - MM
            - V
            - VD
            - VV
    RetailCardDataLayout122RecordDto_UpdateApplication:
      required:
        - cards
      type: object
      properties:
        cards:
          type: array
          items:
            $ref: '#/components/schemas/RetailCardDataLayout122RecordCardDto_UpdateApplication'
    RetailCardDataLayout124RecordCardDto_UpdateApplication:
      type: object
      properties:
        idOnbRetailCardDatalayout124recordCard:
          type: integer
          format: int64
        cardType:
          type: string
          description: Identifies the types of cards to which the authorization parameters apply.
          enum:
            - M
            - MD
            - MM
            - V
            - VD
            - VV
        cashAdvanceLimit:
          maximum: 999999999
          minimum: 0
          type: integer
          description: The transaction floor limit for a single cash advance transaction performed at this terminal by the card type. If not used inform zero
          format: int32
        electronicFollowup:
          maximum: 9
          minimum: 0
          type: integer
          description: Indicating how BASE24 should handle electronic follow-up transactions.Valid values are:0 = Post the transaction. 1 = not posted of this card type2–9 = Reserved for future use.
          format: int32
        mailOrderLimit:
          maximum: 999999999
          minimum: 0
          type: integer
          description: The transaction floor limit for a single mail or telephone order transaction performed at this terminal by the card type. If not used inform zero
          format: int32
        purchaseFloorLimit:
          maximum: 999999999
          minimum: 0
          type: integer
          description: The transaction floor limit for a single purchase transaction performed at this terminal by the card type. If not used inform zero
          format: int32
        tranLimit:
          maximum: 999999999
          minimum: 0
          type: integer
          description: The maximum amount allowed for a single transaction performed at this terminal. If not used inform zero
          format: int32
        transactionProfile:
          type: string
          description: Indicating the transaction profile. Valid values are as follows:0 = Authorize only 1 = Authorize and capture2 = Authorize and expect electronic follow-up 3 = Terminal determines data capture mode for each transaction
          enum:
            - '0'
            - '1'
            - '2'
            - '3'
    RetailLayoutDto_UpdateApplication:
      required:
        - account
        - address
        - country
      type: object
      properties:
        account:
          maxLength: 19
          minLength: 19
          type: string
          description: The account number associated with the retailer at its associated financial institution.
        address:
          maxLength: 25
          minLength: 0
          type: string
          description: The address where the retailer is located.
        country:
          maxLength: 2
          minLength: 2
          type: string
          description: The country in which the retailer is located.
    SalesDetailsDto_UpdateApplication:
      required:
        - accApprovalDate
        - accCreationDate
        - accSignedDate
        - businessOwnerId
        - salesAgentId
        - salesChannelIndex
        - salesCurrencyCode
      type: object
      properties:
        accSignedDate:
          minLength: 8
          pattern: "^([0-9]{4})(-?)(1[0-2]|0[1-9])\x02(3[01]|0[1-9]|[12][0-9])$"
          type: string
          description: Date merchant was signed up. Format yyyyMMdd
          format: date
          nullable: true
        accCreationDate:
          minLength: 8
          pattern: "^([0-9]{4})(-?)(1[0-2]|0[1-9])\x02(3[01]|0[1-9]|[12][0-9])$"
          type: string
          description: Date merchant was created in the system. Format yyyyMMdd
          format: date
          nullable: true
        accApprovalDate:
          minLength: 8
          pattern: "^([0-9]{4})(-?)(1[0-2]|0[1-9])\x02(3[01]|0[1-9]|[12][0-9])$"
          type: string
          description: Date merchant application was approved. Format yyyyMMdd
          format: date
          nullable: true
        salesAgentId:
          maxLength: 8
          minLength: 8
          pattern: ^[0-9]{8}$
          type: string
          description: Code of sales agent associated with the sales process. For a list of valid codes use Acquirer Profile API /api/v1/application/acquirer-profile with field name equal to SALESAGENTID.
          example: '99999999'
        businessOwnerId:
          maxLength: 8
          minLength: 8
          pattern: ^[0-9]{8}$
          type: string
          description: Code of the business owner associated with the sales process. For a list of valid codes use Acquirer Profile API /api/v1/application/acquirer-profile with field name equal to businessOwnerId.
          example: '99999999'
        salesChannelIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Institution specific user defined list of potential sales channels. For a list of valid codes use Acquirer Profile API /api/v1/application/acquirer-profile with field name equal to SALESCHANNELINDEX.
          example: '023'
        salesCurrencyCode:
          maxLength: 3
          minLength: 3
          pattern: ^[a-zA-Z]{3}$
          type: string
          description: ISO 4217 Apha Currency code of amount fields displayed
          example: EUR
        signedSalesValue:
          maxLength: 18
          pattern: ^[0-9_\-\.\+]{0,18}$
          type: string
          description: Contracted sales value for the merchant. Whether this value is per week, per month, per year, etc. is defined at institution level. Format NNN.NN
          nullable: true
          example: '10.0'
        signedAverageTicketValue:
          maxLength: 18
          pattern: ^[0-9_\-\.\+]{0,18}$
          type: string
          description: Contracted average ticket value for the merchant. Whether this value is per week, per month, per year, etc. is defined at institution level.
          nullable: true
          example: '10.0'
        salesLead:
          maxLength: 15
          pattern: ^[a-zA-Z0-9_\-\.\+ ]{0,15}$
          type: string
          description: Name or description of the sales lead
          nullable: true
          example: Free text
        signedNumberSales:
          maxLength: 18
          pattern: ^[0-9_\-\.\+]{0,18}$
          type: string
          description: Contracted number of sales for the merchant. Whether this value is per week, per month, per year, etc. is defined at institution level
          nullable: true
    SchemeDetailsDto_UpdateApplication:
      type: object
      properties:
        crossBorderFeeCode:
          type: string
          description: Indicates whether a merchant is liable for cross border fees for MasterCard, Visa both.
          nullable: true
          example: NONE
          default: NONE
          enum:
            - NONE
            - MASTERCARD
            - VISA
            - BOTH
        masterCardIPQualificationCode:
          type: string
          description: The MasterCard interchange program qualification lists the interchange programs for MasterCard.
          nullable: true
          example: NA
          default: NA
          enum:
            - NA
            - CHARITY
            - MASTERCARD_AID
            - MASTERCARD_QPS
        masterCardIPValue:
          maxLength: 10
          pattern: ^[0-9]{0,10}$
          type: string
          description: The MasterCard interchange program value field assigned by MasterCard for the corresponding interchange program.
          nullable: true
          example: '55'
        visaIPQualificationCode:
          type: string
          description: The Visa interchange program qualification lists the possible interchange program for Visa.
          nullable: true
          example: NA
          default: NA
          enum:
            - NA
            - CHARITY
            - SG_EZ_LINKS
            - TRANCHE_2
            - TRANCHE_3
            - VAU_VALIDATED
            - VISA_EPS
            - VISA_MVP
        visaIPValue:
          maxLength: 10
          pattern: ^[0-9]{0,10}$
          type: string
          description: This Visa interchange program value field is assigned by Visa for the corresponding interchange program.
          nullable: true
          example: '401938547'
        paymentLowValue:
          type: boolean
          description: Flag to determine if the merchant is eligible to qualify for UK domestic low value E-Commerce.
          example: false
        cbdipVisaSmiCode:
          maxLength: 9
          pattern: ^[a-zA-Z0-9]{0,9}$
          type: string
          description: Single merchant identifier (SMI) provided by Visa when merchant is registered with cross border interchange program CBDIP
          nullable: true
          example: aTT345200
        mcPaymentFacilitatorId:
          maxLength: 9
          pattern: ^[0-9]{0,11}$
          type: string
          description: MasterCard registered payment facilitator id for merchants processing PF transactions
          nullable: true
          example: '12345'
        mcIndependentSalesOrgId:
          maxLength: 9
          pattern: ^[0-9]{0,11}$
          type: string
          description: MasterCard registered ISO for merchants processing ISO transactions
          nullable: true
          example: '1234'
        visaCanIasfFee:
          type: boolean
          description: Indicator if Visa international acquirer service Fee (IASF) cross border fee applies on all transactions assessed in Canada for non canadian issued cards.
          nullable: true
          example: false
          default: false
        viLacFeeCode:
          type: string
          description: Indicator for which VISA cross border fees (ISA, IA or both) in the Latin America and Caribbean (LAC) to be applied.
          nullable: true
          example: NA
          default: NA
          enum:
            - NA
            - VISA_LAC_IA_FEE
            - VISA_LAC_ISA_FEE
            - BOTH_LAC_FEES
        mcLacFeeCode:
          type: string
          description: Indicator for which MC cross border fees (CB , CB Rebate or both) in the Latin America and Caribbean (LAC) to be applied.
          nullable: true
          example: MC_LAC_BOTH
          default: NA
          enum:
            - NA
            - MC_LAC_CB
            - MC_LAC_CB_REBATE
            - MC_LAC_BOTH
        mcAbvFeeInd:
          type: boolean
          description: Indicator if MasterCard acquirer brand volume fee is applicable for the merchant
          nullable: true
          example: false
          default: false
        visaEuFeeIndCode:
          type: string
          description: Indicator for which EU fee to be charged; E.g Visa IA Fee or Visa E-Comm Fee, available options depends on the institution configuration. For a list of valid codes check the institution index file.
          nullable: true
          example: BOTH_VISA_EU_FEES
          default: NEITHER
          enum:
            - NEITHER
            - VISA_IA_FEE
            - VISA_ECOM_FEE
            - BOTH_VISA_EU_FEES
        mcIntlEcomFee:
          type: boolean
          description: Indicates the enabling of the MasterCard International Ecommerce Fee, available options depends on the institution configuration. For a list of valid codes check the institution index file.
          nullable: true
          example: false
          default: false
        viUsApIafFee:
          maxLength: 3
          pattern: ^[0-9]{0,3}$
          type: string
          description: Indicator for which VISA fees (AP IAF, US IAF, both or neither) to be enabled, available options depends on the institution configuration. For a list of valid codes use Acquirer Profile API get reference_data end-point with query parameter classification equal viUsApIafFee.
          nullable: true
          example: '3'
        visaPaymentFacilitatorId:
          maxLength: 8
          pattern: ^[a-zA-Z0-9]{0,8}$
          type: string
          description: Visa registered payment facilitator id for merchants processing PF transactions.
          nullable: true
          example: AbC12345
        pagobancomatIndex:
          maxLength: 3
          pattern: ^[0-9]{0,3}$
          type: string
          description: Indicates when Pagobancomat transactions are flagged as bill payment. Available options depends on the institution configuration. For a list of valid codes use Acquirer Profile API get reference_data end-point with query parameter classification equal epagobancomatIndex.
          nullable: true
          example: '2'
    ServiceDto_UpdateApplication:
      required:
        - assigned
        - serviceIndex
        - tariffIndex
      type: object
      properties:
        id:
          maximum: 1e+27
          type: integer
          description: Service identification number inside our Boarding System.
        serviceIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Code id for the acquiring service. Valid values depends on the institution configuration. For possible values check get:/api/v1/application/services with field name serviceId.serviceIndex
          nullable: true
          example: '101'
        assigned:
          type: boolean
          description: Flag to indicate if the service is valid for the merchant.
          nullable: true
          example: true
        tariffIndex:
          maxLength: 6
          minLength: 6
          pattern: ^[0-9]{6}$
          type: string
          description: Code ID for the tariff which drives the default transactions fees to be generated for the merchant per service. For possible values check get:/api/v1/application/services with field name serviceMerchantTariffs.tariffIndex
          nullable: true
          example: '000573'
        floorLimit:
          maxLength: 18
          minLength: 0
          pattern: ^[0-9]{0,18}$
          type: string
          description: Floor limit for merchant service selected; for information purpose only
          nullable: true
          example: '00000000000000000000'
        dinersCode:
          type: string
          description: Processing model to be applied for the merchant for Diners and Discover. Required if the service id corresponds to a Diners/Discover service.
          nullable: true
          example: CONVEYANCE_CLEARING
          default: NA
          enum:
            - CONVEYANCE_CLEARING
            - DINERS_AND_DISCOVER
            - NA
        jcbStateCodeIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[A-Z]{3}$
          type: string
          description: State code required to process and clear JCB transaction. Only required for JCB services. Value depends on the institution configuration. For a list of valid codes use Acquirer Profile API get reference_data end-point with query parameter classification equal to jcbStateCodeIndex.
          nullable: true
          example: TXT
        jcbAreaCode1Index:
          maxLength: 2
          minLength: 2
          pattern: ^[0-9]{2}$
          type: string
          description: Area code 1 required to process and clear JCB transaction. Only required for JCB services. State and selected area codes should be as per institution specific list of values. For a list of valid codes use Acquirer Profile API get reference_data end-point with query parameter classification equal to jcbAreaCode1Index.
          nullable: true
        jcbArea2Index:
          maxLength: 2
          minLength: 2
          pattern: ^[0-9]{2}$
          type: string
          description: Area code 2 required to process and clear JCB transaction. Only required for JCB services. State and selected area codes should be as per institution specific list of values. For a list of valid codes use Acquirer Profile API get reference_data end-point with query parameter classification equal to jcbArea2Index.
          nullable: true
        merchantSubId:
          pattern: ^[0-9]{6}$
          type: string
          description: Merchant sub id required to process and clear Ideal transaction. Required for Ideal service. Must not exist on an already boarded merchant under same institution.
          example: '000001'
        applicationId:
          maximum: 1e+26
          type: integer
          description: Application ID, owner of this Service
    ServiceRepresentativeDataDto_UpdateApplication:
      required:
        - country
      type: object
      properties:
        country:
          type: string
          description: The country in which the terminal is located.
    TerminalCapabilitiesDto_UpdateApplication:
      required:
        - cardholderTerminal
        - terminalAttendance
        - terminalCapabilities
        - terminalLocation
      type: object
      properties:
        contactCapabilities:
          type: string
          description: A code indicating the contact capabilities for transferring the data on the card into the terminal. This field is followed by a text description of the value entered. If this field is not used, it can be left blank.Possible values are:·0 = Unknown or unspecified 1 = None (contactless-only or no terminal used, e.g. voice or ARU authorization) 2 = Magnetic stripe reader 3 = Reserved for future use 4 = Reserved for future use 5 = Magnetic stripe reader and EMV compatible ICC reader 6 = Key entry only 7 = Magnetic stripe reader and key entry 8 = Magnetic stripe reader, key entry, and EMV compatible ICC reader 9 = EMV compatible ICC reader
          enum:
            - '0'
            - '1'
            - '2'
            - '3'
            - '4'
            - '5'
            - '6'
            - '7'
            - '8'
            - '9'
        contactlessCapabilities:
          type: string
          description: 'A code indicating the contactless capabilities for transferring the data on the card into the terminal. Possible values are: 0 = Unknown or unspecified 1 = None (contact-only or no terminal used, e.g. voice or ARU authorization) 2 = Contactless magnetic stripe reader 3 = Contactless EMV 4 = Contactless magnetic stripe and contactless EMV'
          enum:
            - '0'
            - '1'
            - '2'
            - '3'
            - '4'
        cardholderTerminal:
          type: string
          description: 'Indicating whether the cardholder activated the terminal with the use of a card, as well as the security level for the cardholder activated terminal.  Possible values: 0 = Not a cardholder activated terminal transaction 1 = Automated dispensing machine with PIN—level 1 security 2 = Self-service terminal—level 2 security (Contactless/proximity terminals should be set to “2”) 3 = Limited amount terminal—level 3 security 4 = In-flight commerce—level 4 security 5 = Script device 6 = Electronic commerce 7 = Radio frequency device 9 = MPOS'
          enum:
            - '0'
            - '1'
            - '2'
            - '3'
            - '4'
            - '5'
            - '6'
            - '7'
            - '9'
        softwareControl:
          maxLength: 1
          minLength: 1
          type: string
        terminalAttendance:
          type: string
          description: 'Indicating whether the terminal is attended by the card acceptor. Possible values: 0 = Attended terminal 1 = Unattended terminal (cardholder-activated terminal, home PC) 2 = No terminal used (voice or ARU authorization) 9 = MPOS'
          enum:
            - '0'
            - '1'
            - '2'
            - '9'
        terminalCapabilities:
          type: string
          description: 'A code indicating whether the terminal can display messages, print messages, or both.Possible values are: ‘ ‘ = Not used 0 = Unknown 1 = None 2 = Printing 3 = Display 4 = Printing and display'
          enum:
            - ''
            - '0'
            - '1'
            - '2'
            - '3'
            - '4'
        terminalControl:
          maxLength: 1
          minLength: 1
          type: string
        terminalLocation:
          type: string
          description: 'Indicating the location of the terminal. Possible values: 0 = On premises of card acceptor facility 1 = Off premises of card acceptor facility (merchant terminal—remote location) 2 = On premises of cardholder (home PC) 3 = No terminal used (voice or ARU authorization)'
          enum:
            - '0'
            - '1'
            - '2'
            - '3'
        terminalVersion:
          maxLength: 16
          minLength: 0
          type: string
          description: Indicating the version of the terminal. If this field is not used, it can be left blank.
    TerminalCardDataLayoutDto_UpdateApplication:
      type: object
      properties:
        record:
          $ref: '#/components/schemas/TerminalCardDataLayoutRecordDto_UpdateApplication'
    TerminalCardDataLayoutRecordCardDto_UpdateApplication:
      type: object
      properties:
        id:
          type: integer
          format: int64
        cardType:
          type: string
          description: Identifies the types of cards to which the authorization parameters apply.
          enum:
            - M
            - MD
            - MM
            - V
            - VD
            - VV
        cashAdvanceLimit:
          maximum: 999999999
          minimum: 0
          type: integer
          description: The transaction floor limit for a single cash advance transaction performed at this terminal by the card type. If not used inform zero
          format: int32
        electronicFollowup:
          maximum: 9
          minimum: 0
          type: integer
          description: Indicating how BASE24 should handle electronic follow-up transactions.Valid values are:0 = Post the transaction. 1 = not posted of this card type2–9 = Reserved for future use.
          format: int32
        mailOrderLimit:
          maximum: 999999999
          minimum: 0
          type: integer
          description: The transaction floor limit for a single mail or telephone order transaction performed at this terminal by the card type. If not used inform zero
          format: int32
        purchaseFloorLimit:
          maximum: 999999999
          minimum: 0
          type: integer
          description: The transaction floor limit for a single purchase transaction performed at this terminal by the card type. If not used inform zero
          format: int32
        tranLimit:
          maximum: 999999999
          minimum: 0
          type: integer
          description: The maximum amount allowed for a single transaction performed at this terminal. If not used inform zero
          format: int32
        transactionProfile:
          type: string
          description: Indicating the transaction profile. Valid values are as follows:0 = Authorize only 1 = Authorize and capture2 = Authorize and expect electronic follow-up 3 = Terminal determines data capture mode for each transaction
          enum:
            - '0'
            - '1'
            - '2'
            - '3'
    TerminalCardDataLayoutRecordDto_UpdateApplication:
      required:
        - cards
      type: object
      properties:
        cardCount:
          maximum: 99
          type: integer
          format: int32
        cards:
          type: array
          items:
            $ref: '#/components/schemas/TerminalCardDataLayoutRecordCardDto_UpdateApplication'
    TerminalCardLayoutPTDD2Dto_UpdateApplication:
      type: object
      properties:
        fileLayout:
          maxLength: 4
          minLength: 4
          type: string
          description: name of Base24 file. Always use "PTDD"
        recordToBeUpdated:
          $ref: '#/components/schemas/TerminalCardLayoutPTDD2RecordDto_UpdateApplication'
    TerminalCardLayoutPTDD2RecordDto_UpdateApplication:
      type: object
      properties:
        cardCount:
          maximum: 20
          type: integer
          description: number of ocurrences of cards
          format: int32
        cards:
          type: array
          items:
            $ref: '#/components/schemas/RetailCardDataLayout124RecordCardDto_UpdateApplication'
    TerminalFlagDto_UpdateApplication:
      required:
        - custBalanceDisplay
        - serialNumber
      type: object
      properties:
        custBalanceDisplay:
          type: string
          description: 'Indicaties how customer balance information is to be displayed at this terminal for balance inquiry transactions. Valid codes are as follows: 0 = Do not print or display 1 = Display on screen only 2 = Print on receipt only 3 = Print on receipt and display on screen'
          enum:
            - DO_NOT_PRINT_OR_DISPLAY
            - DISPLAY_ON_SCREEN_ONLY
            - PRINT_ON_RECEIPT_ONLY
            - PRINT_ON_RECEIPT_AND_DISPLAY_ON_SCREEN
        serialNumber:
          maximum: 9
          minimum: 9
          type: integer
          description: Indicates internal terminal serial number.Information only – not used for validations.
          format: int32
        softwareRelease:
          type: string
          description: A free-format text description of the terminal software.
    TerminalLayoutDto_UpdateApplication:
      required:
        - encryptionData
        - serviceRepresentativeData
        - terminalCapabilities
        - terminalFlag
      type: object
      properties:
        encryptionData:
          $ref: '#/components/schemas/EncryptionDataDto_UpdateApplication'
        terminalCapabilities:
          $ref: '#/components/schemas/TerminalCapabilitiesDto_UpdateApplication'
        terminalFlag:
          $ref: '#/components/schemas/TerminalFlagDto_UpdateApplication'
        serviceRepresentativeData:
          $ref: '#/components/schemas/ServiceRepresentativeDataDto_UpdateApplication'
    TerminalRequestDto_UpdateApplication:
      required:
        - retailCardDataLayout122
        - retailLayout
        - terminalCardDataLayout
        - terminalCardLayoutPTDD2
        - terminalLayout
      type: object
      properties:
        idOnbTerminalRequest:
          type: integer
          format: int64
        retailCardDataLayout122:
          $ref: '#/components/schemas/RetailCardDataLayout122Dto_UpdateApplication'
        retailLayout:
          $ref: '#/components/schemas/RetailLayoutDto_UpdateApplication'
        terminalCardDataLayout:
          $ref: '#/components/schemas/TerminalCardDataLayoutDto_UpdateApplication'
        terminalCardLayoutPTDD2:
          $ref: '#/components/schemas/TerminalCardLayoutPTDD2Dto_UpdateApplication'
        terminalLayout:
          $ref: '#/components/schemas/TerminalLayoutDto_UpdateApplication'
    TransactionChargesDto_UpdateApplication:
      type: object
      properties:
        id:
          maximum: 1e+27
          type: integer
          description: TransactionCharge identification number inside our Boarding System.
        recordIdNumber:
          maxLength: 10
          minLength: 10
          pattern: ^[0-9]{10}$
          type: string
          description: 'Record id of the transaction fee to be overwritten. For a list of valid record ids use the api get: /application/transaction-charges with field name data.recordIdNumber.'
          example: '9999999999'
        effectiveDate:
          maxLength: 8
          minLength: 8
          pattern: ^([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])$
          type: string
          description: Detail today's date or a future date as appropriate. Format YYYYMMDD. If ommited it will be defaulted to the institution current posting date.
          format: date
          nullable: true
        expiryDate:
          maxLength: 8
          minLength: 8
          pattern: ^([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])$
          type: string
          description: Expiry date for fee if defined or set to or future date 99991231. Format YYYYMMDD. The date should be in future
          format: date
          nullable: true
        feePercentage:
          maxLength: 11
          pattern: ^[0-9\.]{0,11}$
          type: string
          description: Charge base to be applied.
          nullable: true
          example: '5.0'
          default: '0.0000'
        feeBase:
          maxLength: 11
          pattern: ^[0-9\.]{0,11}$
          type: string
          description: Charge base amount to be applied.
          nullable: true
          example: '250.0'
          default: '0.0000'
        feeMinimum:
          maxLength: 11
          pattern: ^[0-9\.]{0,11}$
          type: string
          description: Minimum charge amount.
          nullable: true
          example: '250.0'
          default: '0.0000'
        feeMaximum:
          maxLength: 11
          pattern: ^[0-9\.]{0,11}$
          type: string
          description: Maximum charge amount.
          nullable: true
          example: '250.0'
          default: '0.0000'
        chargeCurrencyCode:
          maxLength: 3
          minLength: 3
          pattern: ^[A-Z]{0,3}$
          type: string
          description: 'The ISO 4217 currency code for the charge base, minimum and maximun amounts. Values are restricted by institution configuration. For a list of valid record ids use the api get: /application/transaction-charges with field name data.chargeCurrencyCode'
          nullable: true
          example: EUR
        chargeTierLevel:
          maxLength: 20
          pattern: ^[a-zA-Z0-9_ \.\&\,]{0,20}$
          type: string
          description: The tier assigned which will drive the merchant tiered pricing. The tier level that is assigned to the merchant. This will be N/A (Default) if the transaction charge record is not tiered.
          nullable: true
          example: Not Applicable
        applicationId:
          maximum: 1e+26
          type: integer
          description: Application ID, owner of this TransactionCharge
    AccountDto:
      required:
        - accountCurrencyCode
        - accountTypeIndex
        - billingLevel
      type: object
      properties:
        id:
          maximum: 1e+27
          type: integer
          description: Account identification inside our Boarding System.
        billingLevel:
          type: boolean
          description: Indicates if the account will be settled to on a funding. Billing accounts should have the Bank Account details filled.
          default: false
        receiverCountryCode:
          maxLength: 3
          minLength: 3
          pattern: ^[A-Z]{3}$
          type: string
          description: ISO-3166 alpha country code for the merchant's bank country. Mandatory if billing level is set to true.
          nullable: true
          example: IRE
        statementTypeIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Statement type to be generated. As per the predefined values or left blank where not applicable. For possible values check get:/api/v1/application/acquirer-profile with field name STATEMENTTYPEINDEX.
          example: '001'
        statementGenerationCode:
          type: string
          description: Option for statement generation.
          nullable: true
          example: SUPPRESS
          default: GENERATE_IF_ACTIVITY
          enum:
            - SUPPRESS
            - GENERATE
            - GENERATE_IF_ACTIVITY
            - GENERATE_IF_NO_ACTIVITY
        annualFeeDueDate:
          pattern: ^([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])$
          type: string
          description: YYYYMMDD Date which the annual fee for this account should be generated
          format: date
        calendarTypeIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Defines the scheme exception days when calculating the funding date of merchant payments. As per the institution configuration. For possible values check get:/api/v1/application/acquirer-profile with field name CALENDARTYPEINDEX.
          example: '001'
        paymentReference:
          maxLength: 18
          pattern: ^[0-9a-zA-Z]{0,18}$
          type: string
          description: For institutions using IFS funding file this field should contain the direct debit contract number (required for merchant debits). For others it is a reference text to display on merchant's bank statement if supported on the funding file.
          nullable: true
          example: '999999999999999999'
        payable:
          $ref: '#/components/schemas/PayableDto'
        receivable:
          $ref: '#/components/schemas/ReceivableDto'
        applicationId:
          maximum: 1e+26
          type: integer
          description: Application ID, owner of this Account
        accountTypeIndex:
          maxLength: 3
          minLength: 3
          type: string
          description: Index of the account type to be assigned to the merchant. For a list of valid codes use API get /application/account-settlements with field name accountSettlement.accountType or get /application/account-type.
          nullable: true
          example: '170'
        accountCurrencyCode:
          maxLength: 3
          minLength: 3
          pattern: ^[a-zA-Z]{3}$
          type: string
          description: ISO 4217 currency of the account selected, possible values are restricted based on the institution configuration. For a list of valid codes use API get /application/account-fees with field name accountCurrencyCode or get /application/account-currency.
          nullable: true
          example: EUR
    AddressDto:
      required:
        - categoryIndex
        - city
        - contactName
        - countryCode
        - email
        - line1
        - postCode
        - telephone
      type: object
      properties:
        categoryIndex:
          maxLength: 3
          minLength: 0
          pattern: ^[0-9]{3}$
          type: string
          description: The category of the address to be added. It can be a mandatory or optional category, defined per Institution. For possible values check get:/api/v1/application/acquirer-profile with field name addressCategories.
          nullable: true
          example: '001'
        contactName:
          maxLength: 35
          minLength: 0
          type: string
          description: The contact name at the address location. Any extended ASCII characters contains 2 bytes
          nullable: true
          example: Joe Smith
        groupSpecific:
          type: boolean
          description: Only applicable if a merchant is in a hierarchy. Indicates if the address is to be used for all merchants within the group.
          nullable: true
          example: false
        line1:
          maxLength: 35
          minLength: 0
          type: string
          description: Merchant address line 1 for the specified address category.
          nullable: true
          example: 15 Beach Street
        line2:
          maxLength: 35
          minLength: 0
          type: string
          description: Merchant address line 2 for the specified address category.
          nullable: true
          example: 4th Zone
        line3:
          maxLength: 35
          minLength: 0
          type: string
          description: Merchant address line 3 for the specified address category.
          nullable: true
          example: Bremen
        line4:
          maxLength: 35
          minLength: 0
          type: string
          description: Merchant address line 4 for the specified address category.
          nullable: true
          example: Saxony
        line5:
          maxLength: 35
          minLength: 0
          type: string
          description: Merchant address line 5 for the specified address category.
          nullable: true
          example: Ireland
        postCode:
          maxLength: 20
          minLength: 0
          type: string
          description: Merchant address post code or zip code for the specified address category.
          example: D18 R219
        city:
          maxLength: 35
          minLength: 0
          type: string
          description: Merchant city for the specified address category.
          example: Frankfurt
        state:
          maxLength: 3
          minLength: 0
          type: string
          description: Merchant state for the specified address category.
          example: TX2
        countryCode:
          maxLength: 3
          minLength: 3
          pattern: ^[A-Z]{3}$
          type: string
          description: ISO-3166 alpha country code representing the country the address category is located in, the values are restricted based on institutions configuration. For possible values check get:/api/v1/application/acquirer-profile with field name COUNTRYCODE.
          nullable: true
          example: IRE
        telephone:
          maxLength: 15
          minLength: 0
          pattern: ^[a-zA-Z0-9_ \.\-\,]{0,15}$
          type: string
          description: Telephone at the specified address category
          nullable: true
          example: '00353112345678'
        fax:
          maxLength: 15
          minLength: 0
          pattern: ^[a-zA-Z0-9_ \.\-\,]{0,15}$
          type: string
          description: Fax at the specified address category
          nullable: true
          example: '005351456789'
        deliveryMethodIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Delivery method code of correspondence to this address; however, it is dependent on the delivery solutions in place for the given institution. For possible values check get:/api/v1/application/acquirer-profile with field name DELIVERYMETHODINDEX.
          nullable: true
          example: '200'
        email:
          maxLength: 60
          pattern: ^([a-zA-Z0-9_\-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$
          type: string
          description: Email address (with extended length capacity) for the specified address category
          example: abc@omnipay.com
        effectiveDate:
          maxLength: 8
          minLength: 8
          pattern: "^([0-9]{4})(-?)(1[0-2]|0[1-9])\x02(3[01]|0[1-9]|[12][0-9])$"
          type: string
          description: Effective date of the address. When selecting address information the Omnipay platform will select the most recent effective address. For auditing reasons merchant address can not be deleted after it has become effective hence the use of effective dates for addresses. Format YYYYMMDD. If ommited the default is the current instituiton posting date.
          format: date
          nullable: true
        addressId:
          maximum: 1e+27
          type: integer
          description: Address identification inside our Boarding System.
        applicationId:
          maximum: 1e+26
          type: integer
          description: Application ID, owner of this address
    ContractDto:
      required:
        - clientRegionIndex
        - clientTariffIndex
        - postingTariffIndex
        - serviceContractIndex
        - settlementMethodIndex
      type: object
      properties:
        serviceContractIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: 'The service contract defines the processing rules for a merchant. For a list of valid codes use this API - GET: /api/v1/application/contracts with field name serviceContractIndex'
          example: '497'
        clientTariffIndex:
          maxLength: 6
          pattern: ^[0-9]{0,6}$
          type: string
          description: 'The client tariff determines the set of account fees applicable to the merchant. For a list of valid codes use this API - GET: /api/v1/application/contracts with field name clientTariffIndex'
          example: '321'
        postingTariffIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: 'The posting tariff determines how transactions and fees are posted to the merchant accounts. For a list of valid codes use this API - GET: /api/v1/application/contracts with field name postingTariffIndex'
          example: '503'
        settlementMethodIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: 'The settlement method defines the frequency and grouping of transactions posted to makeup a payment as well as the funding channel. For a list of valid codes use this API - GET: /api/v1/application/contracts with field name settlementMethodIndex'
          example: '179'
        paymentMethodIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: 'Institution defined value related to a specific payment interface.Default to spaces when no values provided. For a list of valid codes use this API - GET: /api/v1/application/contracts with field name paymentMethodIndex.'
          nullable: true
          example: '043'
        protectAgainstFXChange:
          type: boolean
          description: |-
            Flag to indicate if the merchant is protected against currency
            fluctuations on the event the transaction is disputed and the transaction currency is different to the merchant funding currency.
        clientRegionIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: 'The selected client region will determine how the transactions are settled to the scheme. For a list of valid codes use this API - GET: /api/v1/application/contracts with field name clientRegionIndex.'
          example: '901'
        tierStructureIndex:
          maxLength: 3
          pattern: ^[0-9]{0,3}$
          type: string
          description: 'If tier pricing is active on the institutions this field indicates which is the Tier Structure assigned to the merchant, if not in use for the institution use 000=N/A for this field. For a list of valid codes use this API - GET: /api/v1/application/contracts with field name tierStructureIndex.'
          nullable: true
          example: '1'
        reclassBillbackIndicatorCode:
          type: string
          description: Indicator to pass the Reclass fee to the merchant. Reclass Fees can only be passed to the merchant when configured for the Institution.
          nullable: true
          example: NA
          default: NA
          enum:
            - NA
            - NO_BILLBACK
            - AUT_BILLBACK_DR
            - AUT_BILLBACK_ALL
            - MANUAL_BILLBACK
        withholdIncomeTariffIndex:
          maxLength: 6
          minLength: 6
          pattern: ^[0-9]{6}$
          type: string
          description: 'The withhold income tariff id for the institution. For a list of valid codes use this API - GET: /api/v1/application/contracts with field name withholdIncomeTariffIndex'
          nullable: true
          example: '001007'
        withholdVatTariffIndex:
          maxLength: 6
          minLength: 6
          pattern: ^[0-9]{6}$
          type: string
          description: 'The withhold vat tariff id for the institution. For a list of valid codes use this API - GET: /api/v1/application/contracts with field name withholdVatTariffIndex'
          nullable: true
          example: '001007'
        regionalTaxIndex:
          maxLength: 3
          pattern: ^[0-9]{0,3}$
          type: string
          description: Indicator if regional tax to be generated or not. For possible values check get:/api/v1/application/acquirer-profile with field name REGIONALTAXINDEX.
          nullable: true
          example: '1'
    EncryptionDataDto:
      required:
        - pinCharacter
      type: object
      properties:
        pinCharacter:
          type: string
          enum:
            - F
            - ' '
            - '0'
            - '1'
            - '2'
            - '3'
            - '4'
            - '5'
            - '6'
            - '7'
            - '8'
            - '9'
    FullApplicationDtoResponse:
      required:
        - e-store
        - main
        - terminals-processing
      type: object
      properties:
        main:
          $ref: '#/components/schemas/MainDtoResponse'
        terminals-processing:
          type: array
          items:
            $ref: '#/components/schemas/TerminalResponseDto'
        e-store:
          $ref: '#/components/schemas/IpgSaveDto'
    HierarchyDto:
      type: object
      properties:
        internalMerchantId:
          pattern: ^[0-9]{8}$
          type: string
          description: Unique merchant number generated by Fiserv after submitting an application. It´ll be used in response only.
          readOnly: true
          example: '00000099'
        parentInternalMerchantId:
          pattern: ^[0-9]{8}$
          type: string
          description: The internal OmniPay MID to which the merchant needs to be linked to as a child merchant. When populated should be an existing group /sub group merchant MID.
          nullable: true
          example: '00000100'
      description: Hierarchy data
    IpgDto:
      required:
        - stFsCheckBlockedCard
        - stFsCheckBlockedClassC
        - stFsCheckBlockedIp
        - stFsCheckBlockedName
        - stTimezone
      type: object
      properties:
        id:
          type: integer
        mercUserId:
          type: string
          description: Database user id (in case of creating the store this user id will be used for the new user in the new store)
        mercUserPassword:
          maxLength: 32
          minLength: 0
          type: string
          description: user password
        mercUserCertificatePassword:
          maxLength: 32
          minLength: 0
          type: string
          description: certificate password
        mercUserCertificateId:
          maxLength: 50
          minLength: 0
          type: string
          description: Reference to the certificate content (located in mcsResponse/certificates). This element is used only in response if certificateDeliveryMethod is set to MCSRESPONSE
        stEmail:
          maxLength: 100
          minLength: 0
          type: string
          description: store email address.
        stUrl:
          maxLength: 100
          minLength: 0
          type: string
          description: store url addrress - (e.g. https://www.webshop.com)
          example: https://www.webshop.com
        stDefaultCurrency:
          pattern: '[A-Z]{3}'
          type: string
          description: ISO 3 byte alphnumeric currency code. For possible value use get /application/data/countrycode
        stTimezone:
          maxLength: 50
          minLength: 0
          type: string
          description: Timezone code (e.g. 'Europe/London', 'Europe/Berlin', 'Brazil/West'). For valid values get - /api/v1/application/data/{countryCode}
          example: Brazil/West
        stStatus:
          type: string
          description: Actual status of the store (e.g. OPEN,CLOSED)
          example: OPEN
          enum:
            - OPEN
            - CLOSED
        stOpenDate:
          type: string
          description: Open date of the store
          format: date
        stCloseDate:
          type: string
          description: Close date of the store
          format: date
        stAcquirer:
          maxLength: 32
          minLength: 0
          type: string
          description: Acquirer 3dsecure  configuration  name,  e.g.  'Dummy'  if  3dsecure  is  not  relevant  or  in  test  environments.  Please  obtain  list  of  names  from  your  support  team.
        certificateDeliveryMethod:
          maxLength: 256
          minLength: 0
          type: string
        stFsBinBlockProfile:
          maximum: 99
          type: integer
          description: '        1 - Germany                       2 - Germany, Austria, Switzerland                       3 - Ireland                       4 - Greece                       5 - Italy                       6 - Italy, Switzerland                       7 - United                       Kingdom                       8 - United Kingdom, Ireland                       9 - Austria, Belgium, Denmark, Finland, France, Germany, Ireland, Italy, Netherlands, Norway, Portugal, Spain, Sweden, Switzerland, United Kingdom, Greece                       10 -                       Above countries + Australia, Canada, New Zealand, Japan, USA                       11 - All countries except: Bulgaria, Cameroon, Egypt, Gambia, Ghana, Indonesia, Iran, Israel, Lithuania, Malaysia, Morocco, Nigeria,                       Pakistan, Romania, Russia, Turkey,                       Ukraine , Vietnam                       99 - All countries                       Mind this will be changed soon to support also profile sets of other regions'
          format: int32
          example: 1
        stFsCheckBlockedIp:
          type: boolean
          description: Logical value which determine if blocked IP check should be evaluated. In this check you can choose to block certain IP addresses from purchasing at your store. Anyone visiting your site from that IP address will not be able to purchase at your online store.
        stFsCheckBlockedClassC:
          type: boolean
          description: Logical value which determine if blocked class-C check should be evaluated. In this check you can choose to block certain class C addresses from purchasing at your store. Anyone visiting your site from that class C address will not be able to purchase at your online store.
        stFsCheckBlockedName:
          type: boolean
          description: Logical value which determine if blocked name check should be evaluated. In this check you can choose to block certain person's names from purchasing at your store. Anyone visiting your site with that name will not be able to purchase at your online store.
        stFsCheckBlockedCard:
          type: boolean
          description: Logical value which determine if blocked card check should be evaluated. In this check you can choose to block certain card numbers from purchasing at your store. Those card numbers will be prohibited from buying at your online store.
        stFsBinBlockCustProfile:
          maximum: 10
          minimum: 0
          type: integer
          description: Number value of the bin block profile. Could be one of the following                       1    -    IMS                       2    -    IMS                       3    -    IMS                       4    -    IMS                       5    -    IMS                       6    -    IMS                       7    -    IMS                       8    -    IMS                       9    -    TELECASH                       Mind this may change soon to support different resllers.
          format: int32
          example: 1
        stFsDuplLockoutTimeSecs:
          minimum: 0
          type: integer
          description: Amount of time in seconds for duplicate lockout. You can choose how long a duplicate transaction will continue to be blocked. No duplicate orders will be approved until the lock out time has expired.
          format: int32
        stFsAutoLockoutTimeSecs:
          minimum: 0
          type: integer
          description: Amount of time in seconds for auto lockout. You can choose how long any automatically blocked transaction will continue to be blocked. No orders from that blocked name (or card, Domain, IP, or Class C address) will be approved until the lock out time has expired.
          format: int32
        store:
          $ref: '#/components/schemas/IpgStoreDto'
    IpgPurchaseLimitsDto:
      type: object
      properties:
        id:
          type: integer
        idOnbIpg:
          type: integer
        currency:
          maxLength: 3
          minLength: 3
          pattern: ^[a-zA-Z]{3}$
          type: string
          nullable: true
          example: EUR
        limit:
          maximum: 9999999999.99
          exclusiveMaximum: false
          minimum: 0.01
          exclusiveMinimum: false
          type: number
          description: This field contains the merchant max amount limit for transaction processing in e-store. This is with no decimal.
          example: 100
    IpgSaveDto:
      required:
        - ipg
        - ipgPurchaseLimitsByIdIpg
        - ipgServices
        - ipgTerminalsByIdIpg
      type: object
      properties:
        ipgPurchaseLimitsByIdIpg:
          type: array
          items:
            $ref: '#/components/schemas/IpgPurchaseLimitsDto'
        ipg:
          $ref: '#/components/schemas/IpgDto'
        ipgServices:
          type: array
          items:
            $ref: '#/components/schemas/IpgServiceFeaturesDto'
        ipgTerminalsByIdIpg:
          $ref: '#/components/schemas/IpgTerminalsByIdIpgDto'
    IpgServiceFeaturesConfig:
      type: object
      properties:
        item:
          maxLength: 50
          type: string
          description: Item type
          example: allowMOTO
        value:
          maxLength: 1024
          type: string
          description: Feature Value
          example: Specified value for given item type
    IpgServiceFeaturesDto:
      required:
        - configs
      type: object
      properties:
        type:
          maxLength: 50
          type: string
          description: Service type which should be configured
          example: payPal
        configs:
          type: array
          items:
            $ref: '#/components/schemas/IpgServiceFeaturesConfig'
    IpgStoreDto:
      type: object
      properties:
        storeId:
          type: string
          description: StoreId. Generated during boarding phrase
          readOnly: true
    IpgTerminalsByIdIpgDto:
      type: object
      properties:
        id:
          type: integer
        idOnbFdposterminals:
          type: integer
        idOnbFdposEquipRecord:
          type: integer
        idOnbIpg:
          type: integer
        endpointId:
          type: string
        paymentMethod:
          type: string
          description: |-
            Accepted payment methods (Visa, Amex, Mastercard and etc). By default options selected as per the services chosen on Services / Fee page. Fill all desired values separated by a comma
               Possible values: AMEX,BCMC,CUP,DINERSCLUB,JCB,MASTERCARD,VISA,DEBITDE,MAESTRO,MEXICOLOCAL,DIREKT,GIROPAY,PAYPAL,MOBILETOPUP,SOFORT,IDEAL,KLARNA,CABAL,SOROCRED,IKEA
        transactionOrigin:
          type: string
          description: |-
            Transaction Origins available to the Merchant. Fill all desired values separated by a comma
               Possible values: ECI,MOTO,RETAIL
        correlationID:
          type: string
          description: Unique identifier for this terminal element. Used for pairing terminal elements between request and response. When creating a new store, terminal ID can be assigned by IPG and correlation ID is used for easy request-resposne terminal pairing. This ID is not stored or processed, it's only copied to this terminal element in the response.
        submissionComponent:
          type: string
          description: |-
            Options available to the Merchant to submit a transaction from. Fill all desired values separated by a comma
               Possible Values: API,CONNECT,VT,EPAS
        payerSecurityLevel:
          type: string
          description: |-
            Only if 3dsecure traffic needs to be processed by diferent terminal, than only one of the two should be selected
               Possible Values: Options Empty / Not Empty
        currency:
          pattern: '[A-Z]{3}|\d{3}'
          type: string
          description: Currency Alpha ISO code supported by terminal
        active:
          maxLength: 1
          minLength: 1
          type: string
          description: Is the terminal Active ?
        correlationId:
          type: string
        terminalStatusCode:
          type: string
          description: Value of this terminal element indicates that status of terminal's certificate
    LocationDto:
      required:
        - cityUrl
        - countryCode
      type: object
      properties:
        countryCode:
          maxLength: 3
          minLength: 3
          pattern: ^[A-Z]{3}$
          type: string
          description: 'ISO-3166 alpha country code representing the country the merchant is located in, the values are restricted based on institutions configuration. For a list of valid codes use API - GET: /api/v1/application/data with field name COUNTRYCODE'
          example: IRE
        state:
          maxLength: 3
          minLength: 0
          type: string
          description: Code representing the state the merchant is located in. If the country selected is United States, Canada or Italy, this field is mandatory.
          nullable: true
          example: MYS
        cityUrl:
          maxLength: 13
          minLength: 0
          type: string
          description: Merchant city for physical merchants, URL for ecommerce merchants, Telephone number for Mail Order/Telephone Order.
          example: Paris
        zip:
          maxLength: 11
          minLength: 0
          type: string
          description: Merchant zip/postcode
          nullable: true
          example: D18 R529
        street:
          maxLength: 40
          minLength: 0
          type: string
          description: Merchant street
          nullable: true
          example: Rue Raynouard 24
        serviceTelNo:
          maxLength: 16
          minLength: 0
          pattern: ^[0-9]{0,16}$
          type: string
          description: Merchant service telephone number
          nullable: true
          example: '0123456789111'
        countyIndex:
          maxLength: 3
          pattern: ^[0-9]{0,3}$
          type: string
          description: County id where the merchant is located. As per Institution configuration. For a list of valid codes use Acquirer Profile API /api/v1/application/acquirer-profile with field name equal to COUNTYINDEX
          nullable: true
          example: '840'
        municipalityIndex:
          maxLength: 5
          minLength: 0
          pattern: ^[0-9]{0,5}$
          type: string
          description: Municipality id where the merchant is located. As per Institution configuration. For a list of valid codes use Acquirer Profile API /api/v1/application/acquirer-profile with field name equal to MUNICIPALITYINDEX
          nullable: true
          example: '80'
    MainDtoResponse:
      required:
        - applicationId
        - contract
        - hierarchy
        - location
        - optionalDetails
        - requiredDetails
      type: object
      properties:
        applicationId:
          type: integer
          description: Application identification. Return on the API after the first save.
        applicationStatus:
          $ref: '#/components/schemas/ApplicationStatusEnum'
        creationUser:
          type: string
        hierarchy:
          $ref: '#/components/schemas/HierarchyDto'
        requiredDetails:
          $ref: '#/components/schemas/RequiredDetailsDto'
        optionalDetails:
          $ref: '#/components/schemas/OptionalDetailsDto'
        contract:
          $ref: '#/components/schemas/ContractDto'
        location:
          $ref: '#/components/schemas/LocationDto'
        schemeDetails:
          $ref: '#/components/schemas/SchemeDetailsDto'
        salesDetails:
          $ref: '#/components/schemas/SalesDetailsDto'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/AddressDto'
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/AccountDto'
        services:
          type: array
          items:
            $ref: '#/components/schemas/ServiceDto'
        references:
          type: array
          items:
            $ref: '#/components/schemas/ReferencesDto'
        merchantDevices:
          type: array
          items:
            $ref: '#/components/schemas/MerchantDeviceDto'
        merchantAccountFees:
          type: array
          items:
            $ref: '#/components/schemas/MerchantAccountFeeDto'
        transactionCharges:
          type: array
          items:
            $ref: '#/components/schemas/TransactionChargesDto'
        merchantRequest:
          type: array
          items:
            $ref: '#/components/schemas/MerchantRequestDto'
        paymentInstructions:
          type: array
          items:
            $ref: '#/components/schemas/PaymentInstructionDto'
        applicationNumber:
          type: string
        boardDate:
          type: string
          format: date
        integrationStep:
          type: string
        groupLevel:
          type: integer
          format: int32
        step:
          type: integer
          format: int32
        errorValidation:
          type: string
        applicationStatusDate:
          type: string
          format: date-time
        bpmProcessId:
          type: string
        institutionNumber:
          type: integer
          format: int64
        cardPresence:
          type: string
          enum:
            - PHYSICAL
            - VIRTUAL
            - BOTH
        insertDate:
          type: string
          format: date
        lastUpdate:
          type: string
          format: date
        parentMerchant:
          type: integer
    MerchantAccountFeeDto:
      type: object
      properties:
        id:
          maximum: 1e+27
          type: integer
          description: MerchantAccountFee identification number inside our Boarding System.
        recordIdNumber:
          maxLength: 10
          minLength: 10
          pattern: ^[\d\.]{10}$
          type: string
          description: Record id of the client account fee to be overwritten. The corresponding id should belong to the client tariff id selected on the merchant contract details. For a list of valid codes use API get /application/account-fees with field name recordIdNumber or get /application/account-record end-point.
          nullable: true
          example: '9999999999'
        feePercentage:
          pattern: ^[\d\.]{0,11}$
          type: string
          description: Fee percentage to be applied. Valid value as per the Format NNNNNN.NNNN
          nullable: true
          example: '5.0'
          default: '0.0000'
        feeBase:
          maxLength: 11
          minLength: 0
          pattern: ^[\d\.]{0,11}$
          type: string
          description: Fee base to be applied. Valid value as per the Format NNNNNN.NNNN
          nullable: true
          example: '100.0'
          default: '0.0000'
        feeMinimum:
          maxLength: 11
          minLength: 0
          pattern: ^[\d\.]{0,11}$
          type: string
          description: Fee minimum to be applied. Valid value as per the Format NNNNNN.NNNN
          nullable: true
          example: '13.0'
          default: '0.0000'
        feeMaximum:
          maxLength: 11
          minLength: 0
          pattern: ^[\d\.]{0,11}$
          type: string
          description: Fee maximum to be applied. Valid value as per the Format NNNNNN.NNNN
          nullable: true
          example: '342.0'
          default: '0.0000'
        feeMode:
          type: boolean
          description: Indicates if the fee is being generated (true) or suppressed (false). Suppressing a fee in effect is the same as setting the fee's pricing to zero, i.e. no fee will be charged.
          nullable: true
          example: false
          default: true
        triggerHighValue:
          maxLength: 18
          minLength: 0
          pattern: ^[\d\.]{0,18}$
          type: string
          description: Indicates the upper threshold limit set in terms of value of transaction that is used as a trigger for fee calculation.
          nullable: true
          example: '250.0'
          default: '0.00'
        triggerLowValue:
          maxLength: 18
          minLength: 0
          pattern: ^[0-9\.]{0,18}$
          type: string
          description: Indicates the lower threshold limit set in terms of value of transaction that is used as a trigger for fee calculation.
          nullable: true
          example: '0.1'
        triggerVolumeHigh:
          maxLength: 18
          minLength: 0
          pattern: ^[0-9]{0,18}$
          type: string
          description: Indicates the upper threshold limit set in terms of volume of transactions that is used as a trigger for fee calculation.
          nullable: true
          example: '250'
          default: '0.00'
        triggerVolumeLow:
          maxLength: 18
          minLength: 0
          pattern: ^[0-9]{0,18}$
          type: string
          description: Indicates the lower threshold limit set in terms of volume of transactions that is used as a trigger for fee calculation.
          nullable: true
          example: '250'
          default: '0.00'
        applicationId:
          maximum: 1e+26
          type: integer
          description: Application ID, owner of this MerchantAccountFee
    MerchantDeviceDto:
      type: object
      properties:
        id:
          maximum: 1e+27
          type: integer
          description: MerchantDevice identification number inside our Boarding System.
        externalTerminalId:
          maxLength: 20
          minLength: 0
          pattern: ^[a-zA-Z0-9]{1,20}$
          type: string
          description: The unique id for the terminal. This value should be unique within the institution.
          example: '54999530'
        serialNumber:
          maxLength: 32
          minLength: 0
          pattern: ^[a-zA-Z0-9_ \.\&\, ]{0,9}$
          type: string
          description: The serial number of the terminal
          nullable: true
          example: '123456789'
        contactName:
          maxLength: 32
          minLength: 0
          pattern: ^[a-zA-Z0-9À-ý_ \.\&\, ]{0,41}$
          type: string
          description: Contract name at terminal location
          nullable: true
          example: John Doe
        terminalLocation:
          maxLength: 25
          minLength: 0
          pattern: ^[a-zA-Z0-9À-ý_ \.\&\, ]{0,25}$
          type: string
          description: Location of the terminal
          nullable: true
          example: Munich
        telephone:
          maxLength: 15
          minLength: 0
          pattern: ^[0-9]{0,15}$
          type: string
          description: Connection id or phone number for the terminal
          nullable: true
          example: '003531123456'
        schemeId:
          maxLength: 6
          minLength: 0
          pattern: ^[0-9]{0,6}$
          type: string
          description: The identity of the schema
          nullable: true
          example: '000000'
        accountCurrencyCode:
          maxLength: 3
          minLength: 0
          pattern: ^[A-Z]{3}$
          type: string
          description: ISO 4217 currency code.
          nullable: true
          example: EUR
        system_batchId:
          maximum: 999999
          maxLength: 6
          pattern: ^[0-9]{6}$
          type: integer
          description: Identity number of the system Batch
          format: int32
          nullable: true
          example: 234234
        feeEffeciveDate:
          maxLength: 8
          pattern: ^([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])$
          type: string
          description: Date the terminal fee is effective from. Format YYYYMMDD. If ommited the default will be the current institution posting date.
          format: date
          nullable: true
        lastFeeDate:
          maxLength: 8
          pattern: ^([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])$
          type: string
          description: Last fee date. Format YYYYMMDD
          format: date
          nullable: true
        clientFeeIndex:
          maximum: 999
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3,3}$
          type: integer
          description: If fees should be applied to the device, this code will indicate which is the corresponding fee to be triggered. For a list of valid codes use Acquirer Profile API get reference_data end-point with query parameter classification equal to clientFeeIndex.
          format: int32
          nullable: true
          example: 402
        feeExpiryDate:
          maxLength: 8
          pattern: ^([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])$
          type: string
          description: Fee expiry date. Format YYYYMMDD
          format: date
          nullable: true
        configOfTerminalIndex:
          maxLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Code corresponding to the configuration of the terminal. For possible values check get:/api/v1/application/acquirer-profile with field name CONFIGOFTERMINALINDEX.
          nullable: true
          example: '001'
        installDate:
          maxLength: 8
          pattern: ^([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])$
          type: string
          description: Date the terminal was installed. Format YYYYMMDD
          format: date
          nullable: true
        activeDate:
          maxLength: 8
          pattern: ^([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])$
          type: string
          description: Date the terminal was activated. Format YYYYMMDD
          format: date
          nullable: true
        terminationDate:
          maxLength: 8
          pattern: ^([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])$
          type: string
          description: Termination date. Format YYYYMMDD
          format: date
          nullable: true
        terminalPassword:
          maxLength: 8
          pattern: ^[a-zA-Z0-9À-ý_ \.\&\,]{8}$
          type: string
          description: The password for the terminal
          nullable: true
          example: password
        terminalTypeIndex:
          maxLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Code corresponding to the terminal type. For possible values check get:/api/v1/application/acquirer-profile with field name TERMINALTYPEINDEX.
          nullable: true
          example: '000'
        terminalCountryCode:
          maxLength: 3
          pattern: ^[A-Z]{3,3}$
          type: string
          description: ISO-3166 alpha country code representing the country the terminal is located. There is a restriction on the allowed countries for the institution.
          nullable: true
          example: IRE
        serviceProviderIndex:
          maxLength: 3
          pattern: ^[0-9,]{3}$
          type: string
          description: Code associated with the company who takes care of the terminal. For a list of valid codes use Acquirer Profile API get reference_data end-point with query parameter classification equal to serviceProviderIndex.
          nullable: true
          example: '001'
        emv:
          type: boolean
          description: Indicate if the terminal is EMV capable terminal
          nullable: true
          example: true
        city:
          maxLength: 13
          minLength: 0
          pattern: ^[a-zA-Z0-9À-ý_ \.\&\,]{0,13}$
          type: string
          description: The city were the terminal resides at
          nullable: true
          example: Valletta
        amex:
          type: boolean
          description: Indicates if the terminal supports Amex transactions, if true additional fields are required.
          nullable: true
          example: false
        acquiringProfileIndex:
          maxLength: 16
          minLength: 0
          pattern: ^[0-9]{16}$
          type: string
          description: Code correspnding to the acquirer profile setup on the terminal. For possible values check get:/api/v1/application/acquirer-profile with field name ACQUIRINGPROFILEINDEX.
          nullable: true
          example: '0000000000000000'
        templateId:
          maxLength: 4
          pattern: ^[0-9]{4}$
          type: string
          description: Template id for the terminal
          nullable: true
          example: '1234'
        amexPhoneNo1:
          maxLength: 24
          minLength: 0
          pattern: ^[0-9]{0,24}$
          type: string
          description: If Amex = true then Amex phone number 1 must be present.
          nullable: true
          example: '00012458754865148'
        amexPhoneNo2:
          maxLength: 24
          minLength: 0
          pattern: ^[0-9]{0,24}$
          type: string
          description: If Amex = true then Amex phone number 2 must be present.
          nullable: true
          example: '00012458754865148'
        relatedTId:
          maxLength: 20
          minLength: 0
          pattern: ^[a-zA-Z0-9]{0,20}$
          type: string
          description: If Amex = true then related TID must be present.
          nullable: true
          example: FreeText
        waiver:
          maxLength: 30
          minLength: 0
          pattern: ^[a-zA-Z0-9]{0,30}$
          type: string
          description: Waiver indicator text or amount.
          nullable: true
          example: waiver02
        socCode:
          maxLength: 15
          minLength: 0
          pattern: ^[a-zA-Z0-9]{0,15}$
          type: string
          description: Schedule of charges code
          nullable: true
          example: '00054214'
        setupFee:
          maxLength: 15
          minLength: 0
          pattern: ^[0-9]{7}$
          type: string
          description: Setup fee
          nullable: true
          example: '3232000'
        gprsRentalAmount:
          maxLength: 7
          minLength: 0
          pattern: ^[0-9]{0,7}$
          type: string
          description: GPRS Rental Amount
          nullable: true
          example: '325'
        gprsRental:
          maxLength: 8
          minLength: 0
          pattern: ^[a-zA-Z0-9]{0,8}$
          type: string
          description: GPRS renal ( Monthly/Annual)
          nullable: true
          example: '2342'
        installed:
          maxLength: 12
          minLength: 0
          pattern: ^([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])$
          type: string
          description: Installed/De-Installed. Format YYYYMMDD
          nullable: true
          example: '20200121'
        applicationId:
          maximum: 1e+26
          type: integer
          description: Application ID, owner of this MerchantDevice
    MerchantRequestDto:
      required:
        - quantity
        - requestIndex
      type: object
      properties:
        id:
          maximum: 1e+27
          type: integer
          description: MerchantRequest identification number inside our Boarding System.
        requestIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Indicates the user defined physical device or Information to be sent. Configured per pnstitution. For a list of valid codes use Acquirer Profile API get reference_data end-point with query parameter classification equal to requestIdIndex.
          example: '001'
        quantity:
          minimum: 0
          type: integer
          description: Number of items being requested
          format: int32
        applicationId:
          maximum: 1e+26
          type: integer
          description: Application ID, owner of this MerchantRequest
    OptionalDetailsDto:
      type: object
      properties:
        registrationNo:
          maxLength: 15
          pattern: ^[A-Z0-9 \-\/\.]{0,15}$
          type: string
          description: Merchant registration number. Note this value will be encrypted prior to be stored as this is considered PII data.
          nullable: true
          example: EA-3256
        vatRegNo:
          maxLength: 15
          pattern: ^[A-Z0-9 \-\/\.]{0,15}$
          type: string
          description: Merchant registered value added tax number (VAT) . Note this value will be encrypted prior to be stored as this is considered PII data.
          nullable: true
          example: GB123456789
        contractReference:
          maxLength: 8
          pattern: ^[0-9]{0,8}$
          type: string
          description: Application contract reference number. This is a free format field for information purpose only.
          nullable: true
          example: '32'
        bankReference:
          maxLength: 8
          pattern: ^[0-9]{0,8}$
          type: string
          description: Merchant bank reference number. This is a free format field, where the value can be defined by the merchant/acquirer, information purposes only, no impact to transaction processing
          nullable: true
          example: '420'
        floorLimitCurrencyCode:
          maxLength: 3
          minLength: 3
          pattern: ^[a-zA-Z]{3}$
          type: string
          description: ' This field contains the merchant floor limit currency for information purposes only, no impact to transaction processing. ISO 4217 currency code indicating the currency type.'
          nullable: true
          example: USD
        dynamicPricing:
          type: boolean
          description: Indicate if the merchant uses dynamic pricing
          nullable: true
          example: false
        paymentAdviceGenerationIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Frequency of payment advice for information only, it does not affect the processing of the payment. Valid values are configured per institution. For a list of valid codes use api/v1/application/optional-details with field name PAYMENTADVICEGENERATIONINDEX
          nullable: true
          example: '420'
        paymentDeliveryMethodCode:
          type: string
          description: Payment advice delivery method. This is for information only, it does not affect the processing of the payment.
          nullable: true
          example: NA
          default: NA
          enum:
            - EMAIL
            - FAX
            - POST
            - COLLECT
            - HAND_DELIVER
            - COURIER
            - ONLINE
            - MY_02_FAX
            - MY_03_COURIE
            - MY_04_HAND_KL
            - MY_05_HAND_PJ
            - MY_06_SPECIAL_DELIVE
            - MY_07_EMAIL
            - MY_01_EMAIL
            - NA
        merchantGradeIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Merchant grouping by business type and volume. For a list of valid codes use api/v1/application/optional-details with field name MERCHANTGRADEINDEX.
          nullable: true
          example: '420'
        priorityMemo:
          maxLength: 100
          pattern: ^[a-zA-Z0-9_\-\.\+ ]{0,100}$
          type: string
          description: Free text for additonal note
          nullable: true
        siteUrl:
          maxLength: 100
          minLength: 0
          type: string
          description: store url addrress - (e.g. https://www.webshop.com)
          nullable: true
        prosaDeterminant:
          pattern: ^[a-zA-Z0-9]{8}$
          type: string
          description: Local number to identify Mexican merchant regulated by Mexican authorities, handled by PROSA.
        prosaBDUNumber:
          pattern: ^[0-9]{8}$
          type: string
          description: Unique identifier of the business by the Internetwork, used by Prosa to process transactions.
        signerDateOfBirth:
          type: string
          description: Indicates Date of Birth of the Seller’s Authorized Signer.
          format: date
    PayableDto:
      type: object
      properties:
        bankName:
          maxLength: 40
          pattern: ^[a-zA-Z0-9À-ý_ \.\&\,\-]{0,40}$
          type: string
          description: Merchant's bank name, When Billing Level set to true Bank Name must be populated
          nullable: true
          example: Bank of Dublin
        accountName:
          maxLength: 35
          pattern: ^[a-zA-Z0-9À-ý_ \.\&\,\-]{0,35}$
          type: string
          description: Merchant's bank account name. Mandatory if billing level is set to true.
          nullable: true
          example: John Doe Credit Account
        counterBankNumber:
          maxLength: 22
          pattern: ^[A-Z0-9_ \.\&\,\-\/]{0,22}$
          type: string
          description: Clearing number of the merchant's bank i.e. the sort code or BSB number (Australia).
          nullable: true
          example: '13165987'
        accountNumber:
          maxLength: 35
          pattern: ^[A-Z0-9 \-\/\.]{0,35}$
          type: string
          description: Merchant's bank account number. This is considered PII data; the value will be encrypted prior to storing.
          nullable: true
          example: ZZ999999999999999
        iban:
          maxLength: 35
          pattern: ^[A-Z0-9 \-\/\.]{0,35}$
          type: string
          description: International Bank Account Number (IBAN) is a series of alphanumeric characters that uniquely identifies a customer's account held at a bank anywhere in the world. this is considered PII data; the value will be encrypted prior to storing
          nullable: true
          example: ZZ99999999999999999999
        bankTelephone:
          maxLength: 15
          pattern: ^[0-9]{0,15}$
          type: string
          description: The telephone number of the merchant bank.
          nullable: true
          example: '00535125412123'
        bankContactName:
          maxLength: 35
          pattern: ^[a-zA-Z0-9À-ý_ \.\&\,\-]{0,35}$
          type: string
          description: Name of contact at the merchant's bank. Mandatory if billing level is set to true.
          nullable: true
          example: Frank Castle
        customerPaymentText:
          maxLength: 18
          pattern: ^[a-zA-Z0-9]{0,18}$
          type: string
          description: Additional text that may be used to identify a payment item on the merchants statement. Only valid for institutions using IFS funding solution.
          nullable: true
          example: '9999999999'
        bankCity:
          maxLength: 35
          pattern: ^[a-zA-Z0-9_ \.\&\,\-]{0,35}$
          type: string
          description: CREDIT ACCOUNT Bank City optional field
          nullable: true
          example: Dublin
        paymentFormatIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Format to be used to present payments to the clearing entity. Only institutions using the IFS file for funding merchants. For a list of valid codes use Acquirer Profile API get reference_data end-point with query parameter classification equal to paymentFormatIndex.
          nullable: true
          example: '002'
        clearingEntityIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: The financial institution that will receive the payment. Only institutions using the IFS file for funding merchants. For a list of valid codes use Acquirer Profile API get reference_data end-point with query parameter classification equal to clearingEntityIndex.
          nullable: true
          example: '001'
        correspondentBankAccount:
          maxLength: 16
          pattern: ^[A-Z0-9 \-\/\.]{0,16}$
          type: string
          description: Bank account number for the intermediary bank used for fund transfers. Used in cases where merchant uses a small financial institution, for example a local credit union.
          nullable: true
          example: ZZ 9842512858747
        calendarDays:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Number of days to be added to the posting date to calculate the payment/collection funding date
          nullable: true
          example: '002'
        paymentDelayDays:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Number of days to hold payment to the merchant
          example: '001'
        correspondentBankNo:
          maxLength: 11
          pattern: ^[A-Z0-9_ \.\&\,\-\/]{0,11}$
          type: string
          description: For institutions using IFS funding file this field should contain the swift code of the payable bank (mapped to international bank code field on the IFS file).
          nullable: true
          example: ZZZZZZZZZZZ
      description: Details to be used when sending a payment instruction on the funding file
    PaymentInstructionDto:
      type: object
      properties:
        id:
          maximum: 1e+27
          type: integer
          description: PaymentInstruction identification number inside our Boarding System.
        accountTypeIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: From account array, this is the account type id for a billing level account for which the reserve, rolling reserve and/or factoring need to be set up
          nullable: true
          example: '470'
        accountCurrencyCode:
          maxLength: 3
          minLength: 3
          pattern: ^[a-zA-Z]{3}$
          type: string
          description: From the account array, the is the account currency corresponding to the selected account type id. ISO 4217
          nullable: true
          example: GBP
        instructionTypeIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Indicates the type of payment instruction to be set for the selected account. The values depends on the configured payment instructions for the Institution. For possible values check get:/api/v1/application/acquirer-profile with field name ACQUIRINGPROFILEINDEX.
          nullable: true
          example: '001'
        deductionStartDate:
          maxLength: 8
          minLength: 8
          pattern: ^([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])$
          type: string
          description: Date when the instruction starts. Format YYYYMMDD
          format: date
          nullable: true
        deductionEndDate:
          maxLength: 8
          minLength: 8
          pattern: ^([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])$
          type: string
          description: Date when the instruction ends. Format YYYYMMDD
          format: date
          nullable: true
        deductionPercentage:
          maxLength: 11
          minLength: 0
          pattern: ^[0-9\.\+\-]{0,11}$
          type: string
          description: The payment percent to be deducted from the calculated total amount, to be paid from the account type selected.
          nullable: true
          example: '5.0'
          default: '00.000000'
        deductionMinAmount:
          maxLength: 11
          minLength: 0
          pattern: ^[0-9\.\+\-]{0,11}$
          type: string
          description: The minimum value to be deducted from the payment.
          nullable: true
          example: '250.0'
          default: '00.000000'
        deductionMaxAmount:
          maxLength: 11
          minLength: 0
          pattern: ^[0-9\.\+\-]{0,11}$
          type: string
          description: The maximum value to be deducted from the payment.
          nullable: true
          example: '250.0'
          default: '00.000000'
        deductionBaseAmount:
          maxLength: 11
          minLength: 0
          pattern: ^[0-9\.\+\-]{0,11}$
          type: string
          description: The amount to be deducted from the calculated total amount, to be paid from the account type selected.
          nullable: true
          example: '250.0'
          default: '00.000000'
        deductionTotalCnt:
          maxLength: 11
          minLength: 0
          pattern: ^[0-9\.\+\-]{0,11}$
          type: string
          description: Indicates how many times this instruction should be executed
          nullable: true
          example: '100000'
        deductionTotalAmount:
          maxLength: 18
          minLength: 0
          pattern: ^[0-9\.\+\-]{0,18}$
          type: string
          description: Indicates how many times this instruction should be executed
          nullable: true
          example: '100000'
        factorAgent:
          maxLength: 24
          minLength: 0
          pattern: ^[a-zA-Z0-9À-ý_ \.\&\,]{0,24}$
          type: string
          description: Name of the factor agent
          nullable: true
          example: James Kirk
        note:
          maxLength: 674
          minLength: 0
          pattern: ^[a-zA-Z0-9À-ý_ \.\&\,]{0,674}$
          type: string
          description: Free Text for extra note
        applicationId:
          maximum: 1e+26
          type: integer
          description: Application ID, owner of this PaymentInstruction
      description: Payment instructions allow the acquirer to take away a portion of the calculated payment and post the portion of the amount to a another merchant account, the platform supports different types of instructions for example reserve, rolling reserve and factoring instructions. Payment instructions can only be setup against billing level accounts.
    ReceivableDto:
      type: object
      properties:
        bankName:
          maxLength: 40
          pattern: ^[a-zA-Z0-9À-ý_ \.\&\,\-]{0,40}$
          type: string
          description: Debit account merchant's bank name. When Billing Level set to true then bank name must be populated
          nullable: true
          example: BNP Paribas
        accountName:
          maxLength: 35
          pattern: ^[a-zA-Z0-9À-ý_ \.\&\,\-]{0,35}$
          type: string
          description: Debit account merchant's bank account name. Mandatory if billing level is set to true.
          nullable: true
          example: John Doe Debit Account
        counterBankNumber:
          maxLength: 22
          pattern: ^[A-Z0-9_ \.\&\,\-\/]{0,22}$
          type: string
          description: Debit account clearing number of the merchant's bank i.e. the sort code or BSB number (Australia). Mandatory if billing level is set to true.
          example: '18254'
        accountNumber:
          maxLength: 35
          pattern: ^[A-Z0-9 \-\/\.]{0,35}$
          type: string
          description: Debit account clearing number of the merchant's bank. Mandatory if billing level is set to true. This is considered PII data; the value will be encrypted prior to storing.
          nullable: true
          example: '68973953036'
        iban:
          maxLength: 35
          pattern: ^[A-Z0-9 \-\/\.]{0,35}$
          type: string
          description: Debit account International Bank Account Number (IBAN) is a series of alphanumeric characters that uniquely identifies a customer's account held at a bank anywhere in the world. It typically contains a two-character ISO country code, two check digits for validation purposes followed by the domestic bank code and account number. This is considered PII data; the value will be encrypted prior to storing.
          nullable: true
          example: FR32 18254 12225 68973953036 89
        bankTelephone:
          maxLength: 15
          pattern: ^[0-9]{0,15}$
          type: string
          description: Debit account bank telephone number.
          nullable: true
        bankContactName:
          maxLength: 35
          pattern: ^[a-zA-Z0-9À-ý_ \.\&\,\-]{0,35}$
          type: string
          description: Debit account contact name for Merchant's Bank.
          nullable: true
          example: Joanne Burke
        customerPaymentText:
          maxLength: 18
          pattern: ^[a-zA-Z0-9]{0,18}$
          type: string
          description: Additional text that may be used to identify a payment item on the merchants statement. Only valid for institutions using IFS funding solution.
          nullable: true
          example: item number 6478
        bankCity:
          maxLength: 35
          pattern: ^[a-zA-Z0-9_ \.\&\,\-]{0,35}$
          type: string
          description: Debit account bank city optional field
          nullable: true
          example: Dublin
        paymentFormatIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Debit account format to be used to present payments to the clearing entity. Only institutions using the IFS file for funding merchants. For a list of valid codes use Acquirer Profile API get reference_data end-point with query parameter classification equal to paymentFormatIndex.
          nullable: true
          example: '002'
        clearingEntityIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Debit account financial institution that will receive the collection. Only institutions using the IFS file for funding merchants. For a list of valid codes use Acquirer Profile API get reference_data end-point with query parameter classification equal to clearingEntityIndex.
          nullable: true
          example: '001'
        correspondentBankAccount:
          maxLength: 16
          pattern: ^[A-Z0-9 \-\/\.]{0,16}$
          type: string
          description: Bank account number for the intermediary bank used for collect funds. Used in cases where merchant uses a small financial institution, for example a local credit union.
          nullable: true
          example: ZZ 9842512858747
        calendarDays:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Number of days to be added to the posting date to calculate the payment/collection funding date
          nullable: true
          example: '001'
        collectionDelayDays:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: dDaysDr = Delay days debit. This field indicates the number of days to hold collection
          nullable: true
          example: '001'
        correspondentBankNo:
          maxLength: 11
          pattern: ^[A-Z0-9_ \.\&\,\-\/]{0,11}$
          type: string
          description: For institutions using IFS funding file this field should contain the swift code of the receiving bank (mapped to international bank code field on the IFS file).
          nullable: true
          example: ZZ99999999
      description: Details to be used when sending a collection instruction on the funding file
    ReferencesDto:
      required:
        - referenceIndex
      type: object
      properties:
        id:
          type: integer
        referenceIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Predefined reference index to tag merchant with additional information. For a list of valid codes use references API - GET:/api/v1/application/reference-fields with field name referenceIndex.
        referenceValue:
          maxLength: 32
          minLength: 0
          type: string
          description: Value to be associated with the client reference. The value to be placed in this field is dependent on the client reference type. Note some values may be validated against a list of predefined values depending on the setup of the client reference, if the client reference values are pre-defined the API - GET:/api/v1/application/reference-fields end point results will indicate the possible values for the client reference.
    RequiredDetailsDto:
      required:
        - accountOfficerIndex
        - branchIndex
        - companyName
        - languageIndex
        - legalFormIndex
        - mcciso
        - residencyFeeLevelCode
        - residentStatusCode
        - retailerClassificationCode
        - tradeName
      type: object
      properties:
        externalMerchantId:
          maxLength: 20
          pattern: ^[a-zA-Z0-9]{0,20}$
          type: string
          description: Merchant number generated by Fiserv after submitting and approving an application. It´s a read only field. Used on the authorization and clearing cycle.
          nullable: true
          readOnly: true
        tradeName:
          maxLength: 22
          minLength: 1
          type: string
          description: Merchant Trade Name
          example: Burger King
        companyName:
          maxLength: 35
          minLength: 0
          pattern: ^[a-zA-Z]{3}$
          type: string
          description: Merchant's legal company name.
          example: Burger King Corporation
        legalFormIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Company entity type for information purposes only. No impact on transaction processing. For possible values check get:/api/v1/application/acquirer-profile with field name LEGALFORMINDEX
          example: '001'
        languageIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Merchant language for information purposes only. No impact on transaction processing. For possible values check get:/api/v1/application/acquirer-profile with field name LANGUAGEINDEX
          nullable: true
          example: '001'
        mcciso:
          maxLength: 4
          minLength: 4
          pattern: ^[0-9]{4}$
          type: string
          description: Merchant category code (ISO 18245 ), depending on the client region setting this value may be used for clearing transactions to the scheme. For possible values check get:/api/v1/application/mcc.
          example: '5814'
        residentStatusCode:
          type: string
          description: The residency status of the merchant. Indicates whether the merchant is a resident or non-resident for information purposes only, no impact to transaction processing.
          example: NA
          enum:
            - NA
            - RESIDENT
            - NON_RESIDENT
        accountOfficerIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Merchant account officer; the possible values can be customized per institution, use 000=N/A if not relevant for the institution. For possible values check get:/api/v1/application/acquirer-profile with field name ACCOUNTOFFICERINDEX
          example: '001'
        residencyFeeLevelCode:
          type: string
          description: Indicator only applicable to institutions that charge a residency fee.
          example: NA
          enum:
            - NA
            - GROUP_CLIENT
            - SUB_GROUP_CLIENT
            - MEMBER_CLIENT
        retailerClassificationCode:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: An RCC identifies the type of business performed within a merchant outlet. For possible values check get:/api/v1/application/acquirer-profile with field name RETAILERCLASSIFICATION.
          example: '001'
        branchIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Merchant branch; the possible values can be customized per institution, use 000=N/A if not relevant for the institution. For possible values check get:/api/v1/application/acquirer-profile with field name BRANCHINDEX.
          example: '001'
    RetailCardDataLayout122RecordCardResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        cardType:
          type: string
    RetailCardDataLayout122RecordResponseDto:
      type: object
      properties:
        cards:
          type: array
          items:
            $ref: '#/components/schemas/RetailCardDataLayout122RecordCardResponseDto'
    RetailCardDataLayout122ResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        recordToBeUpdated:
          $ref: '#/components/schemas/RetailCardDataLayout122RecordResponseDto'
    RetailCardDataLayout124RecordCardResponseDto:
      type: object
      properties:
        idOnbRetailCardDataLayout122RecordCard:
          type: integer
        cardType:
          type: string
        cashAdvanceLimit:
          type: integer
          format: int32
        electronicFollowup:
          type: integer
          format: int32
        mailOrderLimit:
          type: integer
          format: int32
        purchaseFloorLimit:
          type: integer
          format: int32
        tranLimit:
          type: integer
          format: int32
        transactionProfile:
          type: string
          enum:
            - '0'
            - '1'
            - '2'
            - '3'
    RetailLayoutResponseDto:
      type: object
      properties:
        account:
          type: string
        address:
          type: string
        country:
          type: string
    SalesDetailsDto:
      required:
        - accApprovalDate
        - accCreationDate
        - accSignedDate
        - businessOwnerId
        - salesAgentId
        - salesChannelIndex
        - salesCurrencyCode
      type: object
      properties:
        accSignedDate:
          minLength: 8
          pattern: "^([0-9]{4})(-?)(1[0-2]|0[1-9])\x02(3[01]|0[1-9]|[12][0-9])$"
          type: string
          description: Date merchant was signed up. Format yyyyMMdd
          format: date
          nullable: true
        accCreationDate:
          minLength: 8
          pattern: "^([0-9]{4})(-?)(1[0-2]|0[1-9])\x02(3[01]|0[1-9]|[12][0-9])$"
          type: string
          description: Date merchant was created in the system. Format yyyyMMdd
          format: date
          nullable: true
        accApprovalDate:
          minLength: 8
          pattern: "^([0-9]{4})(-?)(1[0-2]|0[1-9])\x02(3[01]|0[1-9]|[12][0-9])$"
          type: string
          description: Date merchant application was approved. Format yyyyMMdd
          format: date
          nullable: true
        salesAgentId:
          maxLength: 8
          minLength: 8
          pattern: ^[0-9]{8}$
          type: string
          description: Code of sales agent associated with the sales process. For a list of valid codes use Acquirer Profile API /api/v1/application/acquirer-profile with field name equal to SALESAGENTID.
          example: '99999999'
        businessOwnerId:
          maxLength: 8
          minLength: 8
          pattern: ^[0-9]{8}$
          type: string
          description: Code of the business owner associated with the sales process. For a list of valid codes use Acquirer Profile API /api/v1/application/acquirer-profile with field name equal to businessOwnerId.
          example: '99999999'
        salesChannelIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Institution specific user defined list of potential sales channels. For a list of valid codes use Acquirer Profile API /api/v1/application/acquirer-profile with field name equal to SALESCHANNELINDEX.
          example: '023'
        salesCurrencyCode:
          maxLength: 3
          minLength: 3
          pattern: ^[a-zA-Z]{3}$
          type: string
          description: ISO 4217 Apha Currency code of amount fields displayed
          example: EUR
        signedSalesValue:
          maxLength: 18
          pattern: ^[0-9_\-\.\+]{0,18}$
          type: string
          description: Contracted sales value for the merchant. Whether this value is per week, per month, per year, etc. is defined at institution level. Format NNN.NN
          nullable: true
          example: '10.0'
        signedAverageTicketValue:
          maxLength: 18
          pattern: ^[0-9_\-\.\+]{0,18}$
          type: string
          description: Contracted average ticket value for the merchant. Whether this value is per week, per month, per year, etc. is defined at institution level.
          nullable: true
          example: '10.0'
        salesLead:
          maxLength: 15
          pattern: ^[a-zA-Z0-9_\-\.\+ ]{0,15}$
          type: string
          description: Name or description of the sales lead
          nullable: true
          example: Free text
        signedNumberSales:
          maxLength: 18
          pattern: ^[0-9_\-\.\+]{0,18}$
          type: string
          description: Contracted number of sales for the merchant. Whether this value is per week, per month, per year, etc. is defined at institution level
          nullable: true
    SchemeDetailsDto:
      type: object
      properties:
        crossBorderFeeCode:
          type: string
          description: Indicates whether a merchant is liable for cross border fees for MasterCard, Visa both.
          nullable: true
          example: NONE
          default: NONE
          enum:
            - NONE
            - MASTERCARD
            - VISA
            - BOTH
        masterCardIPQualificationCode:
          type: string
          description: The MasterCard interchange program qualification lists the interchange programs for MasterCard.
          nullable: true
          example: NA
          default: NA
          enum:
            - NA
            - CHARITY
            - MASTERCARD_AID
            - MASTERCARD_QPS
        masterCardIPValue:
          maxLength: 10
          pattern: ^[0-9]{0,10}$
          type: string
          description: The MasterCard interchange program value field assigned by MasterCard for the corresponding interchange program.
          nullable: true
          example: '55'
        visaIPQualificationCode:
          type: string
          description: The Visa interchange program qualification lists the possible interchange program for Visa.
          nullable: true
          example: NA
          default: NA
          enum:
            - NA
            - CHARITY
            - SG_EZ_LINKS
            - TRANCHE_2
            - TRANCHE_3
            - VAU_VALIDATED
            - VISA_EPS
            - VISA_MVP
        visaIPValue:
          maxLength: 10
          pattern: ^[0-9]{0,10}$
          type: string
          description: This Visa interchange program value field is assigned by Visa for the corresponding interchange program.
          nullable: true
          example: '401938547'
        paymentLowValue:
          type: boolean
          description: Flag to determine if the merchant is eligible to qualify for UK domestic low value E-Commerce.
          example: false
        cbdipVisaSmiCode:
          maxLength: 9
          pattern: ^[a-zA-Z0-9]{0,9}$
          type: string
          description: Single merchant identifier (SMI) provided by Visa when merchant is registered with cross border interchange program CBDIP
          nullable: true
          example: aTT345200
        mcPaymentFacilitatorId:
          maxLength: 9
          pattern: ^[0-9]{0,11}$
          type: string
          description: MasterCard registered payment facilitator id for merchants processing PF transactions
          nullable: true
          example: '12345'
        mcIndependentSalesOrgId:
          maxLength: 9
          pattern: ^[0-9]{0,11}$
          type: string
          description: MasterCard registered ISO for merchants processing ISO transactions
          nullable: true
          example: '1234'
        visaCanIasfFee:
          type: boolean
          description: Indicator if Visa international acquirer service Fee (IASF) cross border fee applies on all transactions assessed in Canada for non canadian issued cards.
          nullable: true
          example: false
          default: false
        viLacFeeCode:
          type: string
          description: Indicator for which VISA cross border fees (ISA, IA or both) in the Latin America and Caribbean (LAC) to be applied.
          nullable: true
          example: NA
          default: NA
          enum:
            - NA
            - VISA_LAC_IA_FEE
            - VISA_LAC_ISA_FEE
            - BOTH_LAC_FEES
        mcLacFeeCode:
          type: string
          description: Indicator for which MC cross border fees (CB , CB Rebate or both) in the Latin America and Caribbean (LAC) to be applied.
          nullable: true
          example: MC_LAC_BOTH
          default: NA
          enum:
            - NA
            - MC_LAC_CB
            - MC_LAC_CB_REBATE
            - MC_LAC_BOTH
        mcAbvFeeInd:
          type: boolean
          description: Indicator if MasterCard acquirer brand volume fee is applicable for the merchant
          nullable: true
          example: false
          default: false
        visaEuFeeIndCode:
          type: string
          description: Indicator for which EU fee to be charged; E.g Visa IA Fee or Visa E-Comm Fee, available options depends on the institution configuration. For a list of valid codes check the institution index file.
          nullable: true
          example: BOTH_VISA_EU_FEES
          default: NEITHER
          enum:
            - NEITHER
            - VISA_IA_FEE
            - VISA_ECOM_FEE
            - BOTH_VISA_EU_FEES
        mcIntlEcomFee:
          type: boolean
          description: Indicates the enabling of the MasterCard International Ecommerce Fee, available options depends on the institution configuration. For a list of valid codes check the institution index file.
          nullable: true
          example: false
          default: false
        viUsApIafFee:
          maxLength: 3
          pattern: ^[0-9]{0,3}$
          type: string
          description: Indicator for which VISA fees (AP IAF, US IAF, both or neither) to be enabled, available options depends on the institution configuration. For a list of valid codes use Acquirer Profile API get reference_data end-point with query parameter classification equal viUsApIafFee.
          nullable: true
          example: '3'
        visaPaymentFacilitatorId:
          maxLength: 8
          pattern: ^[a-zA-Z0-9]{0,8}$
          type: string
          description: Visa registered payment facilitator id for merchants processing PF transactions.
          nullable: true
          example: AbC12345
        pagobancomatIndex:
          maxLength: 3
          pattern: ^[0-9]{0,3}$
          type: string
          description: Indicates when Pagobancomat transactions are flagged as bill payment. Available options depends on the institution configuration. For a list of valid codes use Acquirer Profile API get reference_data end-point with query parameter classification equal epagobancomatIndex.
          nullable: true
          example: '2'
    ServiceDto:
      required:
        - assigned
        - serviceIndex
        - tariffIndex
      type: object
      properties:
        id:
          maximum: 1e+27
          type: integer
          description: Service identification number inside our Boarding System.
        serviceIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Code id for the acquiring service. Valid values depends on the institution configuration. For possible values check get:/api/v1/application/services with field name serviceId.serviceIndex
          nullable: true
          example: '101'
        assigned:
          type: boolean
          description: Flag to indicate if the service is valid for the merchant.
          nullable: true
          example: true
        tariffIndex:
          maxLength: 6
          minLength: 6
          pattern: ^[0-9]{6}$
          type: string
          description: Code ID for the tariff which drives the default transactions fees to be generated for the merchant per service. For possible values check get:/api/v1/application/services with field name serviceMerchantTariffs.tariffIndex
          nullable: true
          example: '000573'
        floorLimit:
          maxLength: 18
          minLength: 0
          pattern: ^[0-9]{0,18}$
          type: string
          description: Floor limit for merchant service selected; for information purpose only
          nullable: true
          example: '00000000000000000000'
        dinersCode:
          type: string
          description: Processing model to be applied for the merchant for Diners and Discover. Required if the service id corresponds to a Diners/Discover service.
          nullable: true
          example: CONVEYANCE_CLEARING
          default: NA
          enum:
            - CONVEYANCE_CLEARING
            - DINERS_AND_DISCOVER
            - NA
        jcbStateCodeIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[A-Z]{3}$
          type: string
          description: State code required to process and clear JCB transaction. Only required for JCB services. Value depends on the institution configuration. For a list of valid codes use Acquirer Profile API get reference_data end-point with query parameter classification equal to jcbStateCodeIndex.
          nullable: true
          example: TXT
        jcbAreaCode1Index:
          maxLength: 2
          minLength: 2
          pattern: ^[0-9]{2}$
          type: string
          description: Area code 1 required to process and clear JCB transaction. Only required for JCB services. State and selected area codes should be as per institution specific list of values. For a list of valid codes use Acquirer Profile API get reference_data end-point with query parameter classification equal to jcbAreaCode1Index.
          nullable: true
        jcbArea2Index:
          maxLength: 2
          minLength: 2
          pattern: ^[0-9]{2}$
          type: string
          description: Area code 2 required to process and clear JCB transaction. Only required for JCB services. State and selected area codes should be as per institution specific list of values. For a list of valid codes use Acquirer Profile API get reference_data end-point with query parameter classification equal to jcbArea2Index.
          nullable: true
        merchantSubId:
          pattern: ^[0-9]{6}$
          type: string
          description: Merchant sub id required to process and clear Ideal transaction. Required for Ideal service. Must not exist on an already boarded merchant under same institution.
          example: '000001'
        applicationId:
          maximum: 1e+26
          type: integer
          description: Application ID, owner of this Service
    ServiceRepresentativeDataDto:
      required:
        - country
      type: object
      properties:
        country:
          type: string
          description: The country in which the terminal is located.
    TerminalCapabilitiesDto:
      required:
        - cardholderTerminal
        - terminalAttendance
        - terminalCapabilities
        - terminalLocation
      type: object
      properties:
        contactCapabilities:
          type: string
          description: A code indicating the contact capabilities for transferring the data on the card into the terminal. This field is followed by a text description of the value entered. If this field is not used, it can be left blank.Possible values are:·0 = Unknown or unspecified 1 = None (contactless-only or no terminal used, e.g. voice or ARU authorization) 2 = Magnetic stripe reader 3 = Reserved for future use 4 = Reserved for future use 5 = Magnetic stripe reader and EMV compatible ICC reader 6 = Key entry only 7 = Magnetic stripe reader and key entry 8 = Magnetic stripe reader, key entry, and EMV compatible ICC reader 9 = EMV compatible ICC reader
          enum:
            - '0'
            - '1'
            - '2'
            - '3'
            - '4'
            - '5'
            - '6'
            - '7'
            - '8'
            - '9'
        contactlessCapabilities:
          type: string
          description: 'A code indicating the contactless capabilities for transferring the data on the card into the terminal. Possible values are: 0 = Unknown or unspecified 1 = None (contact-only or no terminal used, e.g. voice or ARU authorization) 2 = Contactless magnetic stripe reader 3 = Contactless EMV 4 = Contactless magnetic stripe and contactless EMV'
          enum:
            - '0'
            - '1'
            - '2'
            - '3'
            - '4'
        cardholderTerminal:
          type: string
          description: 'Indicating whether the cardholder activated the terminal with the use of a card, as well as the security level for the cardholder activated terminal.  Possible values: 0 = Not a cardholder activated terminal transaction 1 = Automated dispensing machine with PIN—level 1 security 2 = Self-service terminal—level 2 security (Contactless/proximity terminals should be set to “2”) 3 = Limited amount terminal—level 3 security 4 = In-flight commerce—level 4 security 5 = Script device 6 = Electronic commerce 7 = Radio frequency device 9 = MPOS'
          enum:
            - '0'
            - '1'
            - '2'
            - '3'
            - '4'
            - '5'
            - '6'
            - '7'
            - '9'
        softwareControl:
          maxLength: 1
          minLength: 1
          type: string
        terminalAttendance:
          type: string
          description: 'Indicating whether the terminal is attended by the card acceptor. Possible values: 0 = Attended terminal 1 = Unattended terminal (cardholder-activated terminal, home PC) 2 = No terminal used (voice or ARU authorization) 9 = MPOS'
          enum:
            - '0'
            - '1'
            - '2'
            - '9'
        terminalCapabilities:
          type: string
          description: 'A code indicating whether the terminal can display messages, print messages, or both.Possible values are: ‘ ‘ = Not used 0 = Unknown 1 = None 2 = Printing 3 = Display 4 = Printing and display'
          enum:
            - ''
            - '0'
            - '1'
            - '2'
            - '3'
            - '4'
        terminalControl:
          maxLength: 1
          minLength: 1
          type: string
        terminalLocation:
          type: string
          description: 'Indicating the location of the terminal. Possible values: 0 = On premises of card acceptor facility 1 = Off premises of card acceptor facility (merchant terminal—remote location) 2 = On premises of cardholder (home PC) 3 = No terminal used (voice or ARU authorization)'
          enum:
            - '0'
            - '1'
            - '2'
            - '3'
        terminalVersion:
          maxLength: 16
          minLength: 0
          type: string
          description: Indicating the version of the terminal. If this field is not used, it can be left blank.
    TerminalCardDataLayoutRecordCardResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        cardType:
          type: string
        cashAdvanceLimit:
          type: integer
          format: int32
        electronicFollowup:
          type: integer
          format: int32
        mailOrderLimit:
          type: integer
          format: int32
        purchaseFloorLimit:
          type: integer
          format: int32
        tranLimit:
          type: integer
          format: int32
        transactionProfile:
          type: string
          enum:
            - '0'
            - '1'
            - '2'
            - '3'
    TerminalCardDataLayoutRecordResponseDto:
      type: object
      properties:
        cards:
          type: array
          items:
            $ref: '#/components/schemas/TerminalCardDataLayoutRecordCardResponseDto'
    TerminalCardDataLayoutResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        record:
          $ref: '#/components/schemas/TerminalCardDataLayoutRecordResponseDto'
    TerminalCardLayoutPTDD2RecordResponseDto:
      type: object
      properties:
        cardCount:
          type: integer
          format: int32
        cards:
          type: array
          items:
            $ref: '#/components/schemas/RetailCardDataLayout124RecordCardResponseDto'
    TerminalCardLayoutPTDD2ResponseDto:
      type: object
      properties:
        fileLayout:
          type: string
        recordToBeUpdated:
          $ref: '#/components/schemas/TerminalCardLayoutPTDD2RecordResponseDto'
    TerminalFlagDto:
      required:
        - custBalanceDisplay
        - serialNumber
      type: object
      properties:
        custBalanceDisplay:
          type: string
          description: 'Indicaties how customer balance information is to be displayed at this terminal for balance inquiry transactions. Valid codes are as follows: 0 = Do not print or display 1 = Display on screen only 2 = Print on receipt only 3 = Print on receipt and display on screen'
          enum:
            - DO_NOT_PRINT_OR_DISPLAY
            - DISPLAY_ON_SCREEN_ONLY
            - PRINT_ON_RECEIPT_ONLY
            - PRINT_ON_RECEIPT_AND_DISPLAY_ON_SCREEN
        serialNumber:
          maximum: 9
          minimum: 9
          type: integer
          description: Indicates internal terminal serial number.Information only – not used for validations.
          format: int32
        softwareRelease:
          type: string
          description: A free-format text description of the terminal software.
    TerminalLayoutResponseDto:
      type: object
      properties:
        idOnbTerminalLayout:
          type: integer
          format: int64
        encryptionData:
          $ref: '#/components/schemas/EncryptionDataDto'
        terminalCapabilities:
          $ref: '#/components/schemas/TerminalCapabilitiesDto'
        terminalFlag:
          $ref: '#/components/schemas/TerminalFlagDto'
        serviceRepresentativeData:
          $ref: '#/components/schemas/ServiceRepresentativeDataDto'
    TerminalResponseDto:
      type: object
      properties:
        idOnbTerminalRequest:
          type: integer
          format: int64
        merchantId:
          type: string
        terminalId:
          type: string
        retailCardDataLayout122:
          $ref: '#/components/schemas/RetailCardDataLayout122ResponseDto'
        retailLayout:
          $ref: '#/components/schemas/RetailLayoutResponseDto'
        terminalCardDataLayout:
          $ref: '#/components/schemas/TerminalCardDataLayoutResponseDto'
        terminalCardLayoutPTDD2:
          $ref: '#/components/schemas/TerminalCardLayoutPTDD2ResponseDto'
        terminalLayout:
          $ref: '#/components/schemas/TerminalLayoutResponseDto'
    TransactionChargesDto:
      type: object
      properties:
        id:
          maximum: 1e+27
          type: integer
          description: TransactionCharge identification number inside our Boarding System.
        recordIdNumber:
          maxLength: 10
          minLength: 10
          pattern: ^[0-9]{10}$
          type: string
          description: 'Record id of the transaction fee to be overwritten. For a list of valid record ids use the api get: /application/transaction-charges with field name data.recordIdNumber.'
          example: '9999999999'
        effectiveDate:
          maxLength: 8
          minLength: 8
          pattern: ^([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])$
          type: string
          description: Detail today's date or a future date as appropriate. Format YYYYMMDD. If ommited it will be defaulted to the institution current posting date.
          format: date
          nullable: true
        expiryDate:
          maxLength: 8
          minLength: 8
          pattern: ^([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])$
          type: string
          description: Expiry date for fee if defined or set to or future date 99991231. Format YYYYMMDD. The date should be in future
          format: date
          nullable: true
        feePercentage:
          maxLength: 11
          pattern: ^[0-9\.]{0,11}$
          type: string
          description: Charge base to be applied.
          nullable: true
          example: '5.0'
          default: '0.0000'
        feeBase:
          maxLength: 11
          pattern: ^[0-9\.]{0,11}$
          type: string
          description: Charge base amount to be applied.
          nullable: true
          example: '250.0'
          default: '0.0000'
        feeMinimum:
          maxLength: 11
          pattern: ^[0-9\.]{0,11}$
          type: string
          description: Minimum charge amount.
          nullable: true
          example: '250.0'
          default: '0.0000'
        feeMaximum:
          maxLength: 11
          pattern: ^[0-9\.]{0,11}$
          type: string
          description: Maximum charge amount.
          nullable: true
          example: '250.0'
          default: '0.0000'
        chargeCurrencyCode:
          maxLength: 3
          minLength: 3
          pattern: ^[A-Z]{0,3}$
          type: string
          description: 'The ISO 4217 currency code for the charge base, minimum and maximun amounts. Values are restricted by institution configuration. For a list of valid record ids use the api get: /application/transaction-charges with field name data.chargeCurrencyCode'
          nullable: true
          example: EUR
        chargeTierLevel:
          maxLength: 20
          pattern: ^[a-zA-Z0-9_ \.\&\,]{0,20}$
          type: string
          description: The tier assigned which will drive the merchant tiered pricing. The tier level that is assigned to the merchant. This will be N/A (Default) if the transaction charge record is not tiered.
          nullable: true
          example: Not Applicable
        applicationId:
          maximum: 1e+26
          type: integer
          description: Application ID, owner of this TransactionCharge
    DiligenceAddressRequest:
      required:
        - city
        - countryCode
        - lineOne
        - lineTwo
        - phoneNumber
        - postalCode
        - stateCode
      type: object
      properties:
        lineOne:
          type: string
          description: Name of street address of the Principal Onwer.
        lineTwo:
          type: string
          description: Address number of the Principal Owner.
        lineThree:
          type: string
          description: Complement address of the Principal Owner.
        city:
          type: string
          description: City address of the Principal Owner.
        stateCode:
          type: string
          description: State address of the Principal Owner.  It should be standard state codes from Postal Authority.
        countryCode:
          type: string
          description: Country code address of the Principal Owner.  For a list of valid values get api/v1/application/acquirer-profile endpoint address countryCode.
        postalCode:
          type: string
          description: Zip code address of the Principal Owner.
        phoneNumber:
          type: string
          description: Phone number of the Principal Owner. The correct format without any leading zeros.
        mobileNumber:
          type: string
          description: Principal Phone Number.Leading zeros will not be accepted.
        email:
          type: string
          description: E-mail address of the Principal Owner.
    DiligenceApplicationRequest:
      required:
        - applicationId
        - currency
        - diligenceMerchant
        - diligencePrincipals
        - diligenceSalesData
        - diligenceVisitation
        - salesManDetail
      type: object
      properties:
        diligenceMerchant:
          $ref: '#/components/schemas/DiligenceMerchantRequest'
        diligencePrincipals:
          type: array
          items:
            $ref: '#/components/schemas/DiligencePrincipalRequest'
        diligenceVisitation:
          $ref: '#/components/schemas/DiligenceVisitationRequest'
        salesManDetail:
          $ref: '#/components/schemas/DiligenceSalesManDetailsRequest'
        diligenceSalesData:
          $ref: '#/components/schemas/DiligenceSalesDataRequest'
        currency:
          $ref: '#/components/schemas/DiligenceCurrencyRequest'
        applicationId:
          type: integer
          description: Application identification. Return on the API after the first save - post:/application/v1.
    DiligenceBusinessProceduresRequest:
      required:
        - creditCardSalesVolume
      type: object
      properties:
        percentDeliveredZeroDays:
          type: number
          description: Percentage of order delivered in 0 days.Mandatory field if settle up card not present at post:/api/v1/application/requiredDetail/eCommerceIndCode/ECOMMERCE_ONLY, BOTH
        percentDeliveredSevenDays:
          type: number
          description: Percentage of Order delivered in 1-7 days.Mandatory field if settle up card not present at post:/api/v1/application/requiredDetail/eCommerceIndCode/ECOMMERCE_ONLY, BOTH
        percentDeliveredFourTeenDays:
          type: number
          description: Percentage of Order delivered in 0-14 days.Mandatory field if settle up card not present at post:/api/v1/application/requiredDetail/eCommerceIndCode/ECOMMERCE_ONLY, BOTH
        percentDeliveredThirtyDays:
          type: number
          description: Percentage of Order delivered in 15-30 days.Mandatory field if settle up card not present at post:/api/v1/application/requiredDetail/eCommerceIndCode/ECOMMERCE_ONLY, BOTH
        percentDeliveredThirtyDaysMore:
          type: number
          description: Percentage of Order delivered in more than 30 days.Mandatory field if settle up card not present at post:/api/v1/application/requiredDetail/eCommerceIndCode/ECOMMERCE_ONLY, BOTH
        percentMailOrderTelephoneOrder:
          type: number
          description: Percentage of Order placed over Telephone. Mandatory field if settle up card not present at post:/api/v1/application/requiredDetail/eCommerceIndCode/ECOMMERCE_ONLY, BOTH
        percentInStore:
          type: number
          description: Percentage of Order placed in Store. Mandatory field if settle up card not present at post:/api/v1/application/requiredDetail/eCommerceIndCode/ECOMMERCE_ONLY, BOTH
        percentInternet:
          type: number
          description: Percentage of Order placed on Internet. Mandatory field if settle up card not present at post:/api/v1/application/requiredDetail/eCommerceIndCode/ECOMMERCE_ONLY, BOTH
        creditCardSalesVolume:
          type: integer
          description: Rolled up Total Credit Card Sales. If boarding group level, sub-group 1 level or sub-group 2 Level - with multiple outlets - the value shoud be the total Credit Card sales of all the outlets. But, if boarding a Member Level the value must be the total credit card sales of unic outlet.
        totalAverageTicket:
          type: number
          description: Outlet average ticket. If boarding group level, sub-group 1 level or sub-group 2 Level - with multiple outlets - this should be the average tick value for the respective level. But, if boarding a Member Level the value must be the average ticket for the unic outlet.
    DiligenceCurrencyRequest:
      required:
        - applicationCurrency
      type: object
      properties:
        applicationCurrency:
          type: string
          description: 'The identification of merchant (MID) will be based on this supported currency. Possible value: Mexican PESO MXN / 484 or US Dollar USD / 840'
    DiligenceMerchantRequest:
      required:
        - businessStartDate
        - legalForm
      type: object
      properties:
        legalForm:
          type: string
          description: Business Legal Form
        numberOutlets:
          maximum: 99999
          type: integer
          description: ' No of Outlets for the Merchant. It''s mandatory for ISO Merchants and Regular Merchants in Mexico. It''s optional for Mexico Single Mid Sub Merchants Multi Mid PFAC Merchants.'
          format: int32
        businessStartDate:
          pattern: YYYYMMDD
          type: string
          description: The date business opened its doors.
    DiligenceNationalIdRequest:
      required:
        - type
        - value
      type: object
      properties:
        type:
          pattern: ^[a-zA-Z0-9]{12}
          type: string
          description: National ID Type.
        value:
          pattern: ^[a-zA-Z0-9]{12}
          type: string
          description: National ID Value
    DiligencePrincipalRequest:
      required:
        - dateOfBirth
        - diligenceAddress
        - diligenceNationalId
        - firstName
        - lastName
        - nationality
        - percentOwnership
        - personalGuarantee
        - pullCBReport
      type: object
      properties:
        firstName:
          type: string
          description: First Name of the Principal Owner.
        lastName:
          type: string
          description: Last Name of the Principal Owner.
        dateOfBirth:
          pattern: YYYYMMDD
          type: string
          description: Date of Birth the Principal Owner
        nationality:
          pattern: ^[a-zA-Z]{3}$
          type: integer
          description: Nationality of the Principal Owner
          format: int32
        diligenceAddress:
          $ref: '#/components/schemas/DiligenceAddressRequest'
        personalGuarantee:
          pattern: ^[YN]{1}$
          type: string
          description: Principal Guarantee Flag. Possible values are yes or no.
        percentOwnership:
          type: number
          description: Principal Ownership percentage.
        pullCBReport:
          pattern: ^[YN]{1}$
          type: string
          description: Rights to Pull Credit Bureau Report.
        diligenceNationalId:
          $ref: '#/components/schemas/DiligenceNationalIdRequest'
    DiligenceSalesDataRequest:
      required:
        - businessProcedures
      type: object
      properties:
        businessProcedures:
          $ref: '#/components/schemas/DiligenceBusinessProceduresRequest'
    DiligenceSalesManDetailsRequest:
      required:
        - agentFName
        - agentLName
        - salesManId
      type: object
      properties:
        salesManDetailsId:
          type: integer
        salesManId:
          type: string
          description: Sales Rep Code
        agentFName:
          type: string
          description: Name of the Principal Owner.
        agentLName:
          type: string
          description: Last Name of the Principal Owner
        agentEmailID:
          type: string
          description: E-mail address of the Principal Owner
    DiligenceVisitationRequest:
      required:
        - productServiceSold
      type: object
      properties:
        productServiceSold:
          pattern: ^[a-zA-Z0-9]{0-200}$
          type: string
          description: Description of Goods and Services sold. Free Form Text, must not be pre-filled.
    DiligenceAddressResponse:
      type: object
      properties:
        addressId:
          type: integer
        lineOne:
          type: string
          description: Name of street address of the Principal Onwer.
        lineTwo:
          type: string
          description: Address number of the Principal Owner.
        lineThree:
          type: string
          description: Complement address of the Principal Owner.
        city:
          type: string
          description: City address of the Principal Owner.
        stateCode:
          type: string
          description: State address of the Principal Owner.  It should be standard state codes from Postal Authority.
        countryCode:
          type: string
          description: Country code address of the Principal Owner.  For a list of valid values get api/v1/application/acquirer-profile endpoint address countryCode.
        postalCode:
          type: string
          description: Zip code address of the Principal Owner.
        phoneNumber:
          type: string
          description: Phone number of the Principal Owner. The correct format without any leading zeros.
        mobileNumber:
          type: string
          description: Principal Phone Number.Leading zeros will not be accepted.
        email:
          type: string
          description: E-mail address of the Principal Owner.
    DiligenceApplicationResponse:
      type: object
      properties:
        diligenceMerchantResponse:
          $ref: '#/components/schemas/DiligenceMerchantResponse'
        diligencePrincipalResponses:
          type: array
          items:
            $ref: '#/components/schemas/DiligencePrincipalResponse'
        salesManDetailsResponse:
          $ref: '#/components/schemas/DiligenceSalesManDetailsResponse'
        diligenceSalesDataResponse:
          $ref: '#/components/schemas/DiligenceSalesDataResponse'
        currencyResponse:
          $ref: '#/components/schemas/DiligenceCurrencyResponse'
        diligenceVisitationResponse:
          $ref: '#/components/schemas/DiligenceVisitationResponse'
        applicationId:
          type: integer
          description: Application identification. Return on the API after the first save - post:/application/v1.
    DiligenceCurrencyResponse:
      type: object
      properties:
        currencyId:
          type: integer
        applicationCurrency:
          type: string
          description: 'The identification of merchant (MID) will be based on this supported currency. Possible value: Mexican PESO MXN / 484 or US Dollar USD / 840'
    DiligenceMerchantResponse:
      type: object
      properties:
        merchantId:
          type: integer
        legalForm:
          type: string
          description: Business Legal Form
        numberOutlets:
          type: integer
          description: ' No of Outlets for the Merchant. It''s mandatory for ISO Merchants and Regular Merchants in Mexico. It''s optional for Mexico Single Mid Sub Merchants Multi Mid PFAC Merchants.'
          format: int64
        businessStartDate:
          pattern: YYYYMMDD
          type: string
          description: The date business opened its doors.
    DiligenceNationalIdResponse:
      type: object
      properties:
        nationalId:
          type: integer
        type:
          pattern: ^[a-zA-Z0-9]{12}
          type: string
          description: National ID Type.
        value:
          pattern: ^[a-zA-Z0-9]{12}
          type: string
          description: National ID Value
    DiligenceOutletResponse:
      type: object
      properties:
        percentDeliveredZeroDays:
          type: number
          description: Percentage of order delivered in 0 days.Mandatory field if settle up card not present at post:/api/v1/application/requiredDetail/eCommerceIndCode/ECOMMERCE_ONLY, BOTH
        percentDeliveredSevenDays:
          type: number
          description: Percentage of Order delivered in 1-7 days.Mandatory field if settle up card not present at post:/api/v1/application/requiredDetail/eCommerceIndCode/ECOMMERCE_ONLY, BOTH
        percentDeliveredFourTeenDays:
          type: number
          description: Percentage of Order delivered in 0-14 days.Mandatory field if settle up card not present at post:/api/v1/application/requiredDetail/eCommerceIndCode/ECOMMERCE_ONLY, BOTH
        percentDeliveredThirtyDays:
          type: number
          description: Percentage of Order delivered in 15-30 days.Mandatory field if settle up card not present at post:/api/v1/application/requiredDetail/eCommerceIndCode/ECOMMERCE_ONLY, BOTH
        percentDeliveredThirtyDaysMore:
          type: number
          description: Percentage of Order delivered in more than 30 days.Mandatory field if settle up card not present at post:/api/v1/application/requiredDetail/eCommerceIndCode/ECOMMERCE_ONLY, BOTH
        percentMailOrderTelephoneOrder:
          type: number
          description: Percentage of Order placed over Telephone. Mandatory field if settle up card not present at post:/api/v1/application/requiredDetail/eCommerceIndCode/ECOMMERCE_ONLY, BOTH
        percentInStore:
          type: number
          description: Percentage of Order placed in Store. Mandatory field if settle up card not present at post:/api/v1/application/requiredDetail/eCommerceIndCode/ECOMMERCE_ONLY, BOTH
        percentInternet:
          type: number
          description: Percentage of Order placed on Internet. Mandatory field if settle up card not present at post:/api/v1/application/requiredDetail/eCommerceIndCode/ECOMMERCE_ONLY, BOTH
        outletBusinessId:
          type: integer
        creditCardSalesVolume:
          type: number
          description: Rolled up Total Credit Card Sales. If boarding group level, sub-group 1 level or sub-group 2 Level - with multiple outlets - the value shoud be the total Credit Card sales of all the outlets. But, if boarding a Member Level the value must be the total credit card sales of unic outlet.
        totalAverageTicket:
          type: number
          description: Outlet average ticket. If boarding group level, sub-group 1 level or sub-group 2 Level - with multiple outlets - this should be the average tick value for the respective level. But, if boarding a Member Level the value must be the average ticket for the unic outlet.
    DiligencePrincipalResponse:
      type: object
      properties:
        principalId:
          type: integer
        firstName:
          type: string
          description: First Name of the Principal Owner.
        lastName:
          type: string
          description: Last Name of the Principal Owner.
        dateOfBirth:
          pattern: YYYYMMDD
          type: string
          description: Date of Birth the Principal Owner
        nationality:
          pattern: ^[a-zA-Z]{3}$
          type: integer
          description: Nationality of the Principal Owner
          format: int32
        diligenceAddress:
          $ref: '#/components/schemas/DiligenceAddressResponse'
        personalGuarantee:
          pattern: ^[YN]{1}$
          type: string
          description: Principal Guarantee Flag. Possible values are yes or no.
        percentOwnership:
          type: number
          description: Principal Ownership percentage.
        pullCBReport:
          pattern: ^[YN]{1}$
          type: string
          description: Rights to Pull Credit Bureau Report.
        diligenceNationalId:
          $ref: '#/components/schemas/DiligenceNationalIdResponse'
    DiligenceSalesDataResponse:
      type: object
      properties:
        salesDataId:
          type: integer
        diligenceBusinessProceduresDTO:
          $ref: '#/components/schemas/DiligenceOutletResponse'
    DiligenceSalesManDetailsResponse:
      type: object
      properties:
        salesManDetailsId:
          type: integer
        salesManId:
          type: string
          description: Sales Rep Code
        agentFName:
          type: string
          description: Name of the Principal Owner.
        agentLName:
          type: string
          description: Last Name of the Principal Owner
        agentEmailID:
          type: string
          description: E-mail address of the Principal Owner
    DiligenceVisitationResponse:
      type: object
      properties:
        visitationId:
          type: integer
        productServiceSold:
          pattern: ^[a-zA-Z0-9]{0-200}$
          type: string
          description: Description of Goods and Services sold. Free Form Text, must not be pre-filled.
    DTokenResp:
      type: object
      properties:
        token_type:
          type: string
        expires_in:
          type: integer
          format: int64
        refresh_expires_in:
          type: integer
          format: int64
        access_token:
          type: string
        refresh_token:
          type: string
    TmsRequestDto:
      required:
        - applicationId
        - tmsTerminals
      type: object
      properties:
        applicationId:
          type: integer
          description: Application identification. Returned on the API after first save.
          example: 123
        tmsTerminals:
          type: array
          description: List of terminals for tms
          items:
            $ref: '#/components/schemas/TmsTerminalRequestDto'
    TmsTerminalRequestDto:
      required:
        - connectivity
        - timeZone
      type: object
      properties:
        connectivity:
          type: string
          description: Terminal connectivity preference
          example: WIFI
          enum:
            - 3G
            - 4G
            - ETH
            - WIFI
        timeZone:
          pattern: ^(UTC|GMT)[-+]\d{4}$
          type: string
          description: Timezone for region
          example: UTC-0400
      description: List of terminals for tms
    TmsResponseDto:
      type: object
      properties:
        applicationId:
          type: integer
        tmsTerminals:
          type: array
          items:
            $ref: '#/components/schemas/TmsTerminalResponseDto'
    TmsTerminalResponseDto:
      type: object
      properties:
        id:
          type: integer
        connectivity:
          type: string
        timeZone:
          type: string
    TmpInstallRequestDto:
      type: object
      properties:
        applicationId:
          minimum: 1
          type: integer
          description: Application identification
          example: 123
        terminals:
          type: array
          items:
            $ref: '#/components/schemas/TmpTerminal'
    TmpTerminal:
      type: object
      properties:
        typeTechnology:
          type: string
        address:
          $ref: '#/components/schemas/AddressTmpDto'
    TmpInstallResponseDto:
      type: object
      properties:
        applicationId:
          type: integer
        terminals:
          type: array
          items:
            $ref: '#/components/schemas/TmpTerminal'
    GenericTerminalRequestDto:
      required:
        - dateTime
        - fileName
        - maintenanceData
        - retailCardDataLayout122
        - retailLayout
        - retailerId
        - traceAuditNumber
      type: object
      properties:
        dateTime:
          type: string
        fileName:
          type: string
        maintenanceData:
          $ref: '#/components/schemas/MaintenanceData'
        retailCardDataLayout122:
          $ref: '#/components/schemas/RetailCardDataLayout122'
        retailLayout:
          $ref: '#/components/schemas/RetailLayout'
        retailerId:
          type: string
        terminalCardDataLayout:
          $ref: '#/components/schemas/TerminalCardDataLayout'
        terminalCardLayoutPTDD2:
          $ref: '#/components/schemas/TerminalCardLayoutPTDD2'
        terminalLayout:
          $ref: '#/components/schemas/TerminalLayoutDto'
        traceAuditNumber:
          type: integer
          format: int32
    TerminalLayoutDto:
      required:
        - encryptionData
        - recordType
        - termStatus
        - terminalCapabilities
        - terminalFlag
        - terminalGroup
        - terminalLimit
        - terminalOwner
        - terminalType
        - timeOffset
      type: object
      properties:
        billingInfo:
          type: string
        encryptionData:
          $ref: '#/components/schemas/EncryptionData'
        fileLayout:
          type: string
        languageId:
          type: string
        recordType:
          type: string
        serviceRepresentativeData:
          $ref: '#/components/schemas/ServiceRepresentativeData'
        termStatus:
          type: string
        terminalCapabilities:
          $ref: '#/components/schemas/TerminalCapabilities'
        terminalFlag:
          $ref: '#/components/schemas/TerminalFlag'
        terminalGroup:
          type: string
        terminalLimit:
          $ref: '#/components/schemas/TerminalLimit'
        terminalOwner:
          type: string
        terminalType:
          type: string
        timeOffset:
          type: string
    Equipment:
      required:
        - equipCode
        - quantity
      type: object
      properties:
        quantity:
          type: integer
          description: Number of equipment’s to be created.
          format: int32
        equipCode:
          type: string
          description: Refers to the 4 digit equip code.
        terminalIdList:
          type: array
          items:
            type: string
        features:
          type: array
          items:
            $ref: '#/components/schemas/Feature'
        id:
          type: integer
    Feature:
      type: object
      properties:
        idEquipmentFeature:
          type: integer
        code:
          maxLength: 5
          type: string
          description: Refers to the 4 digit equip code.
          nullable: true
        value:
          maxLength: 50
          type: string
          nullable: true
    TerminalsDtoRequest:
      required:
        - appBusinessType
        - equipmentList
      type: object
      properties:
        equipmentList:
          type: array
          items:
            $ref: '#/components/schemas/Equipment'
        appBusinessType:
          maxLength: 1
          type: string
          nullable: true
          example: S
          default: R
          enum:
            - R
            - S
            - L
            - C
            - M
            - O
            - P
            - Q
            - R
            - S
            - L
            - C
            - M
            - O
            - P
            - Q
    AccountDto_CreateApplication:
      required:
        - accountCurrencyCode
        - accountTypeIndex
        - billingLevel
      type: object
      properties:
        billingLevel:
          type: boolean
          description: Indicates if the account will be settled to on a funding. Billing accounts should have the Bank Account details filled.
          default: false
        receiverCountryCode:
          maxLength: 3
          minLength: 3
          pattern: ^[A-Z]{3}$
          type: string
          description: ISO-3166 alpha country code for the merchant's bank country. Mandatory if billing level is set to true.
          nullable: true
          example: IRE
        statementTypeIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Statement type to be generated. As per the predefined values or left blank where not applicable. For possible values check get:/api/v1/application/acquirer-profile with field name STATEMENTTYPEINDEX.
          example: '001'
        statementGenerationCode:
          type: string
          description: Option for statement generation.
          nullable: true
          example: SUPPRESS
          default: GENERATE_IF_ACTIVITY
          enum:
            - SUPPRESS
            - GENERATE
            - GENERATE_IF_ACTIVITY
            - GENERATE_IF_NO_ACTIVITY
        annualFeeDueDate:
          pattern: ^([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])$
          type: string
          description: YYYYMMDD Date which the annual fee for this account should be generated
          format: date
        calendarTypeIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Defines the scheme exception days when calculating the funding date of merchant payments. As per the institution configuration. For possible values check get:/api/v1/application/acquirer-profile with field name CALENDARTYPEINDEX.
          example: '001'
        paymentReference:
          maxLength: 18
          pattern: ^[0-9a-zA-Z]{0,18}$
          type: string
          description: For institutions using IFS funding file this field should contain the direct debit contract number (required for merchant debits). For others it is a reference text to display on merchant's bank statement if supported on the funding file.
          nullable: true
          example: '999999999999999999'
        payable:
          $ref: '#/components/schemas/PayableDto_CreateApplication'
        receivable:
          $ref: '#/components/schemas/ReceivableDto_CreateApplication'
        applicationId:
          maximum: 1e+26
          type: integer
          description: Application ID, owner of this Account
        accountTypeIndex:
          maxLength: 3
          minLength: 3
          type: string
          description: Index of the account type to be assigned to the merchant. For a list of valid codes use API get /application/account-settlements with field name accountSettlement.accountType or get /application/account-type.
          nullable: true
          example: '170'
        accountCurrencyCode:
          maxLength: 3
          minLength: 3
          pattern: ^[a-zA-Z]{3}$
          type: string
          description: ISO 4217 currency of the account selected, possible values are restricted based on the institution configuration. For a list of valid codes use API get /application/account-fees with field name accountCurrencyCode or get /application/account-currency.
          nullable: true
          example: EUR
    AddressDto_CreateApplication:
      required:
        - categoryIndex
        - city
        - contactName
        - countryCode
        - email
        - line1
        - postCode
        - telephone
      type: object
      properties:
        categoryIndex:
          maxLength: 3
          minLength: 0
          pattern: ^[0-9]{3}$
          type: string
          description: The category of the address to be added. It can be a mandatory or optional category, defined per Institution. For possible values check get:/api/v1/application/acquirer-profile with field name addressCategories.
          nullable: true
          example: '001'
        contactName:
          maxLength: 35
          minLength: 0
          type: string
          description: The contact name at the address location. Any extended ASCII characters contains 2 bytes
          nullable: true
          example: Joe Smith
        groupSpecific:
          type: boolean
          description: Only applicable if a merchant is in a hierarchy. Indicates if the address is to be used for all merchants within the group.
          nullable: true
          example: false
        line1:
          maxLength: 35
          minLength: 0
          type: string
          description: Merchant address line 1 for the specified address category.
          nullable: true
          example: 15 Beach Street
        line2:
          maxLength: 35
          minLength: 0
          type: string
          description: Merchant address line 2 for the specified address category.
          nullable: true
          example: 4th Zone
        line3:
          maxLength: 35
          minLength: 0
          type: string
          description: Merchant address line 3 for the specified address category.
          nullable: true
          example: Bremen
        line4:
          maxLength: 35
          minLength: 0
          type: string
          description: Merchant address line 4 for the specified address category.
          nullable: true
          example: Saxony
        line5:
          maxLength: 35
          minLength: 0
          type: string
          description: Merchant address line 5 for the specified address category.
          nullable: true
          example: Ireland
        postCode:
          maxLength: 20
          minLength: 0
          type: string
          description: Merchant address post code or zip code for the specified address category.
          example: D18 R219
        city:
          maxLength: 35
          minLength: 0
          type: string
          description: Merchant city for the specified address category.
          example: Frankfurt
        state:
          maxLength: 3
          minLength: 0
          type: string
          description: Merchant state for the specified address category.
          example: TX2
        countryCode:
          maxLength: 3
          minLength: 3
          pattern: ^[A-Z]{3}$
          type: string
          description: ISO-3166 alpha country code representing the country the address category is located in, the values are restricted based on institutions configuration. For possible values check get:/api/v1/application/acquirer-profile with field name COUNTRYCODE.
          nullable: true
          example: IRE
        telephone:
          maxLength: 15
          minLength: 0
          pattern: ^[a-zA-Z0-9_ \.\-\,]{0,15}$
          type: string
          description: Telephone at the specified address category
          nullable: true
          example: '00353112345678'
        fax:
          maxLength: 15
          minLength: 0
          pattern: ^[a-zA-Z0-9_ \.\-\,]{0,15}$
          type: string
          description: Fax at the specified address category
          nullable: true
          example: '005351456789'
        deliveryMethodIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Delivery method code of correspondence to this address; however, it is dependent on the delivery solutions in place for the given institution. For possible values check get:/api/v1/application/acquirer-profile with field name DELIVERYMETHODINDEX.
          nullable: true
          example: '200'
        email:
          maxLength: 60
          pattern: ^([a-zA-Z0-9_\-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$
          type: string
          description: Email address (with extended length capacity) for the specified address category
          example: abc@omnipay.com
        effectiveDate:
          maxLength: 8
          minLength: 8
          pattern: "^([0-9]{4})(-?)(1[0-2]|0[1-9])\x02(3[01]|0[1-9]|[12][0-9])$"
          type: string
          description: Effective date of the address. When selecting address information the Omnipay platform will select the most recent effective address. For auditing reasons merchant address can not be deleted after it has become effective hence the use of effective dates for addresses. Format YYYYMMDD. If ommited the default is the current instituiton posting date.
          format: date
          nullable: true
        applicationId:
          maximum: 1e+26
          type: integer
          description: Application ID, owner of this address
    ContractDto_CreateApplication:
      required:
        - clientRegionIndex
        - clientTariffIndex
        - postingTariffIndex
        - serviceContractIndex
        - settlementMethodIndex
      type: object
      properties:
        serviceContractIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: 'The service contract defines the processing rules for a merchant. For a list of valid codes use this API - GET: /api/v1/application/contracts with field name serviceContractIndex'
          example: '497'
        clientTariffIndex:
          maxLength: 6
          pattern: ^[0-9]{0,6}$
          type: string
          description: 'The client tariff determines the set of account fees applicable to the merchant. For a list of valid codes use this API - GET: /api/v1/application/contracts with field name clientTariffIndex'
          example: '321'
        postingTariffIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: 'The posting tariff determines how transactions and fees are posted to the merchant accounts. For a list of valid codes use this API - GET: /api/v1/application/contracts with field name postingTariffIndex'
          example: '503'
        settlementMethodIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: 'The settlement method defines the frequency and grouping of transactions posted to makeup a payment as well as the funding channel. For a list of valid codes use this API - GET: /api/v1/application/contracts with field name settlementMethodIndex'
          example: '179'
        paymentMethodIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: 'Institution defined value related to a specific payment interface.Default to spaces when no values provided. For a list of valid codes use this API - GET: /api/v1/application/contracts with field name paymentMethodIndex.'
          nullable: true
          example: '043'
        protectAgainstFXChange:
          type: boolean
          description: |-
            Flag to indicate if the merchant is protected against currency
            fluctuations on the event the transaction is disputed and the transaction currency is different to the merchant funding currency.
        clientRegionIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: 'The selected client region will determine how the transactions are settled to the scheme. For a list of valid codes use this API - GET: /api/v1/application/contracts with field name clientRegionIndex.'
          example: '901'
        tierStructureIndex:
          maxLength: 3
          pattern: ^[0-9]{0,3}$
          type: string
          description: 'If tier pricing is active on the institutions this field indicates which is the Tier Structure assigned to the merchant, if not in use for the institution use 000=N/A for this field. For a list of valid codes use this API - GET: /api/v1/application/contracts with field name tierStructureIndex.'
          nullable: true
          example: '1'
        reclassBillbackIndicatorCode:
          type: string
          description: Indicator to pass the Reclass fee to the merchant. Reclass Fees can only be passed to the merchant when configured for the Institution.
          nullable: true
          example: NA
          default: NA
          enum:
            - NA
            - NO_BILLBACK
            - AUT_BILLBACK_DR
            - AUT_BILLBACK_ALL
            - MANUAL_BILLBACK
        withholdIncomeTariffIndex:
          maxLength: 6
          minLength: 6
          pattern: ^[0-9]{6}$
          type: string
          description: 'The withhold income tariff id for the institution. For a list of valid codes use this API - GET: /api/v1/application/contracts with field name withholdIncomeTariffIndex'
          nullable: true
          example: '001007'
        withholdVatTariffIndex:
          maxLength: 6
          minLength: 6
          pattern: ^[0-9]{6}$
          type: string
          description: 'The withhold vat tariff id for the institution. For a list of valid codes use this API - GET: /api/v1/application/contracts with field name withholdVatTariffIndex'
          nullable: true
          example: '001007'
        regionalTaxIndex:
          maxLength: 3
          pattern: ^[0-9]{0,3}$
          type: string
          description: Indicator if regional tax to be generated or not. For possible values check get:/api/v1/application/acquirer-profile with field name REGIONALTAXINDEX.
          nullable: true
          example: '1'
    EncryptionDataDto_CreateApplication:
      required:
        - pinCharacter
      type: object
      properties:
        pinCharacter:
          type: string
          enum:
            - F
            - ' '
            - '0'
            - '1'
            - '2'
            - '3'
            - '4'
            - '5'
            - '6'
            - '7'
            - '8'
            - '9'
    FullApplicationDtoRequest_CreateApplication:
      required:
        - main
      type: object
      properties:
        main:
          $ref: '#/components/schemas/MainDtoRequest_CreateApplication'
        terminals-processing:
          type: array
          items:
            $ref: '#/components/schemas/TerminalRequestDto_CreateApplication'
        e-store:
          $ref: '#/components/schemas/IpgRequestDto_CreateApplication'
    HierarchyDto_CreateApplication:
      type: object
      properties:
        internalMerchantId:
          pattern: ^[0-9]{8}$
          type: string
          description: Unique merchant number generated by Fiserv after submitting an application. It´ll be used in response only.
          readOnly: true
          example: '00000099'
        parentInternalMerchantId:
          pattern: ^[0-9]{8}$
          type: string
          description: The internal OmniPay MID to which the merchant needs to be linked to as a child merchant. When populated should be an existing group /sub group merchant MID.
          nullable: true
          example: '00000100'
      description: Hierarchy data
    IpgDto_CreateApplication:
      required:
        - stFsCheckBlockedCard
        - stFsCheckBlockedClassC
        - stFsCheckBlockedIp
        - stFsCheckBlockedName
        - stTimezone
      type: object
      properties:
        mercUserId:
          type: string
          description: Database user id (in case of creating the store this user id will be used for the new user in the new store)
        mercUserPassword:
          maxLength: 32
          minLength: 0
          type: string
          description: user password
        mercUserCertificatePassword:
          maxLength: 32
          minLength: 0
          type: string
          description: certificate password
        mercUserCertificateId:
          maxLength: 50
          minLength: 0
          type: string
          description: Reference to the certificate content (located in mcsResponse/certificates). This element is used only in response if certificateDeliveryMethod is set to MCSRESPONSE
        stEmail:
          maxLength: 100
          minLength: 0
          type: string
          description: store email address.
        stUrl:
          maxLength: 100
          minLength: 0
          type: string
          description: store url addrress - (e.g. https://www.webshop.com)
          example: https://www.webshop.com
        stDefaultCurrency:
          pattern: '[A-Z]{3}'
          type: string
          description: ISO 3 byte alphnumeric currency code. For possible value use get /application/data/countrycode
        stTimezone:
          maxLength: 50
          minLength: 0
          type: string
          description: Timezone code (e.g. 'Europe/London', 'Europe/Berlin', 'Brazil/West'). For valid values get - /api/v1/application/data/{countryCode}
          example: Brazil/West
        stStatus:
          type: string
          description: Actual status of the store (e.g. OPEN,CLOSED)
          example: OPEN
          enum:
            - OPEN
            - CLOSED
        stOpenDate:
          type: string
          description: Open date of the store
          format: date
        stCloseDate:
          type: string
          description: Close date of the store
          format: date
        stAcquirer:
          maxLength: 32
          minLength: 0
          type: string
          description: Acquirer 3dsecure  configuration  name,  e.g.  'Dummy'  if  3dsecure  is  not  relevant  or  in  test  environments.  Please  obtain  list  of  names  from  your  support  team.
        certificateDeliveryMethod:
          maxLength: 256
          minLength: 0
          type: string
        stFsBinBlockProfile:
          maximum: 99
          type: integer
          description: '        1 - Germany                       2 - Germany, Austria, Switzerland                       3 - Ireland                       4 - Greece                       5 - Italy                       6 - Italy, Switzerland                       7 - United                       Kingdom                       8 - United Kingdom, Ireland                       9 - Austria, Belgium, Denmark, Finland, France, Germany, Ireland, Italy, Netherlands, Norway, Portugal, Spain, Sweden, Switzerland, United Kingdom, Greece                       10 -                       Above countries + Australia, Canada, New Zealand, Japan, USA                       11 - All countries except: Bulgaria, Cameroon, Egypt, Gambia, Ghana, Indonesia, Iran, Israel, Lithuania, Malaysia, Morocco, Nigeria,                       Pakistan, Romania, Russia, Turkey,                       Ukraine , Vietnam                       99 - All countries                       Mind this will be changed soon to support also profile sets of other regions'
          format: int32
          example: 1
        stFsCheckBlockedIp:
          type: boolean
          description: Logical value which determine if blocked IP check should be evaluated. In this check you can choose to block certain IP addresses from purchasing at your store. Anyone visiting your site from that IP address will not be able to purchase at your online store.
        stFsCheckBlockedClassC:
          type: boolean
          description: Logical value which determine if blocked class-C check should be evaluated. In this check you can choose to block certain class C addresses from purchasing at your store. Anyone visiting your site from that class C address will not be able to purchase at your online store.
        stFsCheckBlockedName:
          type: boolean
          description: Logical value which determine if blocked name check should be evaluated. In this check you can choose to block certain person's names from purchasing at your store. Anyone visiting your site with that name will not be able to purchase at your online store.
        stFsCheckBlockedCard:
          type: boolean
          description: Logical value which determine if blocked card check should be evaluated. In this check you can choose to block certain card numbers from purchasing at your store. Those card numbers will be prohibited from buying at your online store.
        stFsBinBlockCustProfile:
          maximum: 10
          minimum: 0
          type: integer
          description: Number value of the bin block profile. Could be one of the following                       1    -    IMS                       2    -    IMS                       3    -    IMS                       4    -    IMS                       5    -    IMS                       6    -    IMS                       7    -    IMS                       8    -    IMS                       9    -    TELECASH                       Mind this may change soon to support different resllers.
          format: int32
          example: 1
        stFsDuplLockoutTimeSecs:
          minimum: 0
          type: integer
          description: Amount of time in seconds for duplicate lockout. You can choose how long a duplicate transaction will continue to be blocked. No duplicate orders will be approved until the lock out time has expired.
          format: int32
        stFsAutoLockoutTimeSecs:
          minimum: 0
          type: integer
          description: Amount of time in seconds for auto lockout. You can choose how long any automatically blocked transaction will continue to be blocked. No orders from that blocked name (or card, Domain, IP, or Class C address) will be approved until the lock out time has expired.
          format: int32
        store:
          $ref: '#/components/schemas/IpgStoreDto_CreateApplication'
    IpgPurchaseLimitsRequestDto_CreateApplication:
      type: object
      properties:
        currency:
          maxLength: 3
          minLength: 3
          pattern: ^[a-zA-Z]{3}$
          type: string
          nullable: true
          example: EUR
        limit:
          maximum: 9999999999.99
          exclusiveMaximum: false
          minimum: 0.01
          exclusiveMinimum: false
          type: number
          description: This field contains the merchant max amount limit for transaction processing in e-store. This is with no decimal.
          example: 100
    IpgRequestDto_CreateApplication:
      required:
        - ipg
        - ipgPurchaseLimitsByIdIpg
        - ipgServices
        - ipgTerminalsByIdIpg
      type: object
      properties:
        ipgPurchaseLimitsByIdIpg:
          type: array
          items:
            $ref: '#/components/schemas/IpgPurchaseLimitsRequestDto_CreateApplication'
        ipg:
          $ref: '#/components/schemas/IpgDto_CreateApplication'
        ipgServices:
          type: array
          items:
            $ref: '#/components/schemas/IpgServiceFeaturesDto_CreateApplication'
        ipgTerminalsByIdIpg:
          $ref: '#/components/schemas/IpgTerminalsByIdIpgDto_CreateApplication'
    IpgServiceFeaturesConfig_CreateApplication:
      type: object
      properties:
        item:
          maxLength: 50
          type: string
          description: Item type
          example: allowMOTO
        value:
          maxLength: 1024
          type: string
          description: Feature Value
          example: Specified value for given item type
    IpgServiceFeaturesDto_CreateApplication:
      required:
        - configs
      type: object
      properties:
        type:
          maxLength: 50
          type: string
          description: Service type which should be configured
          example: payPal
        configs:
          type: array
          items:
            $ref: '#/components/schemas/IpgServiceFeaturesConfig_CreateApplication'
    IpgStoreDto_CreateApplication:
      type: object
      properties:
        storeId:
          type: string
          description: StoreId. Generated during boarding phrase
          readOnly: true
    IpgTerminalsByIdIpgDto_CreateApplication:
      type: object
      properties:
        idOnbFdposterminals:
          type: integer
        idOnbFdposEquipRecord:
          type: integer
        idOnbIpg:
          type: integer
        endpointId:
          type: string
        paymentMethod:
          type: string
          description: |-
            Accepted payment methods (Visa, Amex, Mastercard and etc). By default options selected as per the services chosen on Services / Fee page. Fill all desired values separated by a comma
               Possible values: AMEX,BCMC,CUP,DINERSCLUB,JCB,MASTERCARD,VISA,DEBITDE,MAESTRO,MEXICOLOCAL,DIREKT,GIROPAY,PAYPAL,MOBILETOPUP,SOFORT,IDEAL,KLARNA,CABAL,SOROCRED,IKEA
        transactionOrigin:
          type: string
          description: |-
            Transaction Origins available to the Merchant. Fill all desired values separated by a comma
               Possible values: ECI,MOTO,RETAIL
        correlationID:
          type: string
          description: Unique identifier for this terminal element. Used for pairing terminal elements between request and response. When creating a new store, terminal ID can be assigned by IPG and correlation ID is used for easy request-resposne terminal pairing. This ID is not stored or processed, it's only copied to this terminal element in the response.
        submissionComponent:
          type: string
          description: |-
            Options available to the Merchant to submit a transaction from. Fill all desired values separated by a comma
               Possible Values: API,CONNECT,VT,EPAS
        payerSecurityLevel:
          type: string
          description: |-
            Only if 3dsecure traffic needs to be processed by diferent terminal, than only one of the two should be selected
               Possible Values: Options Empty / Not Empty
        currency:
          pattern: '[A-Z]{3}|\d{3}'
          type: string
          description: Currency Alpha ISO code supported by terminal
        active:
          maxLength: 1
          minLength: 1
          type: string
          description: Is the terminal Active ?
        correlationId:
          type: string
        terminalStatusCode:
          type: string
          description: Value of this terminal element indicates that status of terminal's certificate
    LocationDto_CreateApplication:
      required:
        - cityUrl
        - countryCode
      type: object
      properties:
        countryCode:
          maxLength: 3
          minLength: 3
          pattern: ^[A-Z]{3}$
          type: string
          description: 'ISO-3166 alpha country code representing the country the merchant is located in, the values are restricted based on institutions configuration. For a list of valid codes use API - GET: /api/v1/application/data with field name COUNTRYCODE'
          example: IRE
        state:
          maxLength: 3
          minLength: 0
          type: string
          description: Code representing the state the merchant is located in. If the country selected is United States, Canada or Italy, this field is mandatory.
          nullable: true
          example: MYS
        cityUrl:
          maxLength: 13
          minLength: 0
          type: string
          description: Merchant city for physical merchants, URL for ecommerce merchants, Telephone number for Mail Order/Telephone Order.
          example: Paris
        zip:
          maxLength: 11
          minLength: 0
          type: string
          description: Merchant zip/postcode
          nullable: true
          example: D18 R529
        street:
          maxLength: 40
          minLength: 0
          type: string
          description: Merchant street
          nullable: true
          example: Rue Raynouard 24
        serviceTelNo:
          maxLength: 16
          minLength: 0
          pattern: ^[0-9]{0,16}$
          type: string
          description: Merchant service telephone number
          nullable: true
          example: '0123456789111'
        countyIndex:
          maxLength: 3
          pattern: ^[0-9]{0,3}$
          type: string
          description: County id where the merchant is located. As per Institution configuration. For a list of valid codes use Acquirer Profile API /api/v1/application/acquirer-profile with field name equal to COUNTYINDEX
          nullable: true
          example: '840'
        municipalityIndex:
          maxLength: 5
          minLength: 0
          pattern: ^[0-9]{0,5}$
          type: string
          description: Municipality id where the merchant is located. As per Institution configuration. For a list of valid codes use Acquirer Profile API /api/v1/application/acquirer-profile with field name equal to MUNICIPALITYINDEX
          nullable: true
          example: '80'
    MainDtoRequest_CreateApplication:
      required:
        - accounts
        - addresses
        - contract
        - groupLevel
        - hierarchy
        - location
        - requiredDetails
      type: object
      properties:
        groupLevel:
          type: integer
          description: 'For a list of valid codes use this API - GET: /api/v1/application/data with field name merchantLevels'
          format: int32
        cardPresence:
          type: string
          description: For member level is mandatory field, but for sub-group (corporate or economic group) it is optional. Valid values to member - PHYSICAL, VIRTUAL, BOTH. Valid value to sub-group - PHYSICAL, VIRTUAL, BOTH or NULL.
          enum:
            - PHYSICAL
            - VIRTUAL
            - BOTH
        hierarchy:
          $ref: '#/components/schemas/HierarchyDto_CreateApplication'
        requiredDetails:
          $ref: '#/components/schemas/RequiredDetailsDto_CreateApplication'
        optionalDetails:
          $ref: '#/components/schemas/OptionalDetailsDto_CreateApplication'
        contract:
          $ref: '#/components/schemas/ContractDto_CreateApplication'
        location:
          $ref: '#/components/schemas/LocationDto_CreateApplication'
        schemeDetails:
          $ref: '#/components/schemas/SchemeDetailsDto_CreateApplication'
        salesDetails:
          $ref: '#/components/schemas/SalesDetailsDto_CreateApplication'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/AddressDto_CreateApplication'
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/AccountDto_CreateApplication'
        services:
          type: array
          items:
            $ref: '#/components/schemas/ServiceDto_CreateApplication'
        references:
          type: array
          description: The merchants references are used to add additional information to a merchant or to flag a merchant to be included in certain reports or files. The applicable references are agreed between the institution and Fiserv. Depending on the institution setup some client references are mandatory at a member level or at billing level.
          items:
            $ref: '#/components/schemas/ReferencesDto_CreateApplication'
        merchantDevices:
          type: array
          items:
            $ref: '#/components/schemas/MerchantDeviceDto_CreateApplication'
        merchantAccountFees:
          type: array
          items:
            $ref: '#/components/schemas/MerchantAccountFeeDto_CreateApplication'
        transactionCharges:
          type: array
          items:
            $ref: '#/components/schemas/TransactionChargesDto_CreateApplication'
        merchantRequest:
          type: array
          items:
            $ref: '#/components/schemas/MerchantRequestDto_CreateApplication'
        paymentInstructions:
          type: array
          items:
            $ref: '#/components/schemas/PaymentInstructionDto_CreateApplication'
        lastUpdate:
          type: string
          format: date
        parentMerchant:
          type: integer
    MerchantAccountFeeDto_CreateApplication:
      type: object
      properties:
        recordIdNumber:
          maxLength: 10
          minLength: 10
          pattern: ^[\d\.]{10}$
          type: string
          description: Record id of the client account fee to be overwritten. The corresponding id should belong to the client tariff id selected on the merchant contract details. For a list of valid codes use API get /application/account-fees with field name recordIdNumber or get /application/account-record end-point.
          nullable: true
          example: '9999999999'
        feePercentage:
          pattern: ^[\d\.]{0,11}$
          type: string
          description: Fee percentage to be applied. Valid value as per the Format NNNNNN.NNNN
          nullable: true
          example: '5.0'
          default: '0.0000'
        feeBase:
          maxLength: 11
          minLength: 0
          pattern: ^[\d\.]{0,11}$
          type: string
          description: Fee base to be applied. Valid value as per the Format NNNNNN.NNNN
          nullable: true
          example: '100.0'
          default: '0.0000'
        feeMinimum:
          maxLength: 11
          minLength: 0
          pattern: ^[\d\.]{0,11}$
          type: string
          description: Fee minimum to be applied. Valid value as per the Format NNNNNN.NNNN
          nullable: true
          example: '13.0'
          default: '0.0000'
        feeMaximum:
          maxLength: 11
          minLength: 0
          pattern: ^[\d\.]{0,11}$
          type: string
          description: Fee maximum to be applied. Valid value as per the Format NNNNNN.NNNN
          nullable: true
          example: '342.0'
          default: '0.0000'
        feeMode:
          type: boolean
          description: Indicates if the fee is being generated (true) or suppressed (false). Suppressing a fee in effect is the same as setting the fee's pricing to zero, i.e. no fee will be charged.
          nullable: true
          example: false
          default: true
        triggerHighValue:
          maxLength: 18
          minLength: 0
          pattern: ^[\d\.]{0,18}$
          type: string
          description: Indicates the upper threshold limit set in terms of value of transaction that is used as a trigger for fee calculation.
          nullable: true
          example: '250.0'
          default: '0.00'
        triggerLowValue:
          maxLength: 18
          minLength: 0
          pattern: ^[0-9\.]{0,18}$
          type: string
          description: Indicates the lower threshold limit set in terms of value of transaction that is used as a trigger for fee calculation.
          nullable: true
          example: '0.1'
        triggerVolumeHigh:
          maxLength: 18
          minLength: 0
          pattern: ^[0-9]{0,18}$
          type: string
          description: Indicates the upper threshold limit set in terms of volume of transactions that is used as a trigger for fee calculation.
          nullable: true
          example: '250'
          default: '0.00'
        triggerVolumeLow:
          maxLength: 18
          minLength: 0
          pattern: ^[0-9]{0,18}$
          type: string
          description: Indicates the lower threshold limit set in terms of volume of transactions that is used as a trigger for fee calculation.
          nullable: true
          example: '250'
          default: '0.00'
        applicationId:
          maximum: 1e+26
          type: integer
          description: Application ID, owner of this MerchantAccountFee
    MerchantDeviceDto_CreateApplication:
      type: object
      properties:
        externalTerminalId:
          maxLength: 20
          minLength: 0
          pattern: ^[a-zA-Z0-9]{1,20}$
          type: string
          description: The unique id for the terminal. This value should be unique within the institution.
          example: '54999530'
        serialNumber:
          maxLength: 32
          minLength: 0
          pattern: ^[a-zA-Z0-9_ \.\&\, ]{0,9}$
          type: string
          description: The serial number of the terminal
          nullable: true
          example: '123456789'
        contactName:
          maxLength: 32
          minLength: 0
          pattern: ^[a-zA-Z0-9À-ý_ \.\&\, ]{0,41}$
          type: string
          description: Contract name at terminal location
          nullable: true
          example: John Doe
        terminalLocation:
          maxLength: 25
          minLength: 0
          pattern: ^[a-zA-Z0-9À-ý_ \.\&\, ]{0,25}$
          type: string
          description: Location of the terminal
          nullable: true
          example: Munich
        telephone:
          maxLength: 15
          minLength: 0
          pattern: ^[0-9]{0,15}$
          type: string
          description: Connection id or phone number for the terminal
          nullable: true
          example: '003531123456'
        schemeId:
          maxLength: 6
          minLength: 0
          pattern: ^[0-9]{0,6}$
          type: string
          description: The identity of the schema
          nullable: true
          example: '000000'
        accountCurrencyCode:
          maxLength: 3
          minLength: 0
          pattern: ^[A-Z]{3}$
          type: string
          description: ISO 4217 currency code.
          nullable: true
          example: EUR
        system_batchId:
          maximum: 999999
          maxLength: 6
          pattern: ^[0-9]{6}$
          type: integer
          description: Identity number of the system Batch
          format: int32
          nullable: true
          example: 234234
        feeEffeciveDate:
          maxLength: 8
          pattern: ^([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])$
          type: string
          description: Date the terminal fee is effective from. Format YYYYMMDD. If ommited the default will be the current institution posting date.
          format: date
          nullable: true
        lastFeeDate:
          maxLength: 8
          pattern: ^([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])$
          type: string
          description: Last fee date. Format YYYYMMDD
          format: date
          nullable: true
        clientFeeIndex:
          maximum: 999
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3,3}$
          type: integer
          description: If fees should be applied to the device, this code will indicate which is the corresponding fee to be triggered. For a list of valid codes use Acquirer Profile API get reference_data end-point with query parameter classification equal to clientFeeIndex.
          format: int32
          nullable: true
          example: 402
        feeExpiryDate:
          maxLength: 8
          pattern: ^([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])$
          type: string
          description: Fee expiry date. Format YYYYMMDD
          format: date
          nullable: true
        configOfTerminalIndex:
          maxLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Code corresponding to the configuration of the terminal. For possible values check get:/api/v1/application/acquirer-profile with field name CONFIGOFTERMINALINDEX.
          nullable: true
          example: '001'
        installDate:
          maxLength: 8
          pattern: ^([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])$
          type: string
          description: Date the terminal was installed. Format YYYYMMDD
          format: date
          nullable: true
        activeDate:
          maxLength: 8
          pattern: ^([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])$
          type: string
          description: Date the terminal was activated. Format YYYYMMDD
          format: date
          nullable: true
        terminationDate:
          maxLength: 8
          pattern: ^([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])$
          type: string
          description: Termination date. Format YYYYMMDD
          format: date
          nullable: true
        terminalPassword:
          maxLength: 8
          pattern: ^[a-zA-Z0-9À-ý_ \.\&\,]{8}$
          type: string
          description: The password for the terminal
          nullable: true
          example: password
        terminalTypeIndex:
          maxLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Code corresponding to the terminal type. For possible values check get:/api/v1/application/acquirer-profile with field name TERMINALTYPEINDEX.
          nullable: true
          example: '000'
        terminalCountryCode:
          maxLength: 3
          pattern: ^[A-Z]{3,3}$
          type: string
          description: ISO-3166 alpha country code representing the country the terminal is located. There is a restriction on the allowed countries for the institution.
          nullable: true
          example: IRE
        serviceProviderIndex:
          maxLength: 3
          pattern: ^[0-9,]{3}$
          type: string
          description: Code associated with the company who takes care of the terminal. For a list of valid codes use Acquirer Profile API get reference_data end-point with query parameter classification equal to serviceProviderIndex.
          nullable: true
          example: '001'
        emv:
          type: boolean
          description: Indicate if the terminal is EMV capable terminal
          nullable: true
          example: true
        city:
          maxLength: 13
          minLength: 0
          pattern: ^[a-zA-Z0-9À-ý_ \.\&\,]{0,13}$
          type: string
          description: The city were the terminal resides at
          nullable: true
          example: Valletta
        amex:
          type: boolean
          description: Indicates if the terminal supports Amex transactions, if true additional fields are required.
          nullable: true
          example: false
        acquiringProfileIndex:
          maxLength: 16
          minLength: 0
          pattern: ^[0-9]{16}$
          type: string
          description: Code correspnding to the acquirer profile setup on the terminal. For possible values check get:/api/v1/application/acquirer-profile with field name ACQUIRINGPROFILEINDEX.
          nullable: true
          example: '0000000000000000'
        templateId:
          maxLength: 4
          pattern: ^[0-9]{4}$
          type: string
          description: Template id for the terminal
          nullable: true
          example: '1234'
        amexPhoneNo1:
          maxLength: 24
          minLength: 0
          pattern: ^[0-9]{0,24}$
          type: string
          description: If Amex = true then Amex phone number 1 must be present.
          nullable: true
          example: '00012458754865148'
        amexPhoneNo2:
          maxLength: 24
          minLength: 0
          pattern: ^[0-9]{0,24}$
          type: string
          description: If Amex = true then Amex phone number 2 must be present.
          nullable: true
          example: '00012458754865148'
        relatedTId:
          maxLength: 20
          minLength: 0
          pattern: ^[a-zA-Z0-9]{0,20}$
          type: string
          description: If Amex = true then related TID must be present.
          nullable: true
          example: FreeText
        waiver:
          maxLength: 30
          minLength: 0
          pattern: ^[a-zA-Z0-9]{0,30}$
          type: string
          description: Waiver indicator text or amount.
          nullable: true
          example: waiver02
        socCode:
          maxLength: 15
          minLength: 0
          pattern: ^[a-zA-Z0-9]{0,15}$
          type: string
          description: Schedule of charges code
          nullable: true
          example: '00054214'
        setupFee:
          maxLength: 15
          minLength: 0
          pattern: ^[0-9]{7}$
          type: string
          description: Setup fee
          nullable: true
          example: '3232000'
        gprsRentalAmount:
          maxLength: 7
          minLength: 0
          pattern: ^[0-9]{0,7}$
          type: string
          description: GPRS Rental Amount
          nullable: true
          example: '325'
        gprsRental:
          maxLength: 8
          minLength: 0
          pattern: ^[a-zA-Z0-9]{0,8}$
          type: string
          description: GPRS renal ( Monthly/Annual)
          nullable: true
          example: '2342'
        installed:
          maxLength: 12
          minLength: 0
          pattern: ^([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])$
          type: string
          description: Installed/De-Installed. Format YYYYMMDD
          nullable: true
          example: '20200121'
        applicationId:
          maximum: 1e+26
          type: integer
          description: Application ID, owner of this MerchantDevice
    MerchantRequestDto_CreateApplication:
      required:
        - quantity
        - requestIndex
      type: object
      properties:
        requestIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Indicates the user defined physical device or Information to be sent. Configured per pnstitution. For a list of valid codes use Acquirer Profile API get reference_data end-point with query parameter classification equal to requestIdIndex.
          example: '001'
        quantity:
          minimum: 0
          type: integer
          description: Number of items being requested
          format: int32
        applicationId:
          maximum: 1e+26
          type: integer
          description: Application ID, owner of this MerchantRequest
    OptionalDetailsDto_CreateApplication:
      type: object
      properties:
        registrationNo:
          maxLength: 15
          pattern: ^[A-Z0-9 \-\/\.]{0,15}$
          type: string
          description: Merchant registration number. Note this value will be encrypted prior to be stored as this is considered PII data.
          nullable: true
          example: EA-3256
        vatRegNo:
          maxLength: 15
          pattern: ^[A-Z0-9 \-\/\.]{0,15}$
          type: string
          description: Merchant registered value added tax number (VAT) . Note this value will be encrypted prior to be stored as this is considered PII data.
          nullable: true
          example: GB123456789
        contractReference:
          maxLength: 8
          pattern: ^[0-9]{0,8}$
          type: string
          description: Application contract reference number. This is a free format field for information purpose only.
          nullable: true
          example: '32'
        bankReference:
          maxLength: 8
          pattern: ^[0-9]{0,8}$
          type: string
          description: Merchant bank reference number. This is a free format field, where the value can be defined by the merchant/acquirer, information purposes only, no impact to transaction processing
          nullable: true
          example: '420'
        floorLimitCurrencyCode:
          maxLength: 3
          minLength: 3
          pattern: ^[a-zA-Z]{3}$
          type: string
          description: ' This field contains the merchant floor limit currency for information purposes only, no impact to transaction processing. ISO 4217 currency code indicating the currency type.'
          nullable: true
          example: USD
        dynamicPricing:
          type: boolean
          description: Indicate if the merchant uses dynamic pricing
          nullable: true
          example: false
        paymentAdviceGenerationIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Frequency of payment advice for information only, it does not affect the processing of the payment. Valid values are configured per institution. For a list of valid codes use api/v1/application/optional-details with field name PAYMENTADVICEGENERATIONINDEX
          nullable: true
          example: '420'
        paymentDeliveryMethodCode:
          type: string
          description: Payment advice delivery method. This is for information only, it does not affect the processing of the payment.
          nullable: true
          example: NA
          default: NA
          enum:
            - EMAIL
            - FAX
            - POST
            - COLLECT
            - HAND_DELIVER
            - COURIER
            - ONLINE
            - MY_02_FAX
            - MY_03_COURIE
            - MY_04_HAND_KL
            - MY_05_HAND_PJ
            - MY_06_SPECIAL_DELIVE
            - MY_07_EMAIL
            - MY_01_EMAIL
            - NA
        merchantGradeIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Merchant grouping by business type and volume. For a list of valid codes use api/v1/application/optional-details with field name MERCHANTGRADEINDEX.
          nullable: true
          example: '420'
        priorityMemo:
          maxLength: 100
          pattern: ^[a-zA-Z0-9_\-\.\+ ]{0,100}$
          type: string
          description: Free text for additonal note
          nullable: true
        siteUrl:
          maxLength: 100
          minLength: 0
          type: string
          description: store url addrress - (e.g. https://www.webshop.com)
          nullable: true
        prosaDeterminant:
          pattern: ^[a-zA-Z0-9]{8}$
          type: string
          description: Local number to identify Mexican merchant regulated by Mexican authorities, handled by PROSA.
        prosaBDUNumber:
          pattern: ^[0-9]{8}$
          type: string
          description: Unique identifier of the business by the Internetwork, used by Prosa to process transactions.
        signerDateOfBirth:
          type: string
          description: Indicates Date of Birth of the Seller’s Authorized Signer.
          format: date
    PayableDto_CreateApplication:
      type: object
      properties:
        bankName:
          maxLength: 40
          pattern: ^[a-zA-Z0-9À-ý_ \.\&\,\-]{0,40}$
          type: string
          description: Merchant's bank name, When Billing Level set to true Bank Name must be populated
          nullable: true
          example: Bank of Dublin
        accountName:
          maxLength: 35
          pattern: ^[a-zA-Z0-9À-ý_ \.\&\,\-]{0,35}$
          type: string
          description: Merchant's bank account name. Mandatory if billing level is set to true.
          nullable: true
          example: John Doe Credit Account
        counterBankNumber:
          maxLength: 22
          pattern: ^[A-Z0-9_ \.\&\,\-\/]{0,22}$
          type: string
          description: Clearing number of the merchant's bank i.e. the sort code or BSB number (Australia).
          nullable: true
          example: '13165987'
        accountNumber:
          maxLength: 35
          pattern: ^[A-Z0-9 \-\/\.]{0,35}$
          type: string
          description: Merchant's bank account number. This is considered PII data; the value will be encrypted prior to storing.
          nullable: true
          example: ZZ999999999999999
        iban:
          maxLength: 35
          pattern: ^[A-Z0-9 \-\/\.]{0,35}$
          type: string
          description: International Bank Account Number (IBAN) is a series of alphanumeric characters that uniquely identifies a customer's account held at a bank anywhere in the world. this is considered PII data; the value will be encrypted prior to storing
          nullable: true
          example: ZZ99999999999999999999
        bankTelephone:
          maxLength: 15
          pattern: ^[0-9]{0,15}$
          type: string
          description: The telephone number of the merchant bank.
          nullable: true
          example: '00535125412123'
        bankContactName:
          maxLength: 35
          pattern: ^[a-zA-Z0-9À-ý_ \.\&\,\-]{0,35}$
          type: string
          description: Name of contact at the merchant's bank. Mandatory if billing level is set to true.
          nullable: true
          example: Frank Castle
        customerPaymentText:
          maxLength: 18
          pattern: ^[a-zA-Z0-9]{0,18}$
          type: string
          description: Additional text that may be used to identify a payment item on the merchants statement. Only valid for institutions using IFS funding solution.
          nullable: true
          example: '9999999999'
        bankCity:
          maxLength: 35
          pattern: ^[a-zA-Z0-9_ \.\&\,\-]{0,35}$
          type: string
          description: CREDIT ACCOUNT Bank City optional field
          nullable: true
          example: Dublin
        paymentFormatIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Format to be used to present payments to the clearing entity. Only institutions using the IFS file for funding merchants. For a list of valid codes use Acquirer Profile API get reference_data end-point with query parameter classification equal to paymentFormatIndex.
          nullable: true
          example: '002'
        clearingEntityIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: The financial institution that will receive the payment. Only institutions using the IFS file for funding merchants. For a list of valid codes use Acquirer Profile API get reference_data end-point with query parameter classification equal to clearingEntityIndex.
          nullable: true
          example: '001'
        correspondentBankAccount:
          maxLength: 16
          pattern: ^[A-Z0-9 \-\/\.]{0,16}$
          type: string
          description: Bank account number for the intermediary bank used for fund transfers. Used in cases where merchant uses a small financial institution, for example a local credit union.
          nullable: true
          example: ZZ 9842512858747
        calendarDays:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Number of days to be added to the posting date to calculate the payment/collection funding date
          nullable: true
          example: '002'
        paymentDelayDays:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Number of days to hold payment to the merchant
          example: '001'
        correspondentBankNo:
          maxLength: 11
          pattern: ^[A-Z0-9_ \.\&\,\-\/]{0,11}$
          type: string
          description: For institutions using IFS funding file this field should contain the swift code of the payable bank (mapped to international bank code field on the IFS file).
          nullable: true
          example: ZZZZZZZZZZZ
      description: Details to be used when sending a payment instruction on the funding file
    PaymentInstructionDto_CreateApplication:
      type: object
      properties:
        accountTypeIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: From account array, this is the account type id for a billing level account for which the reserve, rolling reserve and/or factoring need to be set up
          nullable: true
          example: '470'
        accountCurrencyCode:
          maxLength: 3
          minLength: 3
          pattern: ^[a-zA-Z]{3}$
          type: string
          description: From the account array, the is the account currency corresponding to the selected account type id. ISO 4217
          nullable: true
          example: GBP
        instructionTypeIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Indicates the type of payment instruction to be set for the selected account. The values depends on the configured payment instructions for the Institution. For possible values check get:/api/v1/application/acquirer-profile with field name ACQUIRINGPROFILEINDEX.
          nullable: true
          example: '001'
        deductionStartDate:
          maxLength: 8
          minLength: 8
          pattern: ^([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])$
          type: string
          description: Date when the instruction starts. Format YYYYMMDD
          format: date
          nullable: true
        deductionEndDate:
          maxLength: 8
          minLength: 8
          pattern: ^([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])$
          type: string
          description: Date when the instruction ends. Format YYYYMMDD
          format: date
          nullable: true
        deductionPercentage:
          maxLength: 11
          minLength: 0
          pattern: ^[0-9\.\+\-]{0,11}$
          type: string
          description: The payment percent to be deducted from the calculated total amount, to be paid from the account type selected.
          nullable: true
          example: '5.0'
          default: '00.000000'
        deductionMinAmount:
          maxLength: 11
          minLength: 0
          pattern: ^[0-9\.\+\-]{0,11}$
          type: string
          description: The minimum value to be deducted from the payment.
          nullable: true
          example: '250.0'
          default: '00.000000'
        deductionMaxAmount:
          maxLength: 11
          minLength: 0
          pattern: ^[0-9\.\+\-]{0,11}$
          type: string
          description: The maximum value to be deducted from the payment.
          nullable: true
          example: '250.0'
          default: '00.000000'
        deductionBaseAmount:
          maxLength: 11
          minLength: 0
          pattern: ^[0-9\.\+\-]{0,11}$
          type: string
          description: The amount to be deducted from the calculated total amount, to be paid from the account type selected.
          nullable: true
          example: '250.0'
          default: '00.000000'
        deductionTotalCnt:
          maxLength: 11
          minLength: 0
          pattern: ^[0-9\.\+\-]{0,11}$
          type: string
          description: Indicates how many times this instruction should be executed
          nullable: true
          example: '100000'
        deductionTotalAmount:
          maxLength: 18
          minLength: 0
          pattern: ^[0-9\.\+\-]{0,18}$
          type: string
          description: Indicates how many times this instruction should be executed
          nullable: true
          example: '100000'
        factorAgent:
          maxLength: 24
          minLength: 0
          pattern: ^[a-zA-Z0-9À-ý_ \.\&\,]{0,24}$
          type: string
          description: Name of the factor agent
          nullable: true
          example: James Kirk
        note:
          maxLength: 674
          minLength: 0
          pattern: ^[a-zA-Z0-9À-ý_ \.\&\,]{0,674}$
          type: string
          description: Free Text for extra note
        applicationId:
          maximum: 1e+26
          type: integer
          description: Application ID, owner of this PaymentInstruction
      description: Payment instructions allow the acquirer to take away a portion of the calculated payment and post the portion of the amount to a another merchant account, the platform supports different types of instructions for example reserve, rolling reserve and factoring instructions. Payment instructions can only be setup against billing level accounts.
    ReceivableDto_CreateApplication:
      type: object
      properties:
        bankName:
          maxLength: 40
          pattern: ^[a-zA-Z0-9À-ý_ \.\&\,\-]{0,40}$
          type: string
          description: Debit account merchant's bank name. When Billing Level set to true then bank name must be populated
          nullable: true
          example: BNP Paribas
        accountName:
          maxLength: 35
          pattern: ^[a-zA-Z0-9À-ý_ \.\&\,\-]{0,35}$
          type: string
          description: Debit account merchant's bank account name. Mandatory if billing level is set to true.
          nullable: true
          example: John Doe Debit Account
        counterBankNumber:
          maxLength: 22
          pattern: ^[A-Z0-9_ \.\&\,\-\/]{0,22}$
          type: string
          description: Debit account clearing number of the merchant's bank i.e. the sort code or BSB number (Australia). Mandatory if billing level is set to true.
          example: '18254'
        accountNumber:
          maxLength: 35
          pattern: ^[A-Z0-9 \-\/\.]{0,35}$
          type: string
          description: Debit account clearing number of the merchant's bank. Mandatory if billing level is set to true. This is considered PII data; the value will be encrypted prior to storing.
          nullable: true
          example: '68973953036'
        iban:
          maxLength: 35
          pattern: ^[A-Z0-9 \-\/\.]{0,35}$
          type: string
          description: Debit account International Bank Account Number (IBAN) is a series of alphanumeric characters that uniquely identifies a customer's account held at a bank anywhere in the world. It typically contains a two-character ISO country code, two check digits for validation purposes followed by the domestic bank code and account number. This is considered PII data; the value will be encrypted prior to storing.
          nullable: true
          example: FR32 18254 12225 68973953036 89
        bankTelephone:
          maxLength: 15
          pattern: ^[0-9]{0,15}$
          type: string
          description: Debit account bank telephone number.
          nullable: true
        bankContactName:
          maxLength: 35
          pattern: ^[a-zA-Z0-9À-ý_ \.\&\,\-]{0,35}$
          type: string
          description: Debit account contact name for Merchant's Bank.
          nullable: true
          example: Joanne Burke
        customerPaymentText:
          maxLength: 18
          pattern: ^[a-zA-Z0-9]{0,18}$
          type: string
          description: Additional text that may be used to identify a payment item on the merchants statement. Only valid for institutions using IFS funding solution.
          nullable: true
          example: item number 6478
        bankCity:
          maxLength: 35
          pattern: ^[a-zA-Z0-9_ \.\&\,\-]{0,35}$
          type: string
          description: Debit account bank city optional field
          nullable: true
          example: Dublin
        paymentFormatIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Debit account format to be used to present payments to the clearing entity. Only institutions using the IFS file for funding merchants. For a list of valid codes use Acquirer Profile API get reference_data end-point with query parameter classification equal to paymentFormatIndex.
          nullable: true
          example: '002'
        clearingEntityIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Debit account financial institution that will receive the collection. Only institutions using the IFS file for funding merchants. For a list of valid codes use Acquirer Profile API get reference_data end-point with query parameter classification equal to clearingEntityIndex.
          nullable: true
          example: '001'
        correspondentBankAccount:
          maxLength: 16
          pattern: ^[A-Z0-9 \-\/\.]{0,16}$
          type: string
          description: Bank account number for the intermediary bank used for collect funds. Used in cases where merchant uses a small financial institution, for example a local credit union.
          nullable: true
          example: ZZ 9842512858747
        calendarDays:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Number of days to be added to the posting date to calculate the payment/collection funding date
          nullable: true
          example: '001'
        collectionDelayDays:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: dDaysDr = Delay days debit. This field indicates the number of days to hold collection
          nullable: true
          example: '001'
        correspondentBankNo:
          maxLength: 11
          pattern: ^[A-Z0-9_ \.\&\,\-\/]{0,11}$
          type: string
          description: For institutions using IFS funding file this field should contain the swift code of the receiving bank (mapped to international bank code field on the IFS file).
          nullable: true
          example: ZZ99999999
      description: Details to be used when sending a collection instruction on the funding file
    ReferencesDto_CreateApplication:
      required:
        - referenceIndex
      type: object
      properties:
        referenceIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Predefined reference index to tag merchant with additional information. For a list of valid codes use references API - GET:/api/v1/application/reference-fields with field name referenceIndex.
        referenceValue:
          maxLength: 32
          minLength: 0
          type: string
          description: Value to be associated with the client reference. The value to be placed in this field is dependent on the client reference type. Note some values may be validated against a list of predefined values depending on the setup of the client reference, if the client reference values are pre-defined the API - GET:/api/v1/application/reference-fields end point results will indicate the possible values for the client reference.
      description: The merchants references are used to add additional information to a merchant or to flag a merchant to be included in certain reports or files. The applicable references are agreed between the institution and Fiserv. Depending on the institution setup some client references are mandatory at a member level or at billing level.
    RequiredDetailsDto_CreateApplication:
      required:
        - accountOfficerIndex
        - branchIndex
        - companyName
        - languageIndex
        - legalFormIndex
        - mcciso
        - residencyFeeLevelCode
        - residentStatusCode
        - retailerClassificationCode
        - tradeName
      type: object
      properties:
        externalMerchantId:
          maxLength: 20
          pattern: ^[a-zA-Z0-9]{0,20}$
          type: string
          description: Merchant number generated by Fiserv after submitting and approving an application. It´s a read only field. Used on the authorization and clearing cycle.
          nullable: true
          readOnly: true
        tradeName:
          maxLength: 22
          minLength: 1
          type: string
          description: Merchant Trade Name
          example: Burger King
        companyName:
          maxLength: 35
          minLength: 0
          pattern: ^[a-zA-Z]{3}$
          type: string
          description: Merchant's legal company name.
          example: Burger King Corporation
        legalFormIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Company entity type for information purposes only. No impact on transaction processing. For possible values check get:/api/v1/application/acquirer-profile with field name LEGALFORMINDEX
          example: '001'
        languageIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Merchant language for information purposes only. No impact on transaction processing. For possible values check get:/api/v1/application/acquirer-profile with field name LANGUAGEINDEX
          nullable: true
          example: '001'
        mcciso:
          maxLength: 4
          minLength: 4
          pattern: ^[0-9]{4}$
          type: string
          description: Merchant category code (ISO 18245 ), depending on the client region setting this value may be used for clearing transactions to the scheme. For possible values check get:/api/v1/application/mcc.
          example: '5814'
        residentStatusCode:
          type: string
          description: The residency status of the merchant. Indicates whether the merchant is a resident or non-resident for information purposes only, no impact to transaction processing.
          example: NA
          enum:
            - NA
            - RESIDENT
            - NON_RESIDENT
        accountOfficerIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Merchant account officer; the possible values can be customized per institution, use 000=N/A if not relevant for the institution. For possible values check get:/api/v1/application/acquirer-profile with field name ACCOUNTOFFICERINDEX
          example: '001'
        residencyFeeLevelCode:
          type: string
          description: Indicator only applicable to institutions that charge a residency fee.
          example: NA
          enum:
            - NA
            - GROUP_CLIENT
            - SUB_GROUP_CLIENT
            - MEMBER_CLIENT
        retailerClassificationCode:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: An RCC identifies the type of business performed within a merchant outlet. For possible values check get:/api/v1/application/acquirer-profile with field name RETAILERCLASSIFICATION.
          example: '001'
        branchIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Merchant branch; the possible values can be customized per institution, use 000=N/A if not relevant for the institution. For possible values check get:/api/v1/application/acquirer-profile with field name BRANCHINDEX.
          example: '001'
    RetailCardDataLayout122Dto_CreateApplication:
      required:
        - recordToBeUpdated
      type: object
      properties:
        recordToBeUpdated:
          $ref: '#/components/schemas/RetailCardDataLayout122RecordDto_CreateApplication'
    RetailCardDataLayout122RecordCardDto_CreateApplication:
      required:
        - cardType
      type: object
      properties:
        cardType:
          type: string
          enum:
            - M
            - MD
            - MM
            - V
            - VD
            - VV
    RetailCardDataLayout122RecordDto_CreateApplication:
      required:
        - cards
      type: object
      properties:
        cards:
          type: array
          items:
            $ref: '#/components/schemas/RetailCardDataLayout122RecordCardDto_CreateApplication'
    RetailCardDataLayout124RecordCardDto_CreateApplication:
      type: object
      properties:
        cardType:
          type: string
          description: Identifies the types of cards to which the authorization parameters apply.
          enum:
            - M
            - MD
            - MM
            - V
            - VD
            - VV
        cashAdvanceLimit:
          maximum: 999999999
          minimum: 0
          type: integer
          description: The transaction floor limit for a single cash advance transaction performed at this terminal by the card type. If not used inform zero
          format: int32
        electronicFollowup:
          maximum: 9
          minimum: 0
          type: integer
          description: Indicating how BASE24 should handle electronic follow-up transactions.Valid values are:0 = Post the transaction. 1 = not posted of this card type2–9 = Reserved for future use.
          format: int32
        mailOrderLimit:
          maximum: 999999999
          minimum: 0
          type: integer
          description: The transaction floor limit for a single mail or telephone order transaction performed at this terminal by the card type. If not used inform zero
          format: int32
        purchaseFloorLimit:
          maximum: 999999999
          minimum: 0
          type: integer
          description: The transaction floor limit for a single purchase transaction performed at this terminal by the card type. If not used inform zero
          format: int32
        tranLimit:
          maximum: 999999999
          minimum: 0
          type: integer
          description: The maximum amount allowed for a single transaction performed at this terminal. If not used inform zero
          format: int32
        transactionProfile:
          type: string
          description: Indicating the transaction profile. Valid values are as follows:0 = Authorize only 1 = Authorize and capture2 = Authorize and expect electronic follow-up 3 = Terminal determines data capture mode for each transaction
          enum:
            - '0'
            - '1'
            - '2'
            - '3'
    RetailLayoutDto_CreateApplication:
      required:
        - account
        - address
        - country
      type: object
      properties:
        account:
          maxLength: 19
          minLength: 19
          type: string
          description: The account number associated with the retailer at its associated financial institution.
        address:
          maxLength: 25
          minLength: 0
          type: string
          description: The address where the retailer is located.
        country:
          maxLength: 2
          minLength: 2
          type: string
          description: The country in which the retailer is located.
    SalesDetailsDto_CreateApplication:
      required:
        - accApprovalDate
        - accCreationDate
        - accSignedDate
        - businessOwnerId
        - salesAgentId
        - salesChannelIndex
        - salesCurrencyCode
      type: object
      properties:
        accSignedDate:
          minLength: 8
          pattern: "^([0-9]{4})(-?)(1[0-2]|0[1-9])\x02(3[01]|0[1-9]|[12][0-9])$"
          type: string
          description: Date merchant was signed up. Format yyyyMMdd
          format: date
          nullable: true
        accCreationDate:
          minLength: 8
          pattern: "^([0-9]{4})(-?)(1[0-2]|0[1-9])\x02(3[01]|0[1-9]|[12][0-9])$"
          type: string
          description: Date merchant was created in the system. Format yyyyMMdd
          format: date
          nullable: true
        accApprovalDate:
          minLength: 8
          pattern: "^([0-9]{4})(-?)(1[0-2]|0[1-9])\x02(3[01]|0[1-9]|[12][0-9])$"
          type: string
          description: Date merchant application was approved. Format yyyyMMdd
          format: date
          nullable: true
        salesAgentId:
          maxLength: 8
          minLength: 8
          pattern: ^[0-9]{8}$
          type: string
          description: Code of sales agent associated with the sales process. For a list of valid codes use Acquirer Profile API /api/v1/application/acquirer-profile with field name equal to SALESAGENTID.
          example: '99999999'
        businessOwnerId:
          maxLength: 8
          minLength: 8
          pattern: ^[0-9]{8}$
          type: string
          description: Code of the business owner associated with the sales process. For a list of valid codes use Acquirer Profile API /api/v1/application/acquirer-profile with field name equal to businessOwnerId.
          example: '99999999'
        salesChannelIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Institution specific user defined list of potential sales channels. For a list of valid codes use Acquirer Profile API /api/v1/application/acquirer-profile with field name equal to SALESCHANNELINDEX.
          example: '023'
        salesCurrencyCode:
          maxLength: 3
          minLength: 3
          pattern: ^[a-zA-Z]{3}$
          type: string
          description: ISO 4217 Apha Currency code of amount fields displayed
          example: EUR
        signedSalesValue:
          maxLength: 18
          pattern: ^[0-9_\-\.\+]{0,18}$
          type: string
          description: Contracted sales value for the merchant. Whether this value is per week, per month, per year, etc. is defined at institution level. Format NNN.NN
          nullable: true
          example: '10.0'
        signedAverageTicketValue:
          maxLength: 18
          pattern: ^[0-9_\-\.\+]{0,18}$
          type: string
          description: Contracted average ticket value for the merchant. Whether this value is per week, per month, per year, etc. is defined at institution level.
          nullable: true
          example: '10.0'
        salesLead:
          maxLength: 15
          pattern: ^[a-zA-Z0-9_\-\.\+ ]{0,15}$
          type: string
          description: Name or description of the sales lead
          nullable: true
          example: Free text
        signedNumberSales:
          maxLength: 18
          pattern: ^[0-9_\-\.\+]{0,18}$
          type: string
          description: Contracted number of sales for the merchant. Whether this value is per week, per month, per year, etc. is defined at institution level
          nullable: true
    SchemeDetailsDto_CreateApplication:
      type: object
      properties:
        crossBorderFeeCode:
          type: string
          description: Indicates whether a merchant is liable for cross border fees for MasterCard, Visa both.
          nullable: true
          example: NONE
          default: NONE
          enum:
            - NONE
            - MASTERCARD
            - VISA
            - BOTH
        masterCardIPQualificationCode:
          type: string
          description: The MasterCard interchange program qualification lists the interchange programs for MasterCard.
          nullable: true
          example: NA
          default: NA
          enum:
            - NA
            - CHARITY
            - MASTERCARD_AID
            - MASTERCARD_QPS
        masterCardIPValue:
          maxLength: 10
          pattern: ^[0-9]{0,10}$
          type: string
          description: The MasterCard interchange program value field assigned by MasterCard for the corresponding interchange program.
          nullable: true
          example: '55'
        visaIPQualificationCode:
          type: string
          description: The Visa interchange program qualification lists the possible interchange program for Visa.
          nullable: true
          example: NA
          default: NA
          enum:
            - NA
            - CHARITY
            - SG_EZ_LINKS
            - TRANCHE_2
            - TRANCHE_3
            - VAU_VALIDATED
            - VISA_EPS
            - VISA_MVP
        visaIPValue:
          maxLength: 10
          pattern: ^[0-9]{0,10}$
          type: string
          description: This Visa interchange program value field is assigned by Visa for the corresponding interchange program.
          nullable: true
          example: '401938547'
        paymentLowValue:
          type: boolean
          description: Flag to determine if the merchant is eligible to qualify for UK domestic low value E-Commerce.
          example: false
        cbdipVisaSmiCode:
          maxLength: 9
          pattern: ^[a-zA-Z0-9]{0,9}$
          type: string
          description: Single merchant identifier (SMI) provided by Visa when merchant is registered with cross border interchange program CBDIP
          nullable: true
          example: aTT345200
        mcPaymentFacilitatorId:
          maxLength: 9
          pattern: ^[0-9]{0,11}$
          type: string
          description: MasterCard registered payment facilitator id for merchants processing PF transactions
          nullable: true
          example: '12345'
        mcIndependentSalesOrgId:
          maxLength: 9
          pattern: ^[0-9]{0,11}$
          type: string
          description: MasterCard registered ISO for merchants processing ISO transactions
          nullable: true
          example: '1234'
        visaCanIasfFee:
          type: boolean
          description: Indicator if Visa international acquirer service Fee (IASF) cross border fee applies on all transactions assessed in Canada for non canadian issued cards.
          nullable: true
          example: false
          default: false
        viLacFeeCode:
          type: string
          description: Indicator for which VISA cross border fees (ISA, IA or both) in the Latin America and Caribbean (LAC) to be applied.
          nullable: true
          example: NA
          default: NA
          enum:
            - NA
            - VISA_LAC_IA_FEE
            - VISA_LAC_ISA_FEE
            - BOTH_LAC_FEES
        mcLacFeeCode:
          type: string
          description: Indicator for which MC cross border fees (CB , CB Rebate or both) in the Latin America and Caribbean (LAC) to be applied.
          nullable: true
          example: MC_LAC_BOTH
          default: NA
          enum:
            - NA
            - MC_LAC_CB
            - MC_LAC_CB_REBATE
            - MC_LAC_BOTH
        mcAbvFeeInd:
          type: boolean
          description: Indicator if MasterCard acquirer brand volume fee is applicable for the merchant
          nullable: true
          example: false
          default: false
        visaEuFeeIndCode:
          type: string
          description: Indicator for which EU fee to be charged; E.g Visa IA Fee or Visa E-Comm Fee, available options depends on the institution configuration. For a list of valid codes check the institution index file.
          nullable: true
          example: BOTH_VISA_EU_FEES
          default: NEITHER
          enum:
            - NEITHER
            - VISA_IA_FEE
            - VISA_ECOM_FEE
            - BOTH_VISA_EU_FEES
        mcIntlEcomFee:
          type: boolean
          description: Indicates the enabling of the MasterCard International Ecommerce Fee, available options depends on the institution configuration. For a list of valid codes check the institution index file.
          nullable: true
          example: false
          default: false
        viUsApIafFee:
          maxLength: 3
          pattern: ^[0-9]{0,3}$
          type: string
          description: Indicator for which VISA fees (AP IAF, US IAF, both or neither) to be enabled, available options depends on the institution configuration. For a list of valid codes use Acquirer Profile API get reference_data end-point with query parameter classification equal viUsApIafFee.
          nullable: true
          example: '3'
        visaPaymentFacilitatorId:
          maxLength: 8
          pattern: ^[a-zA-Z0-9]{0,8}$
          type: string
          description: Visa registered payment facilitator id for merchants processing PF transactions.
          nullable: true
          example: AbC12345
        pagobancomatIndex:
          maxLength: 3
          pattern: ^[0-9]{0,3}$
          type: string
          description: Indicates when Pagobancomat transactions are flagged as bill payment. Available options depends on the institution configuration. For a list of valid codes use Acquirer Profile API get reference_data end-point with query parameter classification equal epagobancomatIndex.
          nullable: true
          example: '2'
    ServiceDto_CreateApplication:
      required:
        - assigned
        - serviceIndex
        - tariffIndex
      type: object
      properties:
        serviceIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: Code id for the acquiring service. Valid values depends on the institution configuration. For possible values check get:/api/v1/application/services with field name serviceId.serviceIndex
          nullable: true
          example: '101'
        assigned:
          type: boolean
          description: Flag to indicate if the service is valid for the merchant.
          nullable: true
          example: true
        tariffIndex:
          maxLength: 6
          minLength: 6
          pattern: ^[0-9]{6}$
          type: string
          description: Code ID for the tariff which drives the default transactions fees to be generated for the merchant per service. For possible values check get:/api/v1/application/services with field name serviceMerchantTariffs.tariffIndex
          nullable: true
          example: '000573'
        floorLimit:
          maxLength: 18
          minLength: 0
          pattern: ^[0-9]{0,18}$
          type: string
          description: Floor limit for merchant service selected; for information purpose only
          nullable: true
          example: '00000000000000000000'
        dinersCode:
          type: string
          description: Processing model to be applied for the merchant for Diners and Discover. Required if the service id corresponds to a Diners/Discover service.
          nullable: true
          example: CONVEYANCE_CLEARING
          default: NA
          enum:
            - CONVEYANCE_CLEARING
            - DINERS_AND_DISCOVER
            - NA
        jcbStateCodeIndex:
          maxLength: 3
          minLength: 3
          pattern: ^[A-Z]{3}$
          type: string
          description: State code required to process and clear JCB transaction. Only required for JCB services. Value depends on the institution configuration. For a list of valid codes use Acquirer Profile API get reference_data end-point with query parameter classification equal to jcbStateCodeIndex.
          nullable: true
          example: TXT
        jcbAreaCode1Index:
          maxLength: 2
          minLength: 2
          pattern: ^[0-9]{2}$
          type: string
          description: Area code 1 required to process and clear JCB transaction. Only required for JCB services. State and selected area codes should be as per institution specific list of values. For a list of valid codes use Acquirer Profile API get reference_data end-point with query parameter classification equal to jcbAreaCode1Index.
          nullable: true
        jcbArea2Index:
          maxLength: 2
          minLength: 2
          pattern: ^[0-9]{2}$
          type: string
          description: Area code 2 required to process and clear JCB transaction. Only required for JCB services. State and selected area codes should be as per institution specific list of values. For a list of valid codes use Acquirer Profile API get reference_data end-point with query parameter classification equal to jcbArea2Index.
          nullable: true
        merchantSubId:
          pattern: ^[0-9]{6}$
          type: string
          description: Merchant sub id required to process and clear Ideal transaction. Required for Ideal service. Must not exist on an already boarded merchant under same institution.
          example: '000001'
        applicationId:
          maximum: 1e+26
          type: integer
          description: Application ID, owner of this Service
    ServiceRepresentativeDataDto_CreateApplication:
      required:
        - country
      type: object
      properties:
        country:
          type: string
          description: The country in which the terminal is located.
    TerminalCapabilitiesDto_CreateApplication:
      required:
        - cardholderTerminal
        - terminalAttendance
        - terminalCapabilities
        - terminalLocation
      type: object
      properties:
        contactCapabilities:
          type: string
          description: A code indicating the contact capabilities for transferring the data on the card into the terminal. This field is followed by a text description of the value entered. If this field is not used, it can be left blank.Possible values are:·0 = Unknown or unspecified 1 = None (contactless-only or no terminal used, e.g. voice or ARU authorization) 2 = Magnetic stripe reader 3 = Reserved for future use 4 = Reserved for future use 5 = Magnetic stripe reader and EMV compatible ICC reader 6 = Key entry only 7 = Magnetic stripe reader and key entry 8 = Magnetic stripe reader, key entry, and EMV compatible ICC reader 9 = EMV compatible ICC reader
          enum:
            - '0'
            - '1'
            - '2'
            - '3'
            - '4'
            - '5'
            - '6'
            - '7'
            - '8'
            - '9'
        contactlessCapabilities:
          type: string
          description: 'A code indicating the contactless capabilities for transferring the data on the card into the terminal. Possible values are: 0 = Unknown or unspecified 1 = None (contact-only or no terminal used, e.g. voice or ARU authorization) 2 = Contactless magnetic stripe reader 3 = Contactless EMV 4 = Contactless magnetic stripe and contactless EMV'
          enum:
            - '0'
            - '1'
            - '2'
            - '3'
            - '4'
        cardholderTerminal:
          type: string
          description: 'Indicating whether the cardholder activated the terminal with the use of a card, as well as the security level for the cardholder activated terminal.  Possible values: 0 = Not a cardholder activated terminal transaction 1 = Automated dispensing machine with PIN—level 1 security 2 = Self-service terminal—level 2 security (Contactless/proximity terminals should be set to “2”) 3 = Limited amount terminal—level 3 security 4 = In-flight commerce—level 4 security 5 = Script device 6 = Electronic commerce 7 = Radio frequency device 9 = MPOS'
          enum:
            - '0'
            - '1'
            - '2'
            - '3'
            - '4'
            - '5'
            - '6'
            - '7'
            - '9'
        softwareControl:
          maxLength: 1
          minLength: 1
          type: string
        terminalAttendance:
          type: string
          description: 'Indicating whether the terminal is attended by the card acceptor. Possible values: 0 = Attended terminal 1 = Unattended terminal (cardholder-activated terminal, home PC) 2 = No terminal used (voice or ARU authorization) 9 = MPOS'
          enum:
            - '0'
            - '1'
            - '2'
            - '9'
        terminalCapabilities:
          type: string
          description: 'A code indicating whether the terminal can display messages, print messages, or both.Possible values are: ‘ ‘ = Not used 0 = Unknown 1 = None 2 = Printing 3 = Display 4 = Printing and display'
          enum:
            - ''
            - '0'
            - '1'
            - '2'
            - '3'
            - '4'
        terminalControl:
          maxLength: 1
          minLength: 1
          type: string
        terminalLocation:
          type: string
          description: 'Indicating the location of the terminal. Possible values: 0 = On premises of card acceptor facility 1 = Off premises of card acceptor facility (merchant terminal—remote location) 2 = On premises of cardholder (home PC) 3 = No terminal used (voice or ARU authorization)'
          enum:
            - '0'
            - '1'
            - '2'
            - '3'
        terminalVersion:
          maxLength: 16
          minLength: 0
          type: string
          description: Indicating the version of the terminal. If this field is not used, it can be left blank.
    TerminalCardDataLayoutDto_CreateApplication:
      type: object
      properties:
        record:
          $ref: '#/components/schemas/TerminalCardDataLayoutRecordDto_CreateApplication'
    TerminalCardDataLayoutRecordCardDto_CreateApplication:
      type: object
      properties:
        cardType:
          type: string
          description: Identifies the types of cards to which the authorization parameters apply.
          enum:
            - M
            - MD
            - MM
            - V
            - VD
            - VV
        cashAdvanceLimit:
          maximum: 999999999
          minimum: 0
          type: integer
          description: The transaction floor limit for a single cash advance transaction performed at this terminal by the card type. If not used inform zero
          format: int32
        electronicFollowup:
          maximum: 9
          minimum: 0
          type: integer
          description: Indicating how BASE24 should handle electronic follow-up transactions.Valid values are:0 = Post the transaction. 1 = not posted of this card type2–9 = Reserved for future use.
          format: int32
        mailOrderLimit:
          maximum: 999999999
          minimum: 0
          type: integer
          description: The transaction floor limit for a single mail or telephone order transaction performed at this terminal by the card type. If not used inform zero
          format: int32
        purchaseFloorLimit:
          maximum: 999999999
          minimum: 0
          type: integer
          description: The transaction floor limit for a single purchase transaction performed at this terminal by the card type. If not used inform zero
          format: int32
        tranLimit:
          maximum: 999999999
          minimum: 0
          type: integer
          description: The maximum amount allowed for a single transaction performed at this terminal. If not used inform zero
          format: int32
        transactionProfile:
          type: string
          description: Indicating the transaction profile. Valid values are as follows:0 = Authorize only 1 = Authorize and capture2 = Authorize and expect electronic follow-up 3 = Terminal determines data capture mode for each transaction
          enum:
            - '0'
            - '1'
            - '2'
            - '3'
    TerminalCardDataLayoutRecordDto_CreateApplication:
      required:
        - cards
      type: object
      properties:
        cardCount:
          maximum: 99
          type: integer
          format: int32
        cards:
          type: array
          items:
            $ref: '#/components/schemas/TerminalCardDataLayoutRecordCardDto_CreateApplication'
    TerminalCardLayoutPTDD2Dto_CreateApplication:
      type: object
      properties:
        fileLayout:
          maxLength: 4
          minLength: 4
          type: string
          description: name of Base24 file. Always use "PTDD"
        recordToBeUpdated:
          $ref: '#/components/schemas/TerminalCardLayoutPTDD2RecordDto_CreateApplication'
    TerminalCardLayoutPTDD2RecordDto_CreateApplication:
      type: object
      properties:
        cardCount:
          maximum: 20
          type: integer
          description: number of ocurrences of cards
          format: int32
        cards:
          type: array
          items:
            $ref: '#/components/schemas/RetailCardDataLayout124RecordCardDto_CreateApplication'
    TerminalFlagDto_CreateApplication:
      required:
        - custBalanceDisplay
        - serialNumber
      type: object
      properties:
        custBalanceDisplay:
          type: string
          description: 'Indicaties how customer balance information is to be displayed at this terminal for balance inquiry transactions. Valid codes are as follows: 0 = Do not print or display 1 = Display on screen only 2 = Print on receipt only 3 = Print on receipt and display on screen'
          enum:
            - DO_NOT_PRINT_OR_DISPLAY
            - DISPLAY_ON_SCREEN_ONLY
            - PRINT_ON_RECEIPT_ONLY
            - PRINT_ON_RECEIPT_AND_DISPLAY_ON_SCREEN
        serialNumber:
          maximum: 9
          minimum: 9
          type: integer
          description: Indicates internal terminal serial number.Information only – not used for validations.
          format: int32
        softwareRelease:
          type: string
          description: A free-format text description of the terminal software.
    TerminalLayoutDto_CreateApplication:
      required:
        - encryptionData
        - serviceRepresentativeData
        - terminalCapabilities
        - terminalFlag
      type: object
      properties:
        encryptionData:
          $ref: '#/components/schemas/EncryptionDataDto_CreateApplication'
        terminalCapabilities:
          $ref: '#/components/schemas/TerminalCapabilitiesDto_CreateApplication'
        terminalFlag:
          $ref: '#/components/schemas/TerminalFlagDto_CreateApplication'
        serviceRepresentativeData:
          $ref: '#/components/schemas/ServiceRepresentativeDataDto_CreateApplication'
    TerminalRequestDto_CreateApplication:
      required:
        - retailCardDataLayout122
        - retailLayout
        - terminalCardDataLayout
        - terminalCardLayoutPTDD2
        - terminalLayout
      type: object
      properties:
        retailCardDataLayout122:
          $ref: '#/components/schemas/RetailCardDataLayout122Dto_CreateApplication'
        retailLayout:
          $ref: '#/components/schemas/RetailLayoutDto_CreateApplication'
        terminalCardDataLayout:
          $ref: '#/components/schemas/TerminalCardDataLayoutDto_CreateApplication'
        terminalCardLayoutPTDD2:
          $ref: '#/components/schemas/TerminalCardLayoutPTDD2Dto_CreateApplication'
        terminalLayout:
          $ref: '#/components/schemas/TerminalLayoutDto_CreateApplication'
    TransactionChargesDto_CreateApplication:
      type: object
      properties:
        recordIdNumber:
          maxLength: 10
          minLength: 10
          pattern: ^[0-9]{10}$
          type: string
          description: 'Record id of the transaction fee to be overwritten. For a list of valid record ids use the api get: /application/transaction-charges with field name data.recordIdNumber.'
          example: '9999999999'
        effectiveDate:
          maxLength: 8
          minLength: 8
          pattern: ^([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])$
          type: string
          description: Detail today's date or a future date as appropriate. Format YYYYMMDD. If ommited it will be defaulted to the institution current posting date.
          format: date
          nullable: true
        expiryDate:
          maxLength: 8
          minLength: 8
          pattern: ^([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])$
          type: string
          description: Expiry date for fee if defined or set to or future date 99991231. Format YYYYMMDD. The date should be in future
          format: date
          nullable: true
        feePercentage:
          maxLength: 11
          pattern: ^[0-9\.]{0,11}$
          type: string
          description: Charge base to be applied.
          nullable: true
          example: '5.0'
          default: '0.0000'
        feeBase:
          maxLength: 11
          pattern: ^[0-9\.]{0,11}$
          type: string
          description: Charge base amount to be applied.
          nullable: true
          example: '250.0'
          default: '0.0000'
        feeMinimum:
          maxLength: 11
          pattern: ^[0-9\.]{0,11}$
          type: string
          description: Minimum charge amount.
          nullable: true
          example: '250.0'
          default: '0.0000'
        feeMaximum:
          maxLength: 11
          pattern: ^[0-9\.]{0,11}$
          type: string
          description: Maximum charge amount.
          nullable: true
          example: '250.0'
          default: '0.0000'
        chargeCurrencyCode:
          maxLength: 3
          minLength: 3
          pattern: ^[A-Z]{0,3}$
          type: string
          description: 'The ISO 4217 currency code for the charge base, minimum and maximun amounts. Values are restricted by institution configuration. For a list of valid record ids use the api get: /application/transaction-charges with field name data.chargeCurrencyCode'
          nullable: true
          example: EUR
        chargeTierLevel:
          maxLength: 20
          pattern: ^[a-zA-Z0-9_ \.\&\,]{0,20}$
          type: string
          description: The tier assigned which will drive the merchant tiered pricing. The tier level that is assigned to the merchant. This will be N/A (Default) if the transaction charge record is not tiered.
          nullable: true
          example: Not Applicable
        applicationId:
          maximum: 1e+26
          type: integer
          description: Application ID, owner of this TransactionCharge
    TmpTerminalDto:
      type: object
      properties:
        idOnbTmp:
          type: integer
        applicationId:
          type: integer
        timeTransaction:
          type: string
        dateTransaction:
          type: string
        terminalId:
          type: string
        cardAcceptorIDCode:
          type: string
        typeTechnology:
          type: string
        status:
          $ref: '#/components/schemas/ApplicationStatusEnum'
        statusDescription:
          type: string
        statusUpdateTime:
          type: string
          format: date-time
        referenceNumberIDResponseIntegration:
          type: string
        cardAcceptorIDCodeResponseIntegration:
          type: string
        cardAcceptorTermIDResponseIntegration:
          type: string
        ticketTypeResponseIntegration:
          type: string
        address:
          $ref: '#/components/schemas/AddressTmpDto'
    ProductsAndFeatures:
      type: object
      properties:
        products:
          type: array
          description: List of terminal Products for requesting new terminals
          items:
            $ref: '#/components/schemas/Product'
        features:
          type: array
          description: List of features and it's fields for configuration
          items:
            $ref: '#/components/schemas/Feature'
    AreaOfEvent:
      type: object
      properties:
        areaOfEventIndex:
          type: string
          description: Numeric Code.
        areaOfEventDescription:
          type: string
          description: Contains description associated to a code in English.
      description: Area Of Event against the charge applied.
    CaptureMethod:
      type: object
      properties:
        captureMethodIndex:
          type: string
          description: Numeric Code.
        captureMethodDescription:
          type: string
          description: Contains description associated to a code in English.
      description: The means by which the transaction was accepted.
    ChargeType:
      type: object
      properties:
        chargeTypeIndex:
          type: string
          description: Numeric Code.
        chargeTypeIndexDescription:
          type: string
          description: Contains description associated to a code in English.
      description: The type of charge being generated e.g. Per Tran fee, Assessment fee, Commission etc.
    FeeCategory:
      type: object
      properties:
        feeCategoryIndex:
          type: string
          description: Numeric Code.
        feeCategoryIndexDescription:
          type: string
          description: Contains description associated to a code in English.
      description: The pricing mechanism to be used e.g. Interchange Plus, Pricing Plus Fees.
    FeeType:
      type: object
      properties:
        feeTypeIndex:
          type: string
          description: Numeric Code.
        feeTypeDescription:
          type: string
          description: Contains description associated to a code in English.
      description: The posted transaction charges fee type, e.g. Assessment Fee
    MerchantTariff:
      type: object
      properties:
        tariffIndex:
          type: string
          description: Numeric Code.
        tariffDescription:
          type: string
          description: Contains description associated to a code in English.
      description: Merchant tariff determines a set of transaction fees to be generated for the merchant per service, the object provides numerical code and description for each tariff.
    MessageDto:
      type: object
      properties:
        id:
          type: string
          description: Generated message identifier for particular request, helping to locate server logs.
          example: dd4ba13c-4a3c-4078-a31f-35ac9c07a8f7
        code:
          type: string
          description: Machine readable, unique code of the message related to particular case within operation execution. For complete list of codes please refer to API portal, messages page.
          example: ACCOUNT_NUMBER_NOT_FOUND
        title:
          type: string
          description: Short description of the error. Not for displaying purposes.
          example: The authorization credentials required for this request are invalid.
        detail:
          type: string
          description: Provides additional low-level details about the error to assist with troubleshooting. Not for displaying purposes.
          example: SQLException found while trying to establish the connection with table TUKCDHN.
        source:
          $ref: '#/components/schemas/SourceTypeDto'
      description: Messages related to request processing or response data - any additional information or warnings to be returned in the case of a successful API call.
    MetaDto:
      type: object
      properties:
        paging:
          $ref: '#/components/schemas/PagingMetaTypeDto'
        sorting:
          $ref: '#/components/schemas/SortingMetaTypeDto'
        messages:
          type: array
          description: Messages related to request processing or response data - any additional information or warnings to be returned in the case of a successful API call.
          items:
            $ref: '#/components/schemas/MessageDto'
    PagingMetaTypeDto:
      type: object
      properties:
        count:
          type: integer
          description: Total number of records present in system which can be retrieved.
          format: int32
          example: 100
        totalPages:
          type: integer
          description: Total number of pages with maximum limit taken into account.
          format: int32
          example: 10
        currentOffset:
          type: integer
          description: Current offset used in request.
          format: int32
          example: 1
        currentNumberOfRetrievesRecords:
          type: integer
          description: Current number of retrieved records.
          format: int32
          example: 10
        maxLimit:
          type: integer
          description: Maximum limit of records that can be retrieved.
          format: int32
          example: 100
        hasMoreRecords:
          type: boolean
          description: Indicates if there are more records available.
          example: true
        pageNumber:
          type: integer
          description: Current page number.
          format: int32
          example: 1
      description: Map containing pagination related information about data.
    ServiceId:
      type: object
      properties:
        serviceIndex:
          type: string
          description: Numeric Code.
        serviceDescription:
          type: string
          description: Contains description associated to a code in English.
      description: The acquiring service against which the charge will apply.
    ServiceTransactionChargeDto:
      type: object
      properties:
        chargeModel:
          type: string
          description: Default - Is part of a set of transaction charges that are not linked to any particular merchant, but linked to a client tariff. Only Deafault model is supported.
          example: DEFAULT
        recordIdNumber:
          type: string
          description: Record id of the transaction fee to be overwritten. For a list of valid record ids use transaction-charges GET endpoint in Merchant Maintenance API.
          example: '9999999999'
        merchantTariff:
          $ref: '#/components/schemas/MerchantTariff'
        chargeType:
          $ref: '#/components/schemas/ChargeType'
        serviceId:
          $ref: '#/components/schemas/ServiceId'
        transactionType:
          $ref: '#/components/schemas/TransactionType'
        captureMethod:
          $ref: '#/components/schemas/CaptureMethod'
        areaOfEvent:
          $ref: '#/components/schemas/AreaOfEvent'
        feeCategory:
          $ref: '#/components/schemas/FeeCategory'
        effectiveDate:
          type: string
          description: Detail today's date or a future date as appropriate. Format YYYYMMDD
          format: date
        expiryDate:
          type: string
          description: Expiry date for fee if defined or set to or future date 99991231. Format YYYYMMDD. The date should be in future
          format: date
        feeMode:
          type: boolean
          description: Indicates if the fee is being generated (true) or suppressed (false). Suppressing a fee in effect is the same as setting the fee's pricing to zero, i.e. no fee will be charged.
        feePercentage:
          type: string
          description: Charge base to be applied.
          example: '5.0'
        feeBase:
          type: string
          description: Charge base amount to be applied.
          example: '250.0'
        feeMinimum:
          type: string
          description: Minimum charge amount.
          example: '250.0'
        feeMaximum:
          type: string
          description: Maximum charge amount.
          example: '250.0'
        chargeCurrencyCode:
          type: string
          description: The ISO 4217 currency code for the charge base, minimum and maximun amounts. Values are restricted by institution configuration. For a list of valid codes refer accountCurrency field values in service-contracts/{serviceContractIndex}/account-settlement endpoint in Acquirer Profile API.
          example: EUR
        chargeTierLevel:
          type: string
          description: The tier assigned which will drive the merchant tiered pricing. The tier level that is assigned to the merchant. This will be N/A (Default) if the transaction charge record is not tiered.
          example: Not Applicable
        feeType:
          $ref: '#/components/schemas/FeeType'
        transactionCurrency:
          type: string
          description: The ISO 4217 currency code for the charge base, minimum and maximun amounts. Values are restricted by institution configuration. For a list of valid codes refer accountCurrency field values in service-contracts/{serviceContractIndex}/account-settlement endpoint in Acquirer Profile API.
          example: EUR
        serviceType:
          $ref: '#/components/schemas/ServiceType'
    ServiceTransactionChargeResponseDto:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/MetaDto'
        data:
          type: array
          items:
            $ref: '#/components/schemas/ServiceTransactionChargeDto'
    ServiceType:
      type: object
      properties:
        cardServiceTypeIndex:
          type: string
          description: Numeric Code.
        cardServiceTypeDescription:
          type: string
          description: Contains description associated to a code in English.
      description: The card service type against which the charge will apply. Generally set to Credit, Debit or All.
    SortingMetaTypeDto:
      type: object
      properties:
        sort:
          type: string
          description: Indicates the elements the current data is sorted with and the direction of sorting.
          example: name,-startDate
      description: Map containing sorting related information about data.
    SourceTypeDto:
      type: object
      properties:
        pointer:
          type: string
          description: Indicates the element in the request document which caused the error.
          example: /dogs/name
        parameter:
          type: string
          description: Indicates which query parameter caused the error.
          example: type
        header:
          type: string
          description: Indicates which header caused the error.
          example: type
      description: Object containing references to the source of the message.
    TransactionType:
      type: object
      properties:
        transactionType:
          type: string
          description: Numeric Code.
        transactionTypeDescription:
          type: string
          description: Contains description associated to a code in English.
      description: The transaction type which would triggred transaction charge to be applied.
    ServiceMerchantTariff:
      type: object
      properties:
        tariffIndex:
          pattern: ^[0-9A-Z]{1,8}$
          type: string
        tariffDescription:
          type: string
    ServiceTariff:
      type: object
      properties:
        serviceId:
          $ref: '#/components/schemas/ServiceId'
        serviceMerchantTariffs:
          $ref: '#/components/schemas/ServiceMerchantTariff'
    FieldConfiguration_Basic:
      type: object
      properties:
        description:
          type: string
          description: Field description (label)
        referenceIndex:
          type: string
          description: Field's Reference Index (Code used to refer to this 'variable' by Opy)
        enabled:
          type: boolean
          description: Should this field be enabled for editing ?
        required:
          type: boolean
          description: Is this field required ?
        type:
          type: string
          description: Field Type.
          enum:
            - TEXT
            - NUMBER
            - BOOLEAN
            - DATE
            - EMAIL
            - LIST
            - MAP
        pattern:
          type: string
          description: Regex Pattern to verify value
        possibleValues:
          type: object
          description: Possible Values for the Field. May be a LIST or a MAP, depending on 'type' value
        defaultValue:
          type: string
          description: Default value. It's type dependes on the value itself
    GenericField:
      type: object
      properties:
        description:
          type: string
        fieldName:
          type: string
        type:
          type: string
        visible:
          type: boolean
        required:
          type: boolean
        enabled:
          type: boolean
        possibleValues:
          type: object
        defaultValue:
          type: object
        pattern:
          type: string
        format:
          type: string
        ngxMask:
          type: string
    OptionslDetailFilled:
      type: object
      properties:
        paymentadvicegenerationindex:
          $ref: '#/components/schemas/GenericField'
        merchantgradeindex:
          $ref: '#/components/schemas/GenericField'
    MccDto:
      required:
        - mccDescription
        - mccIso
      type: object
      properties:
        mccIso:
          pattern: ^[0-9]{4}$
          type: string
          description: MCC Code
          example: '0075'
        mccDescription:
          maxLength: 255
          minLength: 0
          type: string
          description: Related description
      description: MCC Codes and Descriptions
    PageMccDto:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/MccDto'
        number:
          type: integer
          format: int32
        last:
          type: boolean
        sort:
          $ref: '#/components/schemas/Sort'
        first:
          type: boolean
        pageable:
          $ref: '#/components/schemas/PageableObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          $ref: '#/components/schemas/Sort'
        pageSize:
          type: integer
          format: int32
        paged:
          type: boolean
        pageNumber:
          type: integer
          format: int32
        unpaged:
          type: boolean
    Sort:
      type: object
      properties:
        empty:
          type: boolean
        sorted:
          type: boolean
        unsorted:
          type: boolean
    ApplicationHierarchyArmor:
      type: object
      properties:
        hierarchy:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationHierarchyDto'
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
    ApplicationHierarchyDto:
      type: object
      properties:
        internalMerchantId:
          type: string
        groupLevel:
          type: integer
          format: int32
        companyName:
          type: string
    DomainContextMainDecision:
      type: object
      properties:
        omnipayFields:
          type: array
          description: List of Fields Configuration for the extra fields (Opy's Reference's data)
          items:
            $ref: '#/components/schemas/GenericField'
        merchantLevels:
          type: array
          description: List of Fields Configuration for the extra fields (Opy's Reference's data)
          items:
            $ref: '#/components/schemas/MerchantLevel'
        dualCurrency:
          type: array
          description: List of dual currency values for the institution/service contract
          items:
            $ref: '#/components/schemas/DualCurrency'
    DualCurrency:
      type: object
      properties:
        country-code:
          type: string
        country-name:
          type: string
        dual-currency:
          type: boolean
        foreign-currency:
          type: string
        local-currency:
          type: string
      description: List of dual currency values for the institution/service contract
    MerchantLevel:
      type: object
      properties:
        description:
          type: string
        merchant-level:
          type: integer
          format: int32
        opy-related:
          type: string
        can-board:
          type: boolean
      description: List of Fields Configuration for the extra fields (Opy's Reference's data)
    DomainContextPerCountryMainDecision:
      type: object
      properties:
        omnipayFields:
          type: array
          description: List of Omnipay's fields & values
          items:
            $ref: '#/components/schemas/GenericField'
        productsAndFeatures:
          $ref: '#/components/schemas/ProductsAndFeatures'
        IPGServicesAndFeatures:
          type: array
          description: List of IPG Services and his IPG Features
          items:
            $ref: '#/components/schemas/IPGService'
        IPGFields:
          type: array
          description: List of IPG fields
          items:
            $ref: '#/components/schemas/GenericField'
        FdPosFields:
          type: array
          description: List of Fdpos' fields & values
          items:
            $ref: '#/components/schemas/GenericField'
    IPGFeature:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        type:
          type: string
        possibleValues:
          type: object
        pattern:
          type: string
        minimum:
          type: integer
          format: int64
        maximum:
          type: integer
          format: int64
        minLength:
          type: integer
          format: int32
        maxLength:
          type: integer
          format: int32
    IPGService:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        features:
          type: array
          items:
            $ref: '#/components/schemas/IPGFeature'
      description: List of IPG Services and his IPG Features
    ContractFilled:
      type: object
      properties:
        serviceContractIndex:
          type: array
          items:
            type: string
        clientTariffIndex:
          type: array
          items:
            type: string
        paymentMethodIndex:
          type: array
          items:
            type: string
        clientRegionIndex:
          type: array
          items:
            type: string
        tierStructureIndex:
          type: array
          items:
            type: string
        withholdIncomeTariffIndex:
          type: array
          items:
            type: string
        withholdVatTariffIndex:
          type: array
          items:
            type: string
        postingTariffIndex:
          type: array
          items:
            $ref: '#/components/schemas/PostingTariff'
        settlementMethodIndex:
          type: array
          items:
            $ref: '#/components/schemas/SettlementMethod'
    PostingTariff:
      type: object
      properties:
        postingTariffIndex:
          type: string
        postingTariffDescription:
          type: string
    SettlementMethod:
      type: object
      properties:
        settlementMethodIndex:
          type: string
        settlementMethodDescription:
          type: string
    AccountType:
      type: object
      properties:
        accountTypeIndex:
          type: string
        accountTypeDescription:
          type: string
    ClientTariff:
      type: object
      properties:
        clientTariffIndex:
          type: string
        clientTariffDescription:
          type: string
    ContractAccountFee:
      type: object
      properties:
        feeModel:
          type: string
        recordIdNumber:
          type: string
        clientTariff:
          $ref: '#/components/schemas/ClientTariff'
        accountType:
          $ref: '#/components/schemas/AccountType'
        accountCurrencyCode:
          type: string
        effectiveDate:
          type: string
          format: date
        expiryDate:
          type: string
          format: date
        feeMode:
          type: boolean
        triggerSource:
          $ref: '#/components/schemas/TriggerSource'
        rule:
          $ref: '#/components/schemas/Rule'
        triggerHighValue:
          type: string
        triggerLowValue:
          type: string
        triggerVolumeHigh:
          type: string
        triggerVolumeLow:
          type: string
        feePercentage:
          type: string
        feeBaseCurrencyCode:
          type: string
        feeBase:
          type: string
        feeMinimum:
          type: string
        feeMaximum:
          type: string
        feeType:
          $ref: '#/components/schemas/FeeType'
    Rule:
      type: object
      properties:
        ruleIDIndex:
          type: string
        ruleIDDescription:
          type: string
    TriggerSource:
      type: object
      properties:
        triggerSourceIndex:
          type: string
        triggerSourceDescription:
          type: string
