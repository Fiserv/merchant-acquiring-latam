openapi: 3.0.2
info:
  description: "API Consult History and Sales Related of Prepayment fees: Manual and Automatic."
  version: "1.0"
  title: "API Consult History and Sales Related of Prepayment fees: Manual and Automatic."
  termsOfService: urn:tos
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
servers:
  - url: https://cat.api.firstdata.com
x-production-url: prod.api.firstdata.com
x-config:
  tryItOut: true
paths:
  "/bwa/taxa-antecipacao/v1/consulta":
    get:
      tags:
        - Payment & Prepayment Information/Prepayment Fees
      x-proxy-name: Prepayment - History Fees Consult - Consult History of Prepayment Fees
      x-group-name: Payment & Prepayment Information
      x-child-product-name: Digital Solutions
      description: Prepayment - History Fees Consult - Consult History of Prepayment Fees
      summary: "Consult History of Prepayment Fees: Manual and Automatic"
      operationId: searchForPrepaymentFees
      parameters:
        - name: Message-Signature
          in: header
          description: HMAC
          required: true
          example: 1tsmkG9Ip3k2rcO5cETButfP3D/RS6U8troFF+mUrno=
          schema:
            type: string
        - name: Api-Key
          in: header
          description: APigee Key
          required: true
          example: X0GW3QGOYFn4r7DHcVC8KuatUnNs6MGB
          schema:
            type: string
        - name: auth
          in: header
          description: Oauth Key
          required: true
          example:
          schema:
            type: string
        - name: Timestamp
          in: header
          description: Date - Epoch Format
          required: true
          example: 1563309156733
          schema:
            type: string
        - name: Client-Request-Id
          in: header
          description: Randomly generated by client
          required: true
          example: 6NYHj9Pgyxc84rmafpwG4fjhLwFfJYFVmxJOcgziD0QN3q6mGC
          schema:
            type: string
        - name: instituicao
          in: header
          description: Merchant Institution Number
          example: "00000003"
          required: true
          schema:
            type: string
        - name: estabelecimento
          in: header
          description: Client Number
          example: "11130203"
          required: true
          schema:
            type: string
        - name: dataInicio
          in: query
          description: Initial Date
          example: "20200922"
          required: true
          schema:
            type: string
        - name: dataFim
          in: query
          description: Final Date
          example: "20200923"
          required: true
          schema:
            type: string
        - name: statusAntecipacao
          in: query
          description: "Anticipation status. Possible values: '001'(INICIALIZADO) | '002'(PENDENTE) | '003'(RECUSADA) | '004'(VENCIDO)  | '005'(CONFIRMADO) - Apenas para Automática | '006'(PAGO) | '007'(AGUARDANDO CONFIRMACAO) | '008'(EFETUADA ENVIADA P PAGTO) | '009'(EFET PARC ENVIADA P PAGTO) | '010'(SOLICITACAO NAO APROVADA). Search example: 001,002"
          example: "006"
          required: false
          schema:
            type: string
        - name: tipoAntecipacao
          in: query
          description: "Anticipation type. Possible values: 'A'(Automática) | 'M'(Manual) | 'T'(Todos)"
          example: "T"
          required: false
          schema:
            type: string
            enum:
              - "A"
              - "M"
              - "T"
        - name: valorRequisicao
          in: query
          description: Request value
          example: "500.10"
          required: false
          schema:
            type: string
        - name: numeroAntecipacao
          in: query
          description: Prepayment number
          example: "500"
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: Search page number (Default 0)
          example: 0
          required: false
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: Number of records to search on the page (Default 20)
          example: 22
          required: false
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: "The sorting field only works with the dataPagamento and dataAntecipacao fields. The default ordering is by dataPagamento,desc. It is possible to determine as ASC (ascending), DESC (descending) or none, example: dataPagamento | dataPagamento, asc | dataPagamento, desc"
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AntecipationResponse'
        '206':
          description: Partial Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialContent'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conflict'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      deprecated: false
  "/bwa/taxa-antecipacao/v1/consulta/resumoVendas/{prepaymentNumber}":
    get:
      tags:
        - Payment & Prepayment Information/Prepayment Fees
      x-proxy-name: Prepayment - History Fees Consult - Consult of Sales Related to Prepayment
      x-group-name: Payment & Prepayment Information
      x-child-product-name: Digital Solutions
      description: Prepayment - History Fees Consult - Consult of Sales Related to Prepayment
      summary: "Consult of Sales Related to Prepayment"
      operationId: searchForPrepaymentSales
      parameters:
        - name: Message-Signature
          in: header
          description: HMAC
          required: true
          example: 1tsmkG9Ip3k2rcO5cETButfP3D/RS6U8troFF+mUrno=
          schema:
            type: string
        - name: Api-Key
          in: header
          description: APigee Key
          required: true
          example: X0GW3QGOYFn4r7DHcVC8KuatUnNs6MGB
          schema:
            type: string
        - name: auth
          in: header
          description: Oauth Key
          required: true
          example:
          schema:
            type: string
        - name: Timestamp
          in: header
          description: Date - Epoch Format
          required: true
          example: 1563309156733
          schema:
            type: string
        - name: Client-Request-Id
          in: header
          description: Randomly generated by client
          required: true
          example: 6NYHj9Pgyxc84rmafpwG4fjhLwFfJYFVmxJOcgziD0QN3q6mGC
          schema:
            type: string
        - name: instituicao
          in: header
          description: Merchant Institution Number
          example: "00000003"
          required: true
          schema:
            type: string
        - name: prepaymentNumber
          in: path
          description: Prepayment number
          example: "00000127722"
          required: true
          schema:
            type: string
        - name: statusInclusao
          in: query
          description: "The inclusion status for the composition of the anticipation value. Possible values: '000' (High and Low Amount) | '001' (Only High Amount) | '002' (Only High Amount)"
          required: false
          example: "000,001"
          schema:
            type: string
        - name: page
          in: query
          description: Search page number (Default 0)
          example: 0
          required: false
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: Number of records to search on the page (Default 20)
          example: 22
          required: false
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: "Ordering field only works with dataPagamento field. It is possible to determine as ASC (ascending), DESC (descending) or none, example: dataPagamento | dataPagamento,asc | dataPagamento,desc"
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResumoVendasResponse'
        '206':
          description: Partial Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialContent'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conflict'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      deprecated: false

components:
  schemas:
    AntecipationResponse:
      type: object
      properties:
        codigoRetorno:
          description: Return code
          example: 0
          type: integer
          format: int32
          enum:
            - 0
        mensagem:
          description: Description return code
          example: Sucesso (meaning Success)
          type: string
          enum:
            - 0 - Sucesso (meaning Success)
        conteudo:
          $ref: '#/components/schemas/StcStatisticDetailAntecipationResponseDTO'
    ResumoVendasResponse:
      type: object
      properties:
        codigoRetorno:
          description: Return code
          example: 0
          type: integer
          format: int32
          enum:
            - 0
        mensagem:
          description: Description return code
          example: Sucesso (meaning Success)
          type: string
          enum:
            - 0 - Sucesso (meaning Success)
        conteudo:
          $ref: '#/components/schemas/StcStatisticResumoVendasResponseDTO'
    StcStatisticDetailAntecipationResponseDTO:
      type: object
      properties:
        bandeiras:
          type: string
          description: "Association / Schema service"
          example: "Visa,MasterCard"
          enum:
            - "Visa"
            - "MasterCard"
            - "Cabal"
            - "Hipercard"
            - "Elo"
            - "Diners"
            - "Amex"
        codStatusAntecipacao:
          description: Status code
          example: "006"
          type: string
          enum:
            - "001"
            - "002"
            - "003"
            - "004"
            - "006"
            - "007"
            - "009"
            - "010"
        dataAntecipacao:
          description: "Prepayment Date - format YYYYMMDD"
          example: "20200625"
          type: string
        dataInicio:
          type: string
          description: Initial search date
          example: "20200925"
        dataFim:
          type: string
          description: Final search date
          example: "20220925"
        dataPagamento:
          description: "Prepayment Pay Date - format YYYYMMDD"
          example: "20200625"
          type: string
        dataSimulacao:
          type: string
          description: "Simulation date"
          example: "20220925"
        horaAntecipacao:
          description: "Prepayment Time"
          example: "145619"
          type: string
        idUsuario:
          description: "User id"
          example: "100098"
          type: string
        instituicao:
          type: string
          description: Merchant Institution Number
          example: "00000009"
        nivelUsuario:
          description: "User level"
          example: "Usuário de pré-pagamento"
          type: string
        numeroAntecipacao:
          description: "Prepayment Number Information"
          example: "00000097769"
          type: string
        nomeUsuario:
          description: "User name"
          example: "Renan Sperendio"
          type: string
        numeroEC:
          type: string
          description: "Client number"
          example: "11130203"
        saldoDisponivel:
          description: "Balance available"
          example: "6762"
          type: string
        statusAntecipacao:
          description: "Prepayment Status"
          example: "Confirmado (meaning Confirmed)"
          type: string
          enum:
            - Inicializado (meaning Initialized)
            - Pendente (meaning Pending)
            - Recusada (meaning Declined)
            - Vencido (meaning Expired)
            - Solicitacao em andamento(meaning Waiting for approval)
            - Efetuada enviada p pagto(meaning Done. Payment to be sent)
            - Efet parc enviada p pagto(meaning Partialy Done. To be paid)
            - Nao efetuada(meaning Request not Approved)
            - Pago (meaning Paid)
        taxaLiberada:
          description: "Date the transaction would be paid - format YYYYMMDD"
          example: "1"
          type: string
        taxaMedia:
          type: string
          description: "Average amount"
          example: "42.65"
        taxaReserva:
          type: string
          description: "Reservation fee"
          example: "0.0000"
        taxaNaoLiberada:
          description: "Not autorized Request Amount"
          example: "1"
          type: string
        tipoConta:
          description: "Accont type"
          example: "050,051"
          type: string
        tipoAntecipacao:
          description: "Prepayment Type"
          example: "Manual (meaning Confirmed)"
          type: string
          enum:
            - Manual (meaning Manual)
            - Automatico (meaning Automatic)
        tipoTransacao:
          description: "Transaction type"
          example: "Parcelado sem juros"
          type: string
        valorAntecipacao:
          type: string
          description: "Amoutn Prepayment"
          example: "3.27"
        valorBrutoMax:
          type: string
          description: "Maximum amount"
          example: "46.74"
        valorBrutoMin:
          type: string
          description: "Minimum amount"
          example: "46.74"
        valorLiquidoMax:
          type: string
          description: "Minimun amount liquid"
          example: "46.74"
        valorMaximo:
          type: string
          description: "Maximum amount"
          example: "46.74"
        valorLiquidoMin:
          type: string
          description: "Minimun amount liquid"
          example: "46.74"
        valorRequisicao:
          description: "Request Amount"
          example: "400.00"
          type: string
        valorMinimo:
          type: string
          description: "Munimum amount"
          example: "0"
        valorTaxaAntecipacaoMin:
          type: string
          description: "Amoutn tax Prepayment"
          example: "260.4"
        valorTaxaAntecipacaoMax:
          type: string
          description: "Amoutn tax Prepayment"
          example: "260.4"
        valorConfirmadoOriginal:
          type: string
          description: "Original Amoutn Confirmed"
          example: "309.3"
        valorRejeicaoCer":
          type: string
          description: "Rejection CERC Amoutn"
          example: "309.3"
    PartialContent:
      type: object
      properties:
        codigoRetorno:
          description: Return Code
          example: 9
          type: integer
          format: int32
          enum:
            - 9
            - 10
            - 101
            - 103
            - 104
        mensagem:
          description: Description return code
          example: Campos mandatorios (meaning Missing Mandatory Fields)
          type: string
          enum:
            - 9 - Campos mandatorios...
            - 10 - (Erro validaçao)...
            - 101 - O status antecipacao informado nao e valido
            - 102 - Não existem dados para esta pesquisa ou numero de antecipação inexistente para esta instituição
            - 103 - O status inclusao informado nao e valido
    Unauthorized:
      type: object
      properties:
        codigoRetorno:
          description: Return Code
          example: 4
        mensagem:
          description: Description return code
          example: Acesso nao autorizado ao conteudo pesquisado (meaning Access Denied for he parameters provided)
          type: string
    Forbidden:
      type: object
      properties:
        codigoRetorno:
          description: Return Code
          example: 3
          type: integer
          format: int32
          enum:
            - 3
            - 6
        mensagem:
          description: Description return code
          example: Acesso negado (meaning Access Denied)
          type: string
          enum:
            - 3 - Acesso negado (meaning Access Denied)
            - 6 - Token expirado (meaning Expired Token)
    NotFound:
      type: object
      properties:
        codigoRetorno:
          description: Return Code
          example: 5
          type: integer
          format: int32
          enum:
            - 5
            - 11
        mensagem:
          description: Description return code
          example: Item nao encontrado (meaning Item not found)
          type: string
          enum:
            - 5 - Item nao encontrado (meaning Item not found)
            - 11 - Registros nao encontrados (meaning No records found)
    Conflict:
      type: object
      properties:
        codigoRetorno:
          description: Return Code
          example: 8
        mensagem:
          description: Description return code
          example: Item duplicado (meaning Duplicated Item)
          type: string
    InternalServerError:
      type: object
      properties:
        codigoRetorno:
          description: Return Code
          example: 2
          type: integer
          format: int32
          enum:
            - 2
            - 7
        mensagem:
          description: Description return code
          example: Erro Interno (meaning Internal Error)
          type: string
          enum:
            - 2 - Erro Interno (meaning Internal Error)
            - 7 - Erro na integracao da API. Detalhe (meaning Integration Error)
    StcStatisticResumoVendasResponseDTO:
      type: object
      properties:
        qtdParcelas:
          type: string
          description: "Installment Amount"
          example: "8"
        estabelecimento:
          type: string
          description: Merchant institution number
          example: "24041964"
        dtTrans:
          type: string
          description: "Transaction Date - format YYYYMMDD"
          example: "20220925"
        hrTrans:
          description: "Transaction Time - format HH:mm:ss"
          example: "19:50:59"
          type: string
        descTipoTrans:
          description: "Transaction Type Description"
          example: "Compra com 08 parcelas"
          type: string
        numTerminal:
          description: "Terminal Number"
          example: "EII0051B"
          type: string
        indCredDeb:
          description: "Credit or Debit Identification"
          example: "C"
          type: string
          enum:
            - C - Credito (meaning Credit)
            - D - Debito (meaning Debit)
        numParcelado:
          description: "Transaction Installment Number"
          example: "02509362311"
          type: string
        dtPrevistaPagto:
          type: string
          description: "Expected Payment Date - format YYYYMMDD"
          example: "20220925"
        comprovante:
          description: "Receipt"
          example: "000013416"
          type: string
        transCodProdutoTransacao:
          description: "Transaction Product Code"
          example: "Adq - VISA Crédito"
          type: string
        descBandeira:
          description: "Transaction Association/Schema Code Description"
          example: "Visa"
          type: string
        numParcela:
          description: "Installment Number"
          example: "007"
          type: string
        valTotalPlano:
          description: "Sales Total Plan Amount"
          example: "47"
          type: string
        codAutorizacao:
          description: "Authorization Code"
          example: "411568"
          type: string
        numCartao:
          description: "Card Number"
          example: "532473******0091"
          type: string
        descTipoCartao:
          type: string
          description: "Card Type Code Description"
          example: "Doméstico - BR"
        indicadorCancelVenda:
          type: string
          description: "Transaction Cancelling Indicator"
          example: "000"
        numTrans:
          type: string
          description: "Transaction Number"
          example: "02509362317"
        statusInclusao:
          type: string
          description: "The inclusion status for the composition of the anticipation value. Possible values: '000' (High and Low Amount) | '001' (Only High Amount) | '002' (Only High Amount)"
          example: "001"
          enum:
            - "000"
            - "001"
            - "002"
        composicaoValor:
          type: string
          description: "Description status of inclusion for composition of the amount of the anticipation"
          example: "Only High Amount"
          enum:
            - "000 (High and Low Amount)"
            - "001 (Only High Amount)"
            - "002 (Only High Amount)"
