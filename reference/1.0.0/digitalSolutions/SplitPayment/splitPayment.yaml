openapi: 3.0.1
info:
  title: API do Sistema - Split Payment
  description: Documentação da API do Sistema - Split Payment
  version: 2.0.0
servers:
  - url: http://localhost:8080/split
    description: Generated server url
paths:
  /v1/transactions:
    post:
      x-proxy-name: Transactions
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: List all transactions.
      operationId: listTransactions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionsFilterRest'
        required: true
      responses:
        '200':
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionPaginadoTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialContent'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /v1/transactions/summary:
    post:
      x-proxy-name: Transactions Summary
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: Transactions Summary.
      operationId: getTransactionsSummary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionsFilterRest'
        required: true
      responses:
        '200':
          description: Successfully Done
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MasterTransactionSummary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialContent'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /v1/splitFlag:
    post:
      x-proxy-name: Split Flag
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      operationId: updateStatus
      description: Split Flag
      parameters:
        - name: log-user-id
          in: header
          description: Log User Id
          required: false
          schema:
            type: string
        - name: log-user-name
          in: header
          description: Log User Name
          required: false
          schema:
            type: string
        - name: log-source-channel
          in: header
          description: Log source channel
          required: false
          schema:
            type: string
        - name: ga-jwt
          in: header
          description: GA JWT
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SplitFlagUpdateRequestModel'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /v1/sellers:
    get:
      x-proxy-name: Sellers
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: Returns the list of sellers associated with a master merchant.
      operationId: getSellersByMastersIds
      parameters:
        - name: page
          in: query
          description: page
          required: true
          schema:
            $ref: '#/components/schemas/PageRequestModel'
        - name: name
          in: query
          description: name
          required: false
          schema:
            type: string
        - name: cpfCnpj
          in: query
          description: CPF/CNPJ
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: Status
          required: false
          schema:
            type: string
        - name: masterIds
          in: query
          description: Master Ids
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: createdAt
          in: query
          description: Data de criação
          required: false
          schema:
            type: string
            format: date
          example: '2021-10-20'
      responses:
        '200':
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerPage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      x-proxy-name: Create Sellers
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: Register a merchant seller for a master merchant.
      operationId: createSeller
      parameters:
        - name: user-id
          in: header
          description: EC code for master merchant.
          required: true
          schema:
            type: string
          example: '91042312'
        - name: log-user-id
          in: header
          description: Activity log user identifier (CPF, ID or e-mail).
          required: false
          schema:
            type: string
          example: '1234'
        - name: log-user-name
          in: header
          description: Activity log user name.
          required: false
          schema:
            type: string
          example: John Doe
        - name: log-source-channel
          in: header
          description: Activity log source channel.
          required: false
          schema:
            type: string
          example: BACKOFFICE
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerRequestModel'
        required: true
      responses:
        '200':
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerRest'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/PartialContent'
                  - $ref: '#/components/schemas/Conflict'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /v1/sellers/sync-bw:
    post:
      x-proxy-name: Update seller's data using BW
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: Update seller's data using BW
      operationId: syncSellerWithBw
      parameters:
        - name: user-id
          in: header
          description: EC code for master merchant.
          required: true
          schema:
            type: string
          example: '91042312'
        - name: log-user-id
          in: header
          description: Activity log user identifier (CPF, ID or e-mail).
          required: false
          schema:
            type: string
          example: '1234'
        - name: log-user-name
          in: header
          description: Activity log user name.
          required: false
          schema:
            type: string
          example: John Doe
        - name: log-source-channel
          in: header
          description: Activity log source channel.
          required: false
          schema:
            type: string
          example: BACKOFFICE
        - name: institution
          in: header
          description: Seller institution.
          required: true
          schema:
            type: string
          example: '00000007'
        - name: seller-ec
          in: header
          description: Seller ec.
          required: true
          schema:
            type: string
          example: '91042323'
      responses:
        '200':
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerRest'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/PartialContent'
                  - $ref: '#/components/schemas/Conflict'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /v1/sellers/change-status:
    post:
      x-proxy-name: Change seller's status
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: Change seller's status.
      operationId: changeStatus
      parameters:
        - name: user-id
          in: header
          description: EC code for master merchant.
          required: true
          schema:
            type: string
          example: '91042312'
        - name: log-user-id
          in: header
          description: Activity log user identifier (CPF, ID or e-mail).
          required: false
          schema:
            type: string
          example: '1234'
        - name: log-user-name
          in: header
          description: Activity log user name.
          required: false
          schema:
            type: string
          example: John Doe
        - name: log-source-channel
          in: header
          description: Activity log source channel.
          required: false
          schema:
            type: string
          example: BACKOFFICE
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerChangeStatusRequestModel'
        required: true
      responses:
        '200':
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerRest'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/PartialContent'
                  - $ref: '#/components/schemas/Conflict'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /v1/rules:
    get:
      x-proxy-name: List Rules
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: List the rules created by the master for its sellers.
      operationId: listRules
      parameters:
        - name: masterIds
          in: query
          description: Master Ids
          required: true
          schema:
            type: array
            items:
              type: string
        - name: status
          in: query
          description: Status
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: Page
          required: true
          schema:
            $ref: '#/components/schemas/PageRequestModel'
      responses:
        '200':
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RulePage'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialContent'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      x-proxy-name: Create Rules
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: >-
        Create a split rule for a specific seller or for all the sellers of a
        master user.
      operationId: createRule
      parameters:
        - name: user-id
          in: header
          description: EC code for master merchant.
          required: true
          schema:
            type: string
          example: '91042312'
        - name: log-user-id
          in: header
          description: Activity log user identifier (CPF, ID or e-mail).
          required: false
          schema:
            type: string
          example: '1234'
        - name: log-user-name
          in: header
          description: Activity log user name.
          required: false
          schema:
            type: string
          example: John Doe
        - name: log-source-channel
          in: header
          description: Activity log source channel.
          required: false
          schema:
            type: string
          example: BACKOFFICE
      requestBody:
        description: Details of the Item to be created
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/SellerFixedAmountRuleRequest'
                - $ref: '#/components/schemas/MasterPercentRuleRequest'
                - $ref: '#/components/schemas/RuleRequestModel'
        required: true
      responses:
        '201':
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleRest'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialContent'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /v1/rules/{ruleId}/update:
    post:
      x-proxy-name: Update rule's data
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: Update rule's data.
      operationId: updateRule
      parameters:
        - name: user-id
          in: header
          description: EC code for master merchant.
          required: true
          schema:
            type: string
          example: '91042312'
        - name: log-user-id
          in: header
          description: Activity log user identifier (CPF, ID or e-mail).
          required: false
          schema:
            type: string
          example: '1234'
        - name: log-user-name
          in: header
          description: Activity log user name.
          required: false
          schema:
            type: string
          example: John Doe
        - name: log-source-channel
          in: header
          description: Activity log source channel.
          required: false
          schema:
            type: string
          example: BACKOFFICE
        - name: ruleId
          in: path
          description: Rule Id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleUpdateRequestModel'
        required: true
      responses:
        '200':
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleRest'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/PartialContent'
                  - $ref: '#/components/schemas/Conflict'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /v1/ruleTypes:
    get:
      x-proxy-name: List the available rule types
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: List the available rule types.
      operationId: list
      responses:
        '200':
          description: Successfully Done
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RuleTypeRest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      x-proxy-name: Create a new type of rule to be used in split manager
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: Create a new type of rule to be used in split manager
      operationId: createRuleType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleTypeRest'
        required: true
      responses:
        '200':
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleTypeRest'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/PartialContent'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /v1/optin:
    get:
      x-proxy-name: List the registered optins
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: List the registered optins.
      operationId: listOptin
      responses:
        '200':
          description: Successfully Done
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OptinRest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/InternalServerError'
    post:
      x-proxy-name: Create optins
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: >-
        Register the optin for a user. It will only be able to use the service
        after the optin is registered.
      operationId: createOptin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OptinRequestModel'
        required: true
      responses:
        '200':
          description: Successfully Done
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/OptinRest'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/PartialContent'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/InternalServerError'
  /v1/multiple-rules:
    post:
      x-proxy-name: Create multiple rules
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: >-
        Create multiples split rules for a specific seller or for all the
        sellers of a master user.
      operationId: createMultipleRules
      parameters:
        - name: user-id
          in: header
          description: EC code for master merchant.
          required: true
          schema:
            type: string
          example: '91042312'
        - name: log-user-id
          in: header
          description: Activity log user identifier (CPF, ID or e-mail).
          required: false
          schema:
            type: string
          example: '1234'
        - name: log-user-name
          in: header
          description: Activity log user name.
          required: false
          schema:
            type: string
          example: John Doe
        - name: log-source-channel
          in: header
          description: Activity log source channel.
          required: false
          schema:
            type: string
          example: BACKOFFICE
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleRulesRequestModel'
        required: true
      responses:
        '201':
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleRest'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialContent'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /v1/multiple-rules/csv:
    get:
      x-proxy-name: Return the template csv file used to create multiple rules
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: Return the template csv file used to create multiple rules.
      operationId: downloadTemplate
      responses:
        '201':
          description: Successfully Done
          content:
            application/csv:
              schema:
                $ref: '#/components/schemas/RuleRest'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialContent'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      x-proxy-name: Create Rules Using Csv
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: >-
        Create multiples split rules for a specific seller or for all the
        sellers of a master user, using a csv file.
      operationId: createRulesUsingCsv
      parameters:
        - name: log-user-id
          in: header
          description: Activity log user identifier (CPF, ID or e-mail).
          required: false
          schema:
            type: string
          example: '1234'
        - name: log-user-name
          in: header
          description: Activity log user name.
          required: false
          schema:
            type: string
          example: John Doe
        - name: log-source-channel
          in: header
          description: Activity log source channel.
          required: false
          schema:
            type: string
          example: BACKOFFICE
      requestBody:
        content:
          application/json:
            schema:
              required:
                - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '201':
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleRest'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialContent'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /v1/masters:
    post:
      x-proxy-name: Create Master
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: Create (register) a master user in the split plataform
      operationId: createMaster
      parameters:
        - name: log-user-id
          in: header
          description: Activity log user identifier (CPF, ID or e-mail).
          required: false
          schema:
            type: string
          example: '1234'
        - name: log-user-name
          in: header
          description: Activity log user name.
          required: false
          schema:
            type: string
          example: John Doe
        - name: log-source-channel
          in: header
          description: Activity log source channel.
          required: false
          schema:
            type: string
          example: BACKOFFICE
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MasterRequestModel'
        required: true
      responses:
        '200':
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MasterRest'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/PartialContent'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/InternalServerError'
  /v1/fees:
    get:
      x-proxy-name: List the fees registered by the master for its sellers
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: List the fees registered by the master for its sellers
      operationId: listFees
      parameters:
        - name: masterIds
          in: query
          description: Master Ids
          required: true
          schema:
            type: array
            items:
              type: string
        - name: status
          in: query
          description: Status
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: Page
          required: true
          schema:
            $ref: '#/components/schemas/PageRequestModel'
      responses:
        '200':
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeePage'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialContent'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      x-proxy-name: Create fees
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: >-
        Create a extra fee to a specific or for all the sellers of a master
        user.
      operationId: createFee
      parameters:
        - name: user-id
          in: header
          description: EC code for master merchant.
          required: true
          schema:
            type: string
          example: '91042312'
        - name: log-user-id
          in: header
          description: Activity log user identifier (CPF, ID or e-mail).
          required: false
          schema:
            type: string
          example: '1234'
        - name: log-user-name
          in: header
          description: Activity log user name.
          required: false
          schema:
            type: string
          example: John Doe
        - name: log-source-channel
          in: header
          description: Activity log source channel.
          required: false
          schema:
            type: string
          example: BACKOFFICE
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeeRequestModel'
        required: true
      responses:
        '201':
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeRest'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialContent'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /v1/fees/{feeId}/update:
    post:
      x-proxy-name: Update a fee
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: Update a fee.
      operationId: updateFee
      parameters:
        - name: user-id
          in: header
          description: EC code for master merchant.
          required: true
          schema:
            type: string
          example: '91042312'
        - name: log-user-id
          in: header
          description: Activity log user identifier (CPF, ID or e-mail).
          required: false
          schema:
            type: string
          example: '1234'
        - name: log-user-name
          in: header
          description: Activity log user name.
          required: false
          schema:
            type: string
          example: John Doe
        - name: log-source-channel
          in: header
          description: Activity log source channel.
          required: false
          schema:
            type: string
          example: BACKOFFICE
        - name: feeId
          in: path
          description: Fee ID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeeRequestUpdateModel'
        required: true
      responses:
        '200':
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeRest'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/PartialContent'
                  - $ref: '#/components/schemas/Conflict'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /v1/adjustment:
    get:
      x-proxy-name: List the adjustments registered by the master for its sellers
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: List the adjustments registered by the master for its sellers
      operationId: listAdjustments
      parameters:
        - name: masterIds
          in: query
          description: Master Ids
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: operation
          in: query
          description: Operation of adjustment
          required: false
          schema:
            type: string
          example: CREDIT
        - name: reason
          in: query
          description: Description of adjustment reason
          required: false
          schema:
            type: string
          example: Reason example
        - name: sellerName
          in: query
          description: Seller name
          required: false
          schema:
            type: string
          example: John Doe
        - name: startDate
          in: query
          description: The start date you want to retrieve adjustments.
          required: false
          schema:
            type: string
            format: date
          example: '2021-09-01'
        - name: endDate
          in: query
          description: The end date you want to retrieve adjustments.
          required: false
          schema:
            type: string
            format: date
          example: '2021-09-20'
        - name: page
          in: query
          description: Page
          required: true
          schema:
            $ref: '#/components/schemas/PageRequestModel'
      responses:
        '200':
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdjustmentPage'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialContent'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      x-proxy-name: Create Adjustment
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: >-
        Create a credit or debit transfer adjustments for a given seller of a
        master user.
      operationId: createAdjustment
      parameters:
        - name: user-id
          in: header
          description: EC code for master merchant.
          required: true
          schema:
            type: string
          example: '91042312'
        - name: log-user-id
          in: header
          description: Activity log user identifier (CPF, ID or e-mail).
          required: false
          schema:
            type: string
          example: '1234'
        - name: log-user-name
          in: header
          description: Activity log user name.
          required: false
          schema:
            type: string
          example: John Doe
        - name: log-source-channel
          in: header
          description: Activity log source channel.
          required: false
          schema:
            type: string
          example: BACKOFFICE
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdjustmentRequestModel'
        required: true
      responses:
        '201':
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdjustmentRest'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialContent'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /v1/adjustment/summary:
    post:
      x-proxy-name: Adjusments Summary
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: Adjusments Summary.
      operationId: getSummary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdjustmentsFilterRest'
        required: true
      responses:
        '200':
          description: Successfully Done
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdjustmentsSummary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialContent'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /v1/adjustment-reason:
    get:
      x-proxy-name: List Adjustment Reasons
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: List the adjustment reasons.
      operationId: listAdjustmentReasons
      parameters:
        - name: origin
          in: query
          description: Origin
          required: false
          schema:
            type: string
            default: '0'
      responses:
        '200':
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdjustmentPage'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialContent'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      x-proxy-name: Create a adjustment reason
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: Create a adjustment reason.
      operationId: createAdjustmentReason
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdjustmentReasonRequestModel'
        required: true
      responses:
        '201':
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdjustmentReasonRest'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialContent'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /v1/adjustment-reason/{adjustmentReasonId}/update:
    post:
      x-proxy-name: Update a adjustment reason
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: Update a adjustment reason.
      operationId: updateAdjustmentReason
      parameters:
        - name: adjustmentReasonId
          in: path
          description: Adjustment Reason ID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdjustmentReasonRequestUpdateModel'
        required: true
      responses:
        '200':
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdjustmentReasonRest'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/PartialContent'
                  - $ref: '#/components/schemas/Conflict'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /v1/voltage-test:
    get:
      x-proxy-name: Test voltage implementation
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: Test voltage implementation.
      operationId: voltageTest
      parameters:
        - name: decode
          in: query
          description: Decode test
          required: false
          schema:
            type: string
          example: '123'
        - name: encode
          in: query
          description: Encode test
          required: false
          schema:
            type: string
          example: '321'
      responses:
        '200':
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdjustmentPage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /v1/sellers/{sellerId}:
    get:
      x-proxy-name: Returns a single seller associated with a master merchant
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: Returns a single seller associated with a master merchant.
      operationId: getSellerById
      parameters:
        - name: user-id
          in: header
          description: EC code for master merchant.
          required: true
          schema:
            type: string
          example: '91042312'
        - name: sellerId
          in: path
          description: Id of the seller you want to retrieve.
          required: true
          schema:
            type: integer
            format: int64
          example: 38385774
      responses:
        '200':
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerRest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /v1/sellers/{sellerEc}/transactions:
    get:
      x-proxy-name: List sellers transactions
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: >-
        List sellers transactions. Accepts date range filter. If none start or
        end date is provided, the default search is the lastest 7 days.
      operationId: listSellerTransactions
      parameters:
        - name: page
          in: query
          description: page
          required: true
          schema:
            $ref: '#/components/schemas/PageRequestModel'
        - name: user-id
          in: header
          description: EC code of the master merchant
          required: true
          schema:
            type: string
          example: '39832063'
        - name: sellerEc
          in: path
          description: Ec code of the seller which you want to retrieve the transactions.
          required: true
          schema:
            type: string
          example: '38385774'
        - name: startDate
          in: query
          description: The start date you want to retrieve transactions.
          required: false
          schema:
            type: string
            format: date
          example: '2021-09-01'
        - name: endDate
          in: query
          description: The end date you want to retrieve transactions.
          required: false
          schema:
            type: string
            format: date
          example: '2021-09-20'
      responses:
        '200':
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerTransactionPage'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialContent'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      deprecated: true
  /v1/sellers/{sellerEc}/transactions/summary:
    get:
      x-proxy-name: Summary Seller Transactions
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: >-
        Returns a summary of sellers transactions. Accepts date range filter. If
        none start or end date is provided, the default search is the lastest 7
        days.
      operationId: summarySellerTransactions
      parameters:
        - name: user-id
          in: header
          description: EC code of the master merchant
          required: true
          schema:
            type: string
          example: '39832063'
        - name: sellerEc
          in: path
          description: Ec code of the seller which you want to retrieve the transactions.
          required: true
          schema:
            type: string
          example: '38385774'
        - name: startDate
          in: query
          description: The start date you want to retrieve transactions.
          required: true
          schema:
            type: string
            format: date
          example: '2021-09-01'
        - name: endDate
          in: query
          description: The end date you want to retrieve transactions.
          required: true
          schema:
            type: string
            format: date
          example: '2021-09-20'
      responses:
        '200':
          description: Successfully Done
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SellerTransactionRest'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialContent'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      deprecated: true
  /v1/sellers/retrieve/{sellerEc}/{institution}:
    get:
      x-proxy-name: Retrieve Seller On Base Or Bw
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: Retrieve Seller On Base Or Bw
      operationId: retrieveSellerOnBaseOrBw
      parameters:
        - name: sellerEc
          in: path
          description: Seller EC
          required: true
          schema:
            type: string
        - name: institution
          in: path
          description: Institution
          required: true
          schema:
            type: string
        - name: ga-jwt
          in: header
          description: GA JWT
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SellerRest'
  /v1/rules/{ruleId}:
    get:
      x-proxy-name: Read a specific rule by id
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: Read a specific rule by id.
      operationId: getRuleById
      parameters:
        - name: user-id
          in: header
          description: EC code for master merchant.
          required: true
          schema:
            type: string
          example: '91042312'
        - name: ruleId
          description: Rule id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleRest'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialContent'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /v1/rules/{ruleId}/delete:
    get:
      x-proxy-name: Delete a rule
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: Delete a rule.
      operationId: deleteRule
      parameters:
        - name: user-id
          in: header
          description: EC code for master merchant.
          required: true
          schema:
            type: string
          example: '91042312'
        - name: log-user-id
          in: header
          description: Activity log user identifier (CPF, ID or e-mail).
          required: false
          schema:
            type: string
          example: '1234'
        - name: log-user-name
          in: header
          description: Activity log user name.
          required: false
          schema:
            type: string
          example: John Doe
        - name: log-source-channel
          in: header
          description: Activity log source channel.
          required: false
          schema:
            type: string
          example: BACKOFFICE
        - name: ruleId
          in: path
          description: Rule ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successfully Done
          content:
            application/json: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/PartialContent'
                  - $ref: '#/components/schemas/Conflict'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /v1/rules/sellers/{sellerEc}:
    get:
      x-proxy-name: List the rules for a specific seller
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: List the rules for a specific seller.
      operationId: listRulesBySeller
      parameters:
        - name: user-id
          in: header
          description: EC code for master merchant.
          required: true
          schema:
            type: string
          example: '91042312'
        - name: sellerEc
          in: path
          description: Seller EC
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: page
          required: true
          schema:
            $ref: '#/components/schemas/PageRequestModel'
      responses:
        '200':
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RulePage'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialContent'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /v1/ruleTypes/{ruleTypeId}:
    get:
      x-proxy-name: Get a rule tyep for its id
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: Get a rule tyep for its id
      operationId: getTerm
      parameters:
        - name: ruleTypeId
          in: path
          description: Rule Type ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleTypeRest'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /v1/optin/user/{userId}:
    get:
      x-proxy-name: Get the optins accepted by specified user
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: Get the optins accepted by specified user.
      operationId: getAcceptedOptinsByUser
      parameters:
        - name: master-ec
          in: header
          description: EC code for master merchant.
          required: true
          schema:
            type: string
          example: '91042312'
        - name: userId
          in: path
          description: EC code for specified user of a master.
          required: true
          schema:
            type: string
          example: '1234'
      responses:
        '200':
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OptinRest'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/InternalServerError'
  /v1/optin/seller/{sellerEc}:
    get:
      x-proxy-name: Get the optin for a specific seller
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: Get the optin for a specific seller.
      operationId: getSellerOptin
      parameters:
        - name: user-id
          in: header
          description: EC code for master merchant.
          required: true
          schema:
            type: string
          example: '91042312'
        - name: sellerEc
          in: path
          description: EC code for seller merchant.
          required: true
          schema:
            type: string
          example: '91042567'
      responses:
        '200':
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OptinRest'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/InternalServerError'
  /v1/optin/master:
    get:
      x-proxy-name: Get the master user optin
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: Get the master user optin
      operationId: getMasterOptin
      parameters:
        - name: user-id
          in: header
          description: EC code for master merchant.
          required: true
          schema:
            type: string
          example: '91042312'
      responses:
        '200':
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OptinRest'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/InternalServerError'
  /v1/masters/{ec}:
    get:
      x-proxy-name: Get master by EC
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: Get master by EC
      operationId: getMasterByEc
      parameters:
        - name: ec
          in: path
          description: EC
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MasterRest'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/PartialContent'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/InternalServerError'
  /v1/masters/{ec}/{institution}/ec:
    get:
      x-proxy-name: Get master by EC and Institution
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: Get master by EC and Institution
      operationId: getMasterByEcAndInstitution
      parameters:
        - name: ec
          in: path
          description: EC
          required: true
          schema:
            type: string
        - name: institution
          in: path
          description: Institution
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MasterRest'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/PartialContent'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/InternalServerError'
  /v1/masters/{cpfCnpj}/{institution}:
    get:
      x-proxy-name: Get master by Document (CPF/CNPJ)
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: Get master by Document (CPF/CNPJ)
      operationId: getMastersByCpfCnpj
      parameters:
        - name: cpfCnpj
          in: path
          description: CPF/CNPJ
          required: true
          schema:
            type: string
        - name: institution
          in: path
          description: Institution
          required: true
          schema:
            type: string
        - name: page
          description: page
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/PageRequestModel'
      responses:
        '200':
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MasterRest'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/PartialContent'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/InternalServerError'
  /v1/masters/bw:
    get:
      x-proxy-name: Get master on BW
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      operationId: getMastersOnBw
      description: Get master on BW
      parameters:
        - name: document
          in: header
          description: Documento
          required: false
          schema:
            type: string
        - name: user-id
          in: header
          description: User ID
          required: false
          schema:
            type: string
        - name: institution
          in: header
          description: Institution
          required: true
          schema:
            type: string
        - name: ga-jwt
          in: header
          description: GA JWT
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MasterRest'
  /v1/fees/{feeId}:
    get:
      x-proxy-name: Read a specific fee by id
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: Read a specific fee by id.
      operationId: getFeeById
      parameters:
        - name: user-id
          in: header
          description: EC code for master merchant.
          required: true
          schema:
            type: string
          example: '91042312'
        - name: feeId
          description: Fee ID
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeRest'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialContent'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /v1/fees/{feeId}/delete:
    get:
      x-proxy-name: Delete a fee
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: Delete a fee.
      operationId: deleteFee
      parameters:
        - name: user-id
          in: header
          description: EC code for master merchant.
          required: true
          schema:
            type: string
          example: '91042312'
        - name: log-user-id
          in: header
          description: Activity log user identifier (CPF, ID or e-mail).
          required: false
          schema:
            type: string
          example: '1234'
        - name: log-user-name
          in: header
          description: Activity log user name.
          required: false
          schema:
            type: string
          example: John Doe
        - name: log-source-channel
          in: header
          description: Activity log source channel.
          required: false
          schema:
            type: string
          example: BACKOFFICE
        - name: feeId
          in: path
          description: Fee ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successfully Done
          content:
            application/json: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/PartialContent'
                  - $ref: '#/components/schemas/Conflict'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /v1/fees/sellers/{sellerEc}:
    get:
      x-proxy-name: List the fees for a specific seller
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: List the fees for a specific seller.
      operationId: listFeesBySeller
      parameters:
        - name: user-id
          in: header
          description: EC code for master merchant.
          required: true
          schema:
            type: string
          example: '91042312'
        - name: sellerEc
          in: path
          description: Seller EC
          required: true
          schema:
            type: string
        - name: page
          description: page
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/PageRequestModel'
      responses:
        '200':
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RulePage'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialContent'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /v1/backoffice/user/{fCode}:
    get:
      x-proxy-name: Get Split User By F code
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      operationId: getSplitUserByFcode
      description: Get Split User By F code
      parameters:
        - name: fCode
          in: path
          description: F code
          required: true
          schema:
            type: string
        - name: status
          in: query
          description: Status
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserSplitRest'
  /v1/adjustment-reason/{adjustmentReasonId}/delete:
    get:
      x-proxy-name: Delete a adjustment reason
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: Delete a adjustment reason.
      operationId: deleteAdjustmentReason
      parameters:
        - name: adjustmentReasonId
          description: Adjustment Reason ID
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successfully Done
          content:
            application/json: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/PartialContent'
                  - $ref: '#/components/schemas/Conflict'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /v1/activity-logs/seller/{masterEc}/{sellerId}:
    get:
      x-proxy-name: List all logs from sellers
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: List all logs from sellers.
      operationId: listSellerLogs
      parameters:
        - name: masterEc
          in: path
          description: Master EC
          required: true
          schema:
            type: string
        - name: sellerId
          in: path
          description: Seller ID
          required: true
          schema:
            type: integer
            format: int64
        - name: page
          description: page
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/PageRequestModel'
      responses:
        '200':
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityLogPage'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialContent'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /v1/activity-logs/rule/{ruleId}:
    get:
      x-proxy-name: List all logs from rules
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: List all logs from rules.
      operationId: listRuleLogs
      parameters:
        - name: ruleId
          in: path
          description: Rule ID
          required: true
          schema:
            type: integer
            format: int64
        - name: page
          in: query
          description: page
          required: true
          schema:
            $ref: '#/components/schemas/PageRequestModel'
      responses:
        '200':
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityLogPage'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialContent'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /v1/activity-logs/master/{masterEc}:
    get:
      x-proxy-name: List all logs from masters
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: List all logs from masters.
      operationId: listMasterLogs
      parameters:
        - name: masterEc
          description: Master EC
          in: path
          required: true
          schema:
            type: string
        - name: page
          description: page
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/PageRequestModel'
      responses:
        '200':
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityLogPage'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialContent'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /v1/activity-logs/fee/{feeId}:
    get:
      x-proxy-name: List all logs from fees
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: List all logs from fees.
      operationId: listFeeLogs
      parameters:
        - name: feeId
          in: path
          description: Fee ID
          required: true
          schema:
            type: integer
            format: int64
        - name: page
          description: page
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/PageRequestModel'
      responses:
        '200':
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityLogPage'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialContent'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /v1/activity-logs/adjustment/{adjustmentId}:
    get:
      x-proxy-name: List all logs from adjustments
      x-group-name: Split Payment
      x-child-product-name: Digital Solutions
      description: List all logs from adjustments.
      operationId: listAdjustmentLogs
      parameters:
        - name: adjustmentId
          description: Adjustment ID
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: page
          description: page
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/PageRequestModel'
      responses:
        '200':
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityLogPage'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialContent'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

components:
  schemas:
    FiltroDataTO:
      required:
        - data_final
        - data_inicial
      type: object
      properties:
        data_inicial:
          type: string
          description: Initial date for the search. Maximum period allowed 90 days.
          format: date
          example: '2021-01-01'
        data_final:
          type: string
          description: Final date for the search. Maximum period allowed 90 days.
          format: date
          example: '2021-01-30'
    TransactionsFilterRest:
      required:
        - data
      type: object
      properties:
        master_ids:
          type: array
          description: Master's Merchant Id List
          example:
            - '12341'
            - '12342'
          items:
            type: string
            description: Master's Merchant Id List
            example: '[12341,12342]'
        sellers_ids:
          type: array
          description: Master's Merchant Id List
          example:
            - '99129955'
            - '99126671'
          items:
            type: string
            description: Master's Merchant Id List
            example: '[99129955,99126671]'
        data:
          $ref: '#/components/schemas/FiltroDataTO'
        status:
          type: string
          description: Filter transactions by status
          example: PROCESSED
          enum:
            - ALL
            - PROCESSED
            - CANCELED
            - REJECTED
            - CHARGEBACK
        param:
          type: string
          description: >-
            Param to filter by name, transaction code, seller name or seller
            document (cpf/cnpj)
          example: Jadon S.
        numero_pagina:
          type: integer
          description: Page number. Can be set through request.
          format: int32
          example: 1
        tamanho_pagina:
          type: integer
          description: Items per page. Can be set through request.
          format: int32
          example: 5
        total_itens:
          type: integer
          description: Total items queried, ignoring pagination.
          format: int32
          example: 10
        total_paginas:
          type: integer
          description: Total pages.
          format: int32
          example: 10
    ReceiverRest:
      type: object
      properties:
        ec:
          type: string
          description: Establishment EC
          example: '12345678'
        terminalId:
          type: string
          description: Establishment terminal ID
          example: ISD0002A
        accType:
          type: string
          description: Establishment account type
          example: MASTER
          enum:
            - MASTER
            - SELLER
        document:
          type: string
          description: Establishment document
          example: '1234567890123'
        name:
          type: string
          description: Establishment name
          example: Lac LTDA
        amount:
          type: number
          description: Transaction amount received
          format: double
          example: 42
      description: Info of transaction master.
    SellerTransactionRest:
      type: object
      properties:
        id:
          type: integer
          description: >-
            Consolidated transaction id. Can be the transaction_ptlf, or
            transaction_rejected or transaction_split id.
          format: int64
          example: 1
        transactionId:
          type: integer
          description: Transaction Id
          format: int64
          example: 1
        masterEc:
          type: integer
          description: Master EC
          format: int64
          example: 641996
        masterName:
          type: string
          description: Master Name
          example: Mario S. M.
        terminal:
          type: string
          description: Master Name
          example: T64SMN
        cardNum:
          type: string
          description: Card Number
          example: 5485*******1234
        accountType:
          type: string
          description: Account Type
          example: MN
        transactionTime:
          type: string
          description: Account Type
          example: '15:43.540'
        mdrFlag:
          type: string
          description: Y - for Masters, N - for Sellers
          example: 'Y'
        ruleId:
          type: string
          description: Split Rule ID
          example: '215'
        purchaseType:
          type: string
          description: Purchase Type
          example: '003100'
        installments:
          type: string
          description: Installments
          example: '08'
        transactionCode:
          type: string
          description: Transaction Universal identifier.
          example: '1'
        ec:
          type: string
          description: Seller Merchant Id.
          example: '1587'
        createdAt:
          type: string
          description: Creation Date of the transaction.
          format: date
          example: '2021-11-08'
        nsu:
          type: string
          description: NSU number.
          example: '1'
        totalValue:
          type: number
          description: Transaction gross value.
          format: double
          example: 1500
        transferedValue:
          type: number
          description: Transaction amount transferred to the seller.
          format: double
          example: 500
        expectedTransferedValue:
          type: number
          description: Transaction expected amount transferred to the seller.
          format: double
          example: 500
        netValue:
          type: number
          description: Transaction net value.
          format: double
          example: 1000
        transMdrValue:
          type: number
          description: discounted values (MDR)
          format: double
          example: 500
        transAmountNet:
          type: number
          description: Net value for master
          format: double
          example: 500
        seller:
          type: string
          description: Seller name.
          example: Van D. B.
        sellerCpfCnpj:
          type: string
          description: Seller document, cpf/cnpj.
          example: '06988749407'
        transactionType:
          type: string
          description: >-
            Transaction Type, (DU = POS, NC = TEF, EI = IPG, E3 = Tef e-Com , 00
            = Batch
          example: E1
        reasonMsg:
          type: string
          description: Rejected transaction reason message.
          example: Unexpected error while splitting transaction
        reasonCode:
          type: string
          description: Rejected transaction reason code.
          example: '0'
        status:
          type: string
          description: Transaction status.
          example: PROCESSED
          enum:
            - ALL
            - PROCESSED
            - CANCELED
            - REJECTED
            - CHARGEBACK
        cardFlag:
          type: string
          description: Transaction card flag.
        chargebackDate:
          type: string
          description: Transaction chargeback date.
        receiver:
          $ref: '#/components/schemas/ReceiverRest'
        master:
          $ref: '#/components/schemas/ReceiverRest'
        additionalInformation:
          type: string
    TransactionPaginadoTO:
      type: object
      properties:
        numero_pagina:
          type: integer
          description: Page number. Can be set through request.
          format: int32
          example: 1
        total_itens:
          type: integer
          description: Total items queried, ignoring pagination.
          format: int32
          example: 10
        total_paginas:
          type: integer
          description: Total pages.
          format: int32
          example: 10
        resultado:
          type: array
          items:
            $ref: '#/components/schemas/SellerTransactionRest'
    PartialContent:
      type: object
      properties:
        codigoRetorno:
          type: integer
          description: Return code
          format: int32
          example: 9
          enum:
            - 9
            - 10
        mensagem:
          type: string
          description: Description return code
          example: '9 - Campos mandatorios: ... (meaning Mandatory Fields)'
          enum:
            - '9 - Campos mandatorios: ... (meaning Mandatory Fields)'
            - 10 - (Erro validaçao) (meaning VAlidation Error)
    InternalServerError:
      type: object
      properties:
        codigoRetorno:
          type: integer
          description: Return code
          format: int32
          example: 2
          enum:
            - 2
            - 7
        mensagem:
          type: string
          description: Description return code
          example: 2 - Erro Interno (Meaning Internal Error)
          enum:
            - 2 - Erro Interno (Meaning Internal Error)
            - 7 - Erro na integracao da API. Detalhe (Meaning Integration Error)
    MasterTransactionSummary:
      type: object
      properties:
        totalSales:
          type: number
          description: Total in sales.
          example: 15000
        totalSalesTransactionsAmount:
          type: integer
          description: Total sales quantity.
          format: int64
          example: 210
        totalTransfer:
          type: number
          description: Total amount transferred to sellers in sales.
          example: 5000
        totalTransferTransactionsAmount:
          type: integer
          description: Total quantity of sales that had transferred values.
          format: int64
          example: 100
        netValue:
          type: number
          description: Total net value
          example: 10000
        netValueTransactionsAmount:
          type: integer
          description: Total quantity of sales.
          format: int64
          example: 210
        transferNetValueMdr:
          type: number
          description: Total net value after discount mdr
          example: 10000
        transferMdrValue:
          type: number
          description: Total mdr value
          example: 10000
        rejectedValue:
          type: number
          description: Total in rejected sales.
          example: 1500
        rejectedValueTransactionsAmount:
          type: integer
          description: Total quantity of rejected sales.
          format: int64
          example: 25
        canceledValue:
          type: number
          description: Total in canceled sales.
          example: 2103
        canceledValueTransactionsAmount:
          type: integer
          description: Total quantity of canceled sales.
          format: int64
          example: 42
        chargebackValue:
          type: number
          description: Total in chargeback sales.
          example: 2342
        chargebackValueTransactionsAmount:
          type: integer
          description: Total quantity of chargeback sales.
          format: int64
          example: 34
    SplitFlagUpdateRequestModel:
      type: object
      properties:
        masterEc:
          type: string
        terminalId:
          type: string
        institution:
          type: string
        status:
          type: string
          enum:
            - ACTIVE
            - DISABLE
    SellerRequestModel:
      required:
        - cpfCnpj
        - ec
        - institution
        - name
      type: object
      properties:
        name:
          type: string
          description: Name of seller merchant
          example: Wise phone
        institution:
          type: string
          description: Bank institution number of seller merchant
          example: '0000003'
        ec:
          type: string
          description: Seller's merchant identifier.
          example: '89450257'
        cpfCnpj:
          type: string
          description: 'CPF or CNPJ: national document of master user.'
          example: '49104994000185'
        terminalId:
          type: string
          description: Seller terminal identification code.
          example: ISD0002A
    SellerRest:
      required:
        - createdAt
        - updatedAt
      type: object
      properties:
        message:
          type: string
          description: A additional message if necessary
        id:
          type: integer
          description: Seller Id.
          format: int64
          example: 1
        masterEc:
          type: string
          description: Master Merchant Id.
          example: '1587'
        name:
          type: string
          description: Seller name.
          example: David D. G.
        institution:
          type: string
          description: Institution name.
          example: Bin.
        ec:
          type: string
          description: Seller Merchant Id.
          example: '1587'
        cpfCnpj:
          type: string
          description: Seller document, cpf/cnpj.
          example: '06988749407'
        terminalId:
          type: string
          description: Seller terminal Id.
          example: TERM019
        status:
          type: string
          enum:
            - ACTIVE
            - BLOCKED
            - BOARDING_PENDING
        createdAt:
          type: string
          description: Seller creation date
          format: date
          example: '2021-11-01'
        updatedAt:
          type: string
          description: Last time seller was updated
          format: date-time
    Conflict:
      type: object
      properties:
        codigoRetorno:
          type: integer
          description: Return code
          format: int32
          example: 8
          enum:
            - 8
        mensagem:
          type: string
          description: Description return code
          example: 8 - Item duplicado (Meaning Duplicated Item)
          enum:
            - 8 - Item duplicado (Meaning Duplicated Item)
    NotFound:
      type: object
      properties:
        codigoRetorno:
          type: integer
          description: Return code
          format: int32
          example: 5
          enum:
            - 5
        mensagem:
          type: string
          description: Description return code
          example: 5 - Item nao encontrado (Meaning item not found)
          enum:
            - 5 - Item nao encontrado (Meaning item not found)
    SellerChangeStatusRequestModel:
      type: object
      properties:
        sellersEcs:
          type: array
          description: Seller user EC. Speficy the sellers to change status.
          example:
            - '3241234'
            - '1445123'
          items:
            type: string
            description: Seller user EC. Speficy the sellers to change status.
            example: '[3241234,1445123]'
        status:
          type: string
          description: Seller's status
          example: ACTIVE
          enum:
            - ACTIVE
            - BLOCKED
            - BOARDING_PENDING
    SellerFixedAmountRuleRequest:
      required:
        - fixedAmount
        - masterEc
        - name
        - ruleType
        - sellerEc
      type: object
      properties:
        masterEc:
          type: string
          description: Master user EC. This value will be get from the user-id header.
        sellerEc:
          type: string
          description: Seller user EC. Speficy the seller to apply the rule.
          example: '12389'
        ruleType:
          type: integer
          description: Rule type 1 = Fixed value.
          format: int64
          example: 1
        fixedAmount:
          type: number
          description: Value that will be send to the seller.
          format: float
          example: 20.5
        name:
          type: string
          description: Rule name
          example: Fixed value rule for Seller XYZ
    MasterPercentRuleRequest:
      required:
        - masterEc
        - name
        - percent
        - ruleType
      type: object
      properties:
        masterEc:
          type: string
          description: EC do usuário master. Deve vir no campo user-id do header
        ruleType:
          type: integer
          description: Tipo de regra 2 = Percentual
          format: int64
          example: 2
        percent:
          type: integer
          description: Valor inteiro do percentual
          format: int32
          example: 10
        name:
          type: string
          description: Nome da regra
          example: Regra default do Master
    RuleRequestModel:
      required:
        - masterEc
        - ruleType
      type: object
      properties:
        masterEc:
          type: string
          description: Master user EC. This value will be get from the user-id header.
        percent:
          type: integer
          description: >-
            For rule type 2, send this field with the percent value that will be
            split to the seller.
          format: int32
          example: 10
        fixedAmount:
          type: number
          description: >-
            For rule type 1, send this field with the fixed value that will be
            split to the seller. (R$ - BRL)
          format: double
          example: 30.5
        ruleType:
          type: string
          description: |-
            Rule type: 
             F - Fixed value. 
             P - Percent value. A - Values will must be sent for the master user in the transaction.
          example: P
          enum:
            - P
            - A
            - F
        sellers:
          type: array
          description: List of sellers user EC.
          items:
            $ref: '#/components/schemas/SellerRuleModel'
        default:
          type: boolean
        sellersEcs:
          type: array
          items:
            type: string
    SellerRuleModel:
      required:
        - sellerEc
      type: object
      properties:
        sellerEc:
          type: string
        value:
          type: integer
          format: int32
      description: List of sellers user EC.
    Attribute:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        originalValue:
          type: object
    Document:
      type: object
      properties:
        id:
          type: integer
          format: int64
        cpfCnpj:
          type: string
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/Attribute'
        hashMapAttributes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Attribute'
        hashMapValues:
          type: object
          additionalProperties:
            type: string
    MasterRest:
      required:
        - createdAt
        - updatedAt
      type: object
      properties:
        id:
          type: integer
          description: Master Id.
          format: int64
          example: 1
        institution:
          type: string
          description: Institution name.
          example: Bin.
        ec:
          type: string
          description: Master Merchant Id.
          example: '1587'
        cpfCnpj:
          type: string
          description: Seller document, cpf/cnpj.
          example: '06988749407'
        terminalId:
          type: string
          description: Master terminal Id.
          example: TERM019
        technology:
          type: string
          description: Master/terminal technology.
          example: bin
        terminals:
          type: array
          items:
            $ref: '#/components/schemas/TerminalRest'
        transactionReview:
          type: boolean
          description: Transaction review status.
          example: false
        status:
          type: string
          enum:
            - ACTIVE
            - DELETED
            - WAITING
            - DISABLE
        name:
          type: string
          description: Seller name.
          example: Luke S,.
        email:
          type: string
          description: Seller email.
          example: email@example.com
        createdAt:
          type: string
          description: Master creation date
          format: date
          example: '2021-11-01'
        updatedAt:
          type: string
          description: Last time master was updated
          format: date-time
        sellers:
          type: array
          description: Sellers Merchant Ids.
          items:
            $ref: '#/components/schemas/SellerRest'
    RuleRest:
      type: object
      properties:
        id:
          type: integer
          description: Rule Id
          format: int64
          example: 1
        masterEc:
          type: string
          description: Master's Merchant Id
          example: '12341'
        master:
          $ref: '#/components/schemas/MasterRest'
        sellers:
          type: array
          description: Sellers Merchant Ids.
          items:
            $ref: '#/components/schemas/SellerRuleResponseModel'
        percent:
          type: integer
          description: Sale value percent to be transferred to the seller
          format: int32
          example: 15
        fixedAmount:
          type: number
          description: Sale value amount to be transferred to the seller
          format: double
          example: 1500
        ruleType:
          $ref: '#/components/schemas/RuleTypeRest'
        name:
          type: string
          description: Rule name
          example: Top Sales
        status:
          type: string
          enum:
            - ACTIVE
            - DELETED
        createdAt:
          type: string
          description: Rule date of creation
          format: date
          example: '2021-11-08'
        updatedAt:
          type: string
          description: Last time the rule was updated.
          format: date-time
        isDefault:
          type: boolean
          description: If the fee must be applied to all master's sellers.
          example: false
        document:
          $ref: '#/components/schemas/Document'
      description: Response Content.
    RuleTypeRest:
      required:
        - code
        - description
      type: object
      properties:
        id:
          type: integer
          format: int64
        description:
          type: string
          example: Value per transaction (Fixed)
        code:
          type: string
          description: A code to identify the rule type.
    SellerRuleResponseModel:
      required:
        - createdAt
        - updatedAt
      type: object
      properties:
        message:
          type: string
          description: A additional message if necessary
        id:
          type: integer
          description: Seller Id.
          format: int64
          example: 1
        masterEc:
          type: string
          description: Master Merchant Id.
          example: '1587'
        name:
          type: string
          description: Seller name.
          example: David D. G.
        institution:
          type: string
          description: Institution name.
          example: Bin.
        ec:
          type: string
          description: Seller Merchant Id.
          example: '1587'
        cpfCnpj:
          type: string
          description: Seller document, cpf/cnpj.
          example: '06988749407'
        terminalId:
          type: string
          description: Seller terminal Id.
          example: TERM019
        status:
          type: string
          enum:
            - ACTIVE
            - BLOCKED
            - BOARDING_PENDING
        createdAt:
          type: string
          description: Seller creation date
          format: date
          example: '2021-11-01'
        updatedAt:
          type: string
          description: Last time seller was updated
          format: date-time
        value:
          type: integer
          format: int32
      description: Sellers Merchant Ids.
    TerminalRest:
      type: object
      properties:
        number:
          type: string
          description: Terminal's logical number
          example: TGC5603
        technology:
          type: string
          description: Terminal's technology
          example: POS
        splitFlag:
          type: boolean
          description: Terminal's split flag
          example: true
    RuleUpdateRequestModel:
      type: object
      properties:
        percent:
          type: integer
          description: >-
            The percent value to be transferd in each transaction for a rule of
            percent type (2).
          format: int32
          example: 20
        fixedAmount:
          type: number
          description: >-
            The fixed (R$ - BRL) value to be transferd in each transaction for a
            fixedAmount type (1).
          format: double
          example: 20.71
        ruleType:
          type: string
          description: The type of rule you need to define.
          enum:
            - P
            - A
            - F
            - P,F,A
        name:
          type: string
          description: A name to describe your rule.
          example: My awesome rule.
        sellers:
          type: array
          description: >-
            Seller user EC. Speficy the seller to apply the fee. Do not send
            this value for master default rule.
          items:
            $ref: '#/components/schemas/SellerRuleModel'
        default:
          type: boolean
        sellersEcs:
          type: array
          items:
            type: string
    OptinRequestModel:
      required:
        - masterEc
        - userId
        - userName
        - version
      type: object
      properties:
        sellerEc:
          type: string
          description: >-
            Seller's merchant identifier. Only must be sent if is a seller
            optin.
          example: '91042312'
        masterEc:
          type: string
          description: Master's merchant identifier
          example: '91042312'
        userName:
          type: string
          description: Logged user's name
          example: Mateus Santos
        userId:
          type: string
          description: Logged user's identifier
          example: '234'
        version:
          type: string
          description: Versão do optin.
          example: 1.2.3
    OptinRest:
      required:
        - id
        - masterEc
        - sellerEc
        - userId
        - userName
      type: object
      properties:
        id:
          type: integer
          description: Optin Id.
          format: int64
          example: 15
        sellerEc:
          type: string
          description: Seller merchant Id.
          example: '712'
        masterEc:
          type: string
          description: Seller Master merchant Id.
          example: '1'
        userName:
          type: string
          description: Logged user's name
          example: Mateus Santos
        userId:
          type: string
          description: Logged user's identifier
          example: '234'
        createdAt:
          type: string
          description: Date of optin registration.
          format: date
          example: '2021-11-09'
        updatedAt:
          type: string
          description: Last time the optin was updated.
          format: date-time
        version:
          type: string
          description: Versão do optin.
          example: 1.2.3
    MultipleRulesRequestModel:
      required:
        - masterEc
        - ruleType
      type: object
      properties:
        masterEc:
          type: string
          description: Master user EC. This value will be get from the user-id header.
        percent:
          type: integer
          description: >-
            For rule type 2, send this field with the percent value that will be
            split to the seller.
          format: int32
          example: 10
        fixedAmount:
          type: number
          description: >-
            For rule type 1, send this field with the fixed value that will be
            split to the seller. (R$ - BRL)
          format: double
          example: 30.5
        ruleType:
          type: string
          description: |-
            Rule type: 
             F - Fixed value. 
             P - Percent value. A - Values will must be sent for the master user in the transaction.
          example: P
          enum:
            - P
            - A
            - F
        sellers:
          type: array
          description: >-
            Seller user EC. Speficy the seller to apply the fee. Do not send
            this value for master default rule.
          example:
            - '3241234'
            - '1445123'
          items:
            type: string
            description: >-
              Seller user EC. Speficy the seller to apply the fee. Do not send
              this value for master default rule.
            example: '[3241234,1445123]'
        allSellers:
          type: boolean
        sellersEcs:
          type: array
          items:
            type: string
    MasterRequestModel:
      required:
        - cpfCnpj
        - email
        - institution
        - name
        - terminalId
      type: object
      properties:
        institution:
          type: string
          description: Bank institution number of master user
          example: '0000003'
        ec:
          type: string
          description: Master's merchant identifier
          example: '91042312'
        cpfCnpj:
          type: string
          description: 'CPF or CNPJ: national document of master user.'
          example: '98037982000190'
        terminalId:
          type: string
          description: Master terminal identification code.
          example: ISD0002A
        technology:
          type: string
          description: Master terminal technology identification name.
          example: bin
        transactionReview:
          type: boolean
          description: >-
            Whether a user will or won't have to manually aprove transactions
            for his sellers
          example: true
        name:
          type: string
          description: The name of the Master Merchant
          example: My Shop
        email:
          type: string
          description: The email of the Master Merchant
          example: example@example.com
        status:
          type: string
          description: The status of the Master Merchant
          example: ACTIVE
          enum:
            - ACTIVE
            - DELETED
            - WAITING
            - DISABLE
    FeeRequestModel:
      required:
        - chargeDay
        - masterEc
        - name
        - period
        - value
      type: object
      properties:
        name:
          type: string
        value:
          minimum: 1
          type: number
          format: float
        chargeDay:
          type: integer
          format: int32
        period:
          type: string
          enum:
            - MENSAL
            - BIMESTRAL
            - TRIMESTRAL
        masterEc:
          type: string
          description: Master user EC. This value will be get from the user-id header.
        sellersEcs:
          type: array
          description: >-
            Seller user EC. Speficy the seller to apply the fee. Do not send
            this value for master default fee.
          items:
            type: string
            description: >-
              Seller user EC. Speficy the seller to apply the fee. Do not send
              this value for master default fee.
            example: '[3241234,1445123]'
        default:
          type: boolean
    FeeRest:
      type: object
      properties:
        id:
          type: integer
          description: Fee Id.
          format: int64
          example: 1
        masterEc:
          type: string
          description: Master Merchant Id.
          example: '1587'
        master:
          $ref: '#/components/schemas/MasterRest'
        sellers:
          type: array
          description: Sellers Merchant Ids.
          items:
            $ref: '#/components/schemas/SellerRest'
        name:
          type: string
          description: Fee name.
          example: Top Sales.
        period:
          type: string
          enum:
            - MENSAL
            - BIMESTRAL
            - TRIMESTRAL
        chargeDay:
          type: integer
          description: Day of the month to apply the fee.
          format: int32
        value:
          type: number
          description: Fee amount.
          format: float
          example: 876.9
        createdAt:
          type: string
          description: Fee date of creation
          format: date
          example: '2021-11-08'
        updatedAt:
          type: string
          description: Last time the fee was updated.
          format: date-time
        nextChargeDate:
          type: string
          format: date
        isDefault:
          type: boolean
          description: If the fee must be applied to all master's sellers.
          example: false
        status:
          type: string
          description: Status of fee. Can be 'active' or 'deleted'
          example: ACTIVE
          enum:
            - ACTIVE
            - DELETED
        document:
          $ref: '#/components/schemas/Document'
    FeeRequestUpdateModel:
      type: object
      properties:
        name:
          type: string
          description: A name for fee identification.
        value:
          minimum: 1
          type: number
          description: Fee value.
          format: float
          example: 200.5
        chargeDay:
          type: integer
          format: int32
        period:
          type: string
          enum:
            - MENSAL
            - BIMESTRAL
            - TRIMESTRAL
        sellersEcs:
          type: array
          description: >-
            Seller user EC. Speficy the seller to apply the fee. Do not send
            this value for master default fee.
          items:
            type: string
            description: >-
              Seller user EC. Speficy the seller to apply the fee. Do not send
              this value for master default fee.
            example: '[3241234,1445123]'
        default:
          type: boolean
    AdjustmentRequestModel:
      required:
        - description
        - masterEc
        - operation
        - reasonId
        - type
        - value
      type: object
      properties:
        description:
          type: string
        value:
          type: number
          format: double
        operation:
          type: string
          enum:
            - DEBIT
            - CREDIT
        type:
          type: string
          enum:
            - SINGLE
            - RECURRENT
        originId:
          type: string
        feeId:
          type: string
        masterEc:
          type: string
          description: Master user EC. This value will be get from the user-id header.
        sellerEc:
          type: string
          description: >-
            Seller user EC. Speficy the seller to apply the fee. Do not send
            this value for master default fee.
        reasonId:
          type: string
          description: Adjustment reason Id.
    AdjustmentReasonRest:
      type: object
      properties:
        id:
          type: integer
          description: Adjustment reason Id.
          format: int64
          example: 1
        description:
          type: string
          description: Adjustment reasons description.
          example: Description of adjustment reason.
        origin:
          type: string
          description: Adjustment reasons origin.
          example: ADJUSTMENT
    AdjustmentRest:
      type: object
      properties:
        id:
          type: integer
          description: Adjustment Id.
          format: int64
          example: 1
        master:
          $ref: '#/components/schemas/MasterRest'
        seller:
          $ref: '#/components/schemas/SellerRest'
        reason:
          $ref: '#/components/schemas/AdjustmentReasonRest'
        feeId:
          type: integer
          description: Fee Id.
          format: int64
          example: 1587
        originId:
          type: integer
          description: Adjustment origin Id.
          format: int64
          example: 1587
        description:
          type: string
          description: Adjustment description.
          example: Description of adjustment.
        operation:
          type: string
          description: Adjustment operation.
          example: DEBIT
          enum:
            - DEBIT
            - CREDIT
        type:
          type: string
          description: Adjustment type.
          example: RECURRENT
          enum:
            - SINGLE
            - RECURRENT
        value:
          type: number
          description: Adjustment value.
          format: double
          example: 876.9
        sourceChannel:
          type: string
          description: Activity log source channel.
          example: BACKOFFICE
          enum:
            - CARAT
            - BACKOFFICE
        userName:
          type: string
          description: Activity log user name.
          example: John Doe
        userId:
          type: string
          description: Activity log user identifier (CPF, ID or e-mail).
          example: '1234'
        createdAt:
          type: string
          description: Adjustment date of creation
          format: date-time
      description: Response Content.
    AdjustmentsFilterRest:
      required:
        - end_date
        - operation
        - start_date
      type: object
      properties:
        master_ids:
          type: array
          description: Master's Merchant Id List
          items:
            type: string
            description: Master's Merchant Id List
            example: '[12341,12342]'
        start_date:
          type: string
          description: Initial date for the search. Maximum period allowed 90 days.
          format: date
          example: '2021-01-01'
        end_date:
          type: string
          description: Final date for the search. Maximum period allowed 90 days.
          format: date
          example: '2021-01-30'
        operation:
          type: string
          enum:
            - DEBIT
            - CREDIT
        reason:
          type: string
          description: Seller name to filter
          example: Fix.
        seller_name:
          type: string
          description: Seller name to filter
          example: Jadon S.
    AdjustmentsSummary:
      type: object
      properties:
        totalAdjusments:
          type: number
          description: Total in sales.
          example: 15000
        totalAdjusmentsAmount:
          type: integer
          description: Total sales quantity.
          format: int64
          example: 210
        totalCredit:
          type: number
          description: Total amount transferred to sellers in sales.
          example: 5000
        totalCreditAmount:
          type: integer
          description: Total quantity of sales that had transferred values.
          format: int64
          example: 100
        totalDebit:
          type: number
          description: Total net value
          example: 10000
        totalDebitAmount:
          type: integer
          description: Total quantity of sales.
          format: int64
          example: 210
        balance:
          type: number
          description: Total in rejected sales.
          example: 1500
    AdjustmentReasonRequestModel:
      required:
        - description
      type: object
      properties:
        description:
          type: string
        origin:
          type: string
    AdjustmentReasonRequestUpdateModel:
      type: object
      properties:
        description:
          type: string
          description: Adjustment reason description.
    AdjustmentPage:
      type: object
      properties:
        codigoRetorno:
          type: integer
          description: Response return code.
          format: int32
          example: 0
        mensagem:
          type: string
          description: Response message.
          example: Success
        conteudo:
          type: array
          description: Response Content.
          items:
            $ref: '#/components/schemas/AdjustmentRest'
        lastPage:
          type: boolean
          description: Is the last page for paginated results.
          example: true
        totalPages:
          type: integer
          description: Total pages.
          format: int32
          example: 5
        totalItems:
          type: integer
          description: Total items queried.
          format: int64
          example: 1
        currentPage:
          type: integer
          description: Current page in request.
          format: int32
          example: 1
        totalCurrentItems:
          type: integer
          description: Total items for current request.
          format: int32
          example: 1
    PageRequestModel:
      type: object
      properties:
        page:
          minimum: 0
          type: integer
          description: Current page of request.
          format: int32
        limit:
          minimum: 1
          type: integer
          description: Limit of items per page.
          format: int32
        sort:
          type: array
          description: Sort column list.
          items:
            type: string
            description: Sort column list.
        pageable:
          $ref: '#/components/schemas/PageableObject'
    PageableObject:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          $ref: '#/components/schemas/Sort'
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        unpaged:
          type: boolean
        paged:
          type: boolean
    Sort:
      type: object
      properties:
        empty:
          type: boolean
        sorted:
          type: boolean
        unsorted:
          type: boolean
    SellerPage:
      type: object
      properties:
        codigoRetorno:
          type: integer
          description: Response return code.
          format: int32
          example: 0
        mensagem:
          type: string
          description: Response message.
          example: Success
        conteudo:
          type: array
          description: Response Content.
          items:
            $ref: '#/components/schemas/SellerRest'
        lastPage:
          type: boolean
          description: Is the last page for paginated results.
          example: true
        totalPages:
          type: integer
          description: Total pages.
          format: int32
          example: 5
        totalItems:
          type: integer
          description: Total items queried.
          format: int64
          example: 1
        currentPage:
          type: integer
          description: Current page in request.
          format: int32
          example: 1
        totalCurrentItems:
          type: integer
          description: Total items for current request.
          format: int32
          example: 1
    SellerTransactionPage:
      type: object
      properties:
        codigoRetorno:
          type: integer
          description: Response return code.
          format: int32
          example: 0
        mensagem:
          type: string
          description: Response message.
          example: Success
        conteudo:
          type: array
          description: Response Content.
          items:
            $ref: '#/components/schemas/SellerTransactionRest'
        lastPage:
          type: boolean
          description: Is the last page for paginated results.
          example: true
        totalPages:
          type: integer
          description: Total pages.
          format: int32
          example: 5
        totalItems:
          type: integer
          description: Total items queried.
          format: int64
          example: 1
        currentPage:
          type: integer
          description: Current page in request.
          format: int32
          example: 1
        totalCurrentItems:
          type: integer
          description: Total items for current request.
          format: int32
          example: 1
    RulePage:
      type: object
      properties:
        codigoRetorno:
          type: integer
          description: Response return code.
          format: int32
          example: 0
        mensagem:
          type: string
          description: Response message.
          example: Success
        conteudo:
          type: array
          description: Response Content.
          items:
            $ref: '#/components/schemas/RuleRest'
        lastPage:
          type: boolean
          description: Is the last page for paginated results.
          example: true
        totalPages:
          type: integer
          description: Total pages.
          format: int32
          example: 5
        totalItems:
          type: integer
          description: Total items queried.
          format: int64
          example: 1
        currentPage:
          type: integer
          description: Current page in request.
          format: int32
          example: 1
        totalCurrentItems:
          type: integer
          description: Total items for current request.
          format: int32
          example: 1
    FeePage:
      type: object
      properties:
        codigoRetorno:
          type: integer
          description: Response return code.
          format: int32
          example: 0
        mensagem:
          type: string
          description: Response message.
          example: Success
        conteudo:
          type: array
          description: Response Content.
          items:
            $ref: '#/components/schemas/FeeRest'
        lastPage:
          type: boolean
          description: Is the last page for paginated results.
          example: true
        totalPages:
          type: integer
          description: Total pages.
          format: int32
          example: 5
        totalItems:
          type: integer
          description: Total items queried.
          format: int64
          example: 1
        currentPage:
          type: integer
          description: Current page in request.
          format: int32
          example: 1
        totalCurrentItems:
          type: integer
          description: Total items for current request.
          format: int32
          example: 1
    UserSplitRest:
      type: object
      properties:
        username:
          type: string
        name:
          type: string
        email:
          type: string
        status:
          type: string
          enum:
            - ACTIVE
            - DISABLE
            - BLOCKED
        groups:
          type: array
          items:
            type: string
        external:
          type: boolean
        internal:
          type: boolean
        admin:
          type: boolean
    ActivityLogFieldsRest:
      type: object
      properties:
        name:
          type: string
          description: Field name.
          example: email
        value:
          type: string
          description: Field value.
          example: johndoe@email.com
        previousValue:
          type: string
          description: Field previous value.
          example: acme@email.com
      description: Activity log changed fields.
    ActivityLogPage:
      type: object
      properties:
        codigoRetorno:
          type: integer
          description: Response return code.
          format: int32
          example: 0
        mensagem:
          type: string
          description: Response message.
          example: Success
        conteudo:
          type: array
          description: Response Content.
          items:
            $ref: '#/components/schemas/ActivityLogRestIActivityLog'
        lastPage:
          type: boolean
          description: Is the last page for paginated results.
          example: true
        totalPages:
          type: integer
          description: Total pages.
          format: int32
          example: 5
        totalItems:
          type: integer
          description: Total items queried.
          format: int64
          example: 1
        currentPage:
          type: integer
          description: Current page in request.
          format: int32
          example: 1
        totalCurrentItems:
          type: integer
          description: Total items for current request.
          format: int32
          example: 1
    ActivityLogRestIActivityLog:
      type: object
      properties:
        id:
          type: integer
          description: Activity log Id.
          format: int64
          example: 1
        sourceChannel:
          type: string
          description: Activity log source channel.
          example: BACKOFFICE
          enum:
            - CARAT
            - BACKOFFICE
        userName:
          type: string
          description: Activity log user name.
          example: John Doe
        userId:
          type: string
          description: Activity log user identifier (CPF, ID or e-mail).
          example: '1234'
        createdAt:
          type: string
          description: Activity log creation date
          format: date-time
        operation:
          type: string
          description: Activity log operation.
          example: UPDATE
          enum:
            - CREATE
            - UPDATE
            - DELETE
            - LINK
            - DEACTIVATION
        changes:
          type: array
          description: Activity log changed fields names.
          items:
            type: string
            description: Activity log changed fields names.
            example: '[name, email]'
        fields:
          type: array
          description: Activity log changed fields.
          items:
            $ref: '#/components/schemas/ActivityLogFieldsRest'
      description: Response Content.
