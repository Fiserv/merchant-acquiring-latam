openapi: 3.0.1
x-stoplight:
  id: i6o4phdr9lgui
info:
  title: Boarding Latam API
  version: v1.08-Draft
servers:
  - url: 'http://localhost:9000'
    description: Generated server url
tags:
x-proxy-name: reference
- name: Application-Controller
    description: Application's data to be boarded
  - name: Terminal-Controller
    description: Application's data to be boarded
paths:
  /api/v1/application:
    post:
      tags:
        - Application-Controller
      description: Saves the whole application data.
      operationId: createApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FullApplicationDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FullApplicationDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '500':
          description: Internal Error.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDto'
  /api/v1/application/data:
    get:
      tags:
        - Application-Controller
      description: Retrieves the data that are needed to fulfill the fields for the request. For each field will be returned the the kind of field and it's type and possible values.
      operationId: retrieveDatafillCombos
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MainInformationRequested'
  '/api/v1/application/data/{countryCode}':
    get:
      tags:
        - Application-Controller
      description: Retrieves the data that are needed to fulfill the fields for the request based on the country where the enterprise is settled. For each field will be returned the the kind of field and it's type and possible values.
      operationId: retrieveDataFulfillCombos
      parameters:
        - name: countryCode
          in: path
          description: ISO-3166 alpha country code for the merchant's bank country.
          required: true
          schema:
            type: string
          example: IRE
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MainInformationRequested'
  '/api/v1/application/{id}':
    get:
      tags:
        - Application-Controller
      description: Retrieves the application's data
      operationId: getApplication
      parameters:
        - name: id
          in: path
          description: Application's ID
          required: true
          schema:
            type: integer
          example: 23462346
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FullApplicationDto'
        '204':
          description: No Content Found for this id
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '500':
          description: Internal Error.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDto'
    put:
      tags:
        - Application-Controller
      description: Updates the whole application data
      operationId: updateApplication
      parameters:
        - name: id
          in: path
          description: Application's ID
          required: true
          schema:
            type: integer
          example: 23462346
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FullApplicationDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FullApplicationDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '422':
          description: Unprocessable Entity. Record not exists.
        '500':
          description: Internal Error.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDto'
  '/api/v1/application/{id}/board':
    post:
      tags:
        - Application-Controller
      description: 'Starts the boarding process. This process is totally asynchronous, and the response will be given by a Message Queue. Please check ''SucessfulResult'' and ''UnsucessfulResult'' for the returned payloads.'
      operationId: startBoarding
      parameters:
        - name: id
          in: path
          description: Application's ID
          required: true
          schema:
            type: integer
          example: 23462346
      responses:
        '202':
          description: 'Boarding process has started. As this process is asynchronous, the response will be get in na MessageQueue. Please check ''SucessfulResult'' and ''UnsucessfulResult'' for the returned payloads.'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '422':
          description: Unprocessable Entity. Record not exists.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '500':
          description: Internal Error.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDto'
  '/api/v1/application/{id}/terminals':
    post:
      operationId: newTerminal
      description: Adds a new terminal to an already boarded application
      tags:
        - Terminal-Controller
      parameters:
        - name: id
          in: path
          description: Application's ID
          required: true
          schema:
            type: integer
          example: 23462346
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenericalTerminalRequest'
        required: true
      responses:
        '200':
          description: 'Boarding process has started. As this process is asynchronous, the response will be get in na MessageQueue. Please check ''SucessfulResult'' and ''UnsucessfulResult'' for the returned payloads.'
          content:
            '*/*':
              schema:
                type: object
                properties:
                  terminal-id:
                    type: integer
                    example: 23436234
                    description: terminal id number to be used on futher calls
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '422':
          description: Unprocessable Entity. Record not exists or application not boarded yet. Details on payload
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDto'
  '/api/v1/application/{applicationId}/terminal/{terminalId}':
    put:
      operationId: updateTerminal
      description: Updates a already boarded terminal
      tags:
        - Terminal-Controller
      parameters:
        - name: applicationId
          in: path
          description: Application's ID
          required: true
          schema:
            type: integer
          example: 23462346
        - name: terminalId
          in: path
          description: Terminal's ID
          required: true
          schema:
            type: integer
          example: 23462346
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenericalTerminalRequest'
        required: true
      responses:
        '202':
          description: 'Boarding process has started. As this process is asynchronous, the response will be get in na MessageQueue. Please check ''SucessfulResult'' and ''UnsucessfulResult'' for the returned payloads.'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '422':
          description: Unprocessable Entity. Record not exists or application not boarded yet. Details on payload
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDto'
    delete:
      operationId: deleteTerminal
      description: Unlinks terminal from the merchant.
      tags:
        - Terminal-Controller
      parameters:
        - name: applicationId
          in: path
          description: Application's ID
          required: true
          schema:
            type: integer
          example: 23462346
        - name: terminalId
          in: path
          description: Terminal's ID
          required: true
          schema:
            type: integer
          example: 23462346
      responses:
        '202':
          description: 'Equipment Unlink process has started. As this process is asynchronous, the response will be get in na MessageQueue. Please check ''SucessfulResult'' and ''UnsucessfulResult'' for the returned payloads.'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '422':
          description: Unprocessable Entity. Record not exists or application not boarded yet. Details on payload
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDto'
  /api/v1/account-fees:
    get:
      tags:
        - Application-Controller
      description: Read the account fee list.
      operationId: getAccountFees
      responses:
        '200':
          description: Boarding process has started
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: object
                  properties:
                    feeModel:
                      type: string
                      example: DEFAULT
                    recordIdNumber:
                      type: string
                      example: '9999999999'
                    clientTariff:
                      type: object
                      properties:
                        clientTariffIndex:
                          type: string
                          example: '513'
                        clientTariffDescription:
                          type: string
                          example: Standard 1
                    accountType:
                      type: object
                      properties:
                        accountTypeIndex:
                          type: string
                          example: '170'
                        accountTypeDescription:
                          type: string
                          example: Paymnt Acct Retail
                    accountCurrencyCode:
                      type: string
                      example: EUR
                    effectiveDate:
                      type: string
                      description: date format YYYYMMDD
                      example: '20200615'
                    expiryDate:
                      type: string
                      description: date format YYYYMMDD
                      example: '99991231'
                    feeMode:
                      type: boolean
                      example: true
                    triggerSource:
                      type: object
                      properties:
                        triggerSourceIndex:
                          type: string
                          example: '200'
                        triggerSourceDescription:
                          type: string
                          example: New Account
                    rule:
                      type: object
                      properties:
                        ruleIDIndex:
                          type: string
                          example: '189'
                        ruleIDDescription:
                          type: string
                          example: Auth Bucket 124
                    triggerHighValue:
                      type: string
                      example: '250'
                    triggerLowValue:
                      type: string
                      example: '0.1'
                    feePercentage:
                      type: string
                      example: '0'
                    feeBaseCurrencyCode:
                      type: string
                      example: EUR
                    feeBase:
                      type: string
                      example: '100'
                    feeMinimum:
                      type: string
                      example: '0'
                    feeMaximum:
                      type: string
                      example: '0'
                    feeType:
                      type: object
                      properties:
                        feeTypeIndex:
                          type: string
                          example: '506'
                        feeTypeDescription:
                          type: string
                          example: Account Startup Fee
        '500':
          description: Internal Error.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDto'
  /api/v1/transaction-charges:
    get:
      tags:
        - Application-Controller
      description: Retrieves the transaction charges
      responses:
        '200':
          description: Boarding process has started
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: object
                  properties:
                    chargeModel:
                      type: string
                      example: DEFAULT
                    recordIdNumber:
                      type: string
                      example: '9999999999'
                    merchantTariff:
                      type: object
                      properties:
                        merchantTariffIndex:
                          type: string
                          example: '287'
                        merchantTariffDescription:
                          type: string
                          example: Standard 5 MCCY
                    chargeType:
                      type: object
                      properties:
                        chargeTypeIndex:
                          type: string
                          example: '2'
                        chargeTypeIndexDescription:
                          type: string
                          example: Commission
                    serviceId:
                      type: object
                      properties:
                        serviceIDIndex:
                          type: string
                          example: '102'
                        serviceIDDescription:
                          type: string
                          example: Acq-Mas
                    transactionType:
                      type: object
                      properties:
                        transactionType:
                          type: string
                          example: '5'
                        transactionTypeDescription:
                          type: string
                          example: Purchase
                    captureMethod:
                      type: object
                      properties:
                        captureMethodIndex:
                          type: string
                          example: '999'
                        captureMethodDescription:
                          type: string
                          example: ALL
                    areaOfEvent:
                      type: object
                      properties:
                        areaOfEventIndex:
                          type: string
                          example: '999'
                        areaOfEventDescription:
                          type: string
                          example: ALL
                    feeCategory:
                      type: object
                      properties:
                        feeCategoryIndex:
                          type: string
                          example: '7'
                        captureMethodDescription:
                          type: string
                          example: feeCategoryIndexDescription
                    effectiveDate:
                      type: string
                      description: date format YYYYMMDD
                      example: '20200615'
                    expiryDate:
                      type: string
                      description: date format YYYYMMDD
                      example: '99991231'
                    feeMode:
                      type: boolean
                      example: true
                    feePercentage:
                      type: string
                      example: '0'
                    feeBase:
                      type: string
                      example: '100'
                    feeMinimum:
                      type: string
                      example: '0'
                    feeMaximum:
                      type: string
                      example: '0'
                    chargeCurrencyCode:
                      type: string
                      example: GBP
                    chargeTierLevel:
                      type: string
                      example: N/a (Default)
                    feeType:
                      type: object
                      properties:
                        feeTypeIndex:
                          type: string
                          example: '832'
                        feeTypeDescription:
                          type: string
                          example: Merchant
                    transactionCurrency:
                      type: string
                      example: All
                    serviceType:
                      type: object
                      properties:
                        cardServiceTypeIndex:
                          type: string
                          example: '1'
                        cardServiceTypeDescription:
                          type: string
                          example: Credit Card
  /api/v1/productsnfeatures:
    get:
      tags:
        - Application-Controller
      description: Retreies the list of products and features.
      operationId: productNFeatures
      responses:
        '202':
          description: Boarding process has started
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: object
                  properties:
                    products:
                      type: array
                      items:
                        type: object
                        properties:
                          equipCode:
                            type: string
                            example: '160130'
                          description:
                            type: string
                            example: LAC Vx680 3G
                          equipClass:
                            type: string
                            enum:
                              - A
                              - B
                          features:
                            type: array
                            items:
                              type: string
                              example: NA_CARD_CODE_VALIDATION
                    features:
                      type: array
                      items:
                        type: object
                        properties:
                          code:
                            type: string
                            example: NA_CARD_VERIF
                          name:
                            type: string
                            example: Card Verification
                          valueType:
                            type: string
                            example: MAP
                          possibleValues:
                            type: object
                            description: 'Object if value type is a MAP, or an array of string if valueType is a LIST'
                            example:
                              '1': Prompt for First Log on
                              '2': Prompt for Every Log on
        '500':
          description: Internal Error.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDto'
  /api/v1/mcc:
    get:
      tags:
        - Application-Controller
      description: Retrieves the list of products and features.
      operationId: mccList
      responses:
        '202':
          description: Boarding process has started
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: object
                  properties:
                    code:
                      type: string
                      example: '742'
                      pattern: '[0-9]{4}'
                    description:
                      type: string
                      example: Veterinary Services
components:
  schemas:
    AccountDto:
      type: object
      required:
        - accountTypeIndex
        - accountCurrencyCode
        - billingLevel
      properties:
        accountTypeIndex:
          maximum: 999
          maxLength: 3
          minLength: 3
          type: integer
          description: Index of the account type to be assigned to the merchant. For a list of valid codes use this API - get /api/v1/application/data
          format: int32
          nullable: true
          example: 170
        accountCurrencyCode:
          maxLength: 3
          minLength: 3
          pattern: '^[a-zA-Z]{3}$'
          type: string
          description: 'ISO 4217 currency of the account selected, possible values are restricted based on the institution configuration. For a list of valid codes use this API - get /api/v1/application/data'
          nullable: true
          example: EUR
        billingLevel:
          type: boolean
          description: Indicates if the account will be settled to on a funding. Billing accounts should have the Bank Account details filled.
          default: false
        receiverCountryCode:
          maxLength: 3
          minLength: 3
          pattern: '^[A-Z]{3}$'
          type: string
          description: ISO-3166 alpha country code for the merchant's bank country. Mandatory if billing level is set to true.
          nullable: true
          example: IRE
        statementTypeIndex:
          maxLength: 3
          minLength: 3
          pattern: '^[0-9]{3}$'
          type: string
          description: Statement type to be generated. As per the predefined values or left blank where not applicable. For a list of valid codes use this API - get /api/v1/application/data
          example: '001'
        statementGenerationCode:
          type: string
          description: Option for statement generation.
          nullable: true
          example: SUPPRESS
          default: GENERATE_IF_ACTIVITY
          enum:
            - SUPPRESS
            - GENERATE
            - GENERATE_IF_ACTIVITY
            - GENERATE_IF_NO_ACTIVITY
        annualFeeDueDate:
          pattern: '^([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])$'
          type: string
          description: YYYYMMDD Date which the annual fee for this account should be generated
          format: date
        calendarTypeIndex:
          maxLength: 3
          minLength: 3
          pattern: '^[0-9]{3}$'
          type: string
          description: Defines the scheme exception days when calculating the funding date of merchant payments. As per the institution configuration. For a list of valid codes use this API - get /api/v1/application/data
          example: '001'
        paymentReference:
          maxLength: 18
          pattern: '^[0-9a-zA-Z]{0,18}$'
          type: string
          description: For institutions using IFS funding file this field should contain the direct debit contract number (required for merchant debits). For others it is a reference text to display on merchant's bank statement if supported on the funding file.
          nullable: true
          example: '999999999999999999'
        payable:
          $ref: '#/components/schemas/PayableDto'
        receivable:
          $ref: '#/components/schemas/ReceivableDto'
    AddressDto:
      type: object
      required:
        - categoryIndex
        - groupSpecific
        - line1
        - city
        - countryCode
        - deliveryMethodIndex
      properties:
        categoryIndex:
          maxLength: 3
          minLength: 0
          pattern: '^[0-9]{3}$'
          type: string
          description: 'The category of the address to be added. It can be a mandatoryor optional category, defined per Institution. For a list of valid codes use this API - get /api/v1/application/data'
          nullable: true
          example: '001'
        contactName:
          maxLength: 35
          minLength: 0
          type: string
          description: The contact name at the address location. Any extended ASCII characters contains 2 bytes
          nullable: true
          example: Joe Smith
        groupSpecific:
          type: boolean
          description: Only applicable if a merchant is in a hierarchy. Indicates if the address is to be used for all merchants within the group.
          nullable: true
          example: false
        line1:
          maxLength: 35
          minLength: 0
          type: string
          description: Merchant address line 1 for the specified address category.
          nullable: true
          example: 15 Beach Street
        line2:
          maxLength: 35
          minLength: 0
          type: string
          description: Merchant address line 2 for the specified address category.
          nullable: true
          example: 4th Zone
        line3:
          maxLength: 35
          minLength: 0
          type: string
          description: Merchant address line 3 for the specified address category.
          nullable: true
          example: Bremen
        line4:
          maxLength: 35
          minLength: 0
          type: string
          description: Merchant address line 4 for the specified address category.
          nullable: true
          example: Saxony
        line5:
          maxLength: 35
          minLength: 0
          type: string
          description: Merchant address line 5 for the specified address category.
          nullable: true
          example: Ireland
        postCode:
          maxLength: 20
          minLength: 0
          type: string
          description: Merchant address post code or zip code for the specified address category.
          example: D18 R219
        city:
          maxLength: 35
          minLength: 0
          type: string
          description: Merchant city for the specified address category.
          example: Frankfurt
        state:
          maxLength: 3
          minLength: 0
          type: string
          description: Merchant state for the specified address category.
          example: TX2
        countryCode:
          maxLength: 3
          minLength: 3
          pattern: '^[A-Z]{3}$'
          type: string
          description: 'ISO-3166 alpha country code representing the country the address category is located in, the values are restricted based on institutions configuration. For a list of valid codes use this API - get /api/v1/application/data'
          nullable: true
          example: IRE
        telephone:
          maxLength: 15
          minLength: 0
          pattern: '^[a-zA-Z0-9_ \.\-\,]{0,15}$'
          type: string
          description: Telephone at the specified address category
          nullable: true
          example: '00353112345678'
        fax:
          maxLength: 15
          minLength: 0
          pattern: '^[a-zA-Z0-9_ \.\-\,]{0,15}$'
          type: string
          description: Fax at the specified address category
          nullable: true
          example: '005351456789'
        deliveryMethodIndex:
          maxLength: 3
          minLength: 3
          pattern: '^[0-9]{3}$'
          type: string
          description: 'Delivery method code of correspondence to this address; however, it is dependent on the delivery solutions in place for the given institution. For a list of valid codes use this API - get /api/v1/application/data'
          nullable: true
          example: '200'
        email:
          maxLength: 60
          pattern: '^([a-zA-Z0-9_\-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$'
          type: string
          description: Email address (with extended length capacity) for the specified address category
          example: abc@omnipay.com
        effectiveDate:
          maxLength: 8
          minLength: 8
          pattern: "^([0-9]{4})(-?)(1[0-2]|0[1-9])\x02(3[01]|0[1-9]|[12][0-9])$"
          type: string
          description: Effective date of the address. When selecting address information the Omnipay platform will select the most recent effective address. For auditing reasons merchant address can not be deleted after it has become effective hence the use of effective dates for addresses. Format YYYYMMDD. If ommited the default is the current instituiton posting date.
          format: date
          nullable: true
    ApplicationStatusEnum:
      type: string
      description: |-
        * IN_PROGRESS - The application has an ID generated. Some information is saved, but not been applied yet
        * CANCELED - This application has been canceled by the user
        * REJECTED - Rejected during user review.
        * APPROVED - Approved during review.
        * PENDING_TERMINAL_CONFIRMATION - Waiting for terminal response (asynchronous)
        * REJECTED_PRE_BOARDING - Rejected on omnipay's pre-boarding
        * SUCCESSFUL_PROCESSED - Has been successfully processed
        * FAIL_PROCESSED - Has been processed, but has failed
      readOnly: true
      enum:
        - IN_PROGRESS
        - CANCELED
        - REJECTED
        - APPROVED
        - PENDING_TERMINAL_CONFIRMATION
        - REJECTED_PRE_BOARDING
        - SUCCESSFUL_PROCESSED
        - FAIL_PROCESSED
    ConfigFeature:
      type: object
      properties:
        code:
          type: string
          description: Feature code
        name:
          type: string
          description: Feature name
        valueType:
          type: string
          enum:
            - MAP
            - LIST
            - TEXT
            - NUMBER
            - BOOLEAN
            - DATE
          description: Feature value type
        possibleValues:
          type: object
          description: Possible values for the feature. May be a list (if valueType==LIST) or object (valueType==MAP)
        defaultValue:
          type: object
          description: Default value for this feature
        min:
          type: number
          description: Min value (included)
        max:
          type: number
          description: Max value (included)
        maxLength:
          type: number
          description: Maximum length for a string property
        pattern:
          type: string
          description: Regex validation pattern
    ConfigProduct:
      type: object
      properties:
        equipCode:
          type: string
        description:
          type: string
        equipClass:
          type: string
        features:
          type: array
          items:
            type: string
          description: List of feature codes related to this product.
    ContractDto:
      type: object
      required:
        - clientTariffIndex
        - postingTariffIndex
        - settlementMethodIndex
        - protectAgainstFXChange
        - clientRegionIndex
      properties:
        serviceContractIndex:
          maxLength: 3
          minLength: 3
          pattern: '^[0-9]{3}$'
          type: string
          description: The service contract defines the processing rules for a merchant.
          readOnly: true
          example: '497'
        clientTariffIndex:
          maxLength: 6
          pattern: '^[0-9]{0,6}$'
          type: string
          description: The client tariff determines the set of account fees applicable to the merchant. For a list of valid codes use this API - get /api/v1/application/data
          nullable: true
          example: '321'
        postingTariffIndex:
          maxLength: 3
          minLength: 3
          pattern: '^[0-9]{3}$'
          type: string
          description: The posting tariff determines how transactions and fees are posted to the merchant accounts. For a list of valid codes use this API - get /api/v1/application/data
          nullable: true
          example: '503'
        settlementMethodIndex:
          maxLength: 3
          minLength: 3
          pattern: '^[0-9]{3}$'
          type: string
          description: The settlement method defines the frequency and grouping of transactions posted to makeup a payment as well as the funding channel. For a list of valid codes use this API - get /api/v1/application/data
          nullable: true
          example: '179'
        paymentMethodIndex:
          maxLength: 3
          minLength: 3
          pattern: '^[0-9]{3}$'
          type: string
          description: Institution defined value related to a specific payment interface. Default to spaces when no values provided. For a list of valid codes use this API - get /api/v1/application/data.
          nullable: true
          example: '043'
        protectAgainstFXChange:
          type: boolean
          description: Flag to indicate if the merchant is protected against currency fluctuations on the event the transaction is disputed and the transaction currency is different to the merchant funding currency.
        clientRegionIndex:
          maxLength: 3
          minLength: 3
          pattern: '^[0-9]{3}$'
          type: string
          description: The selected client region will determine how the transactions are settled to the scheme. For a list of valid codes use Acquirer Profile API get reference_data end-point with query parameter classification equal to clientRegionIndex.
          nullable: true
          example: '901'
        tierStructureIndex:
          maxLength: 3
          pattern: '^[0-9]{0,3}$'
          type: string
          description: 'If tier pricing is active on the institutions this field indicates which is the Tier Structure assigned to the merchant, if not in use for the institution use 000=N/A for this field. For a list of valid codes use this API - get /api/v1/application/data'
          nullable: true
          example: '1'
        reclassBillbackIndicatorCode:
          type: string
          description: Indicator to pass the Reclass fee to the merchant. Reclass Fees can only be passed to the merchant when configured for the Institution.
          nullable: true
          example: NA
          default: NA
          enum:
            - NA
            - NO_BILLBACK
            - AUT_BILLBACK_DR
            - AUT_BILLBACK_ALL
            - MANUAL_BILLBACK
        withholdIncomeTariffIndex:
          maxLength: 6
          minLength: 6
          pattern: '^[0-9]{6}$'
          type: string
          description: The withhold income tariff id for the institution. For a list of valid codes use this API - get /api/v1/application/data
          nullable: true
          example: '001007'
        withholdVatTariffIndex:
          maxLength: 6
          minLength: 6
          pattern: '^[0-9]{6}$'
          type: string
          description: The withhold vat tariff id for the institution. For a list of valid codes use this API - get /api/v1/application/data
          nullable: true
          example: '001007'
        regionalTaxIndex:
          maxLength: 3
          pattern: '^[0-9]{0,3}$'
          type: string
          description: Indicator if regional tax to be generated or not
          nullable: true
          example: '1'
    ErrorDto:
      type: object
      properties:
        statusCode:
          type: string
        statusMessage:
          type: string
        errorType:
          type: string
        requestPath:
          type: string
        errors:
          type: array
          items:
            type: object
    TrnsDtoInternal:
      type: object
      required:
        - rqdtBlockDeployment
        - rqdtDeployable
        - equipRecords
        - '@type'
      properties:
        '@type':
          type: string
          description: '"TPFP01" for using this type. Please check with internal team the type you should use'
        rqdtAccountType:
          type: string
          description: Account types supported for boarding fresh equipment
          nullable: true
          example: '[ NEW_ACCOUNT, ADDITIONAL, EQUIPMENT ]'
          enum:
            - NEW_ACCONT
            - ADDITINAL
            - EQUIPMENT
        rqdtAltPhoneNumber:
          description: Alternate phone number in which the FD helpdesk/deployment group will talk to the merchant
          maxLength: 10
          minLength: 0
          type: string
          example: '2482240072'
        rqdtAmexSettle:
          description: 'Where Amex transaction for terminals to be settled. A – ''Auth Only- Through EDC'', B – ''EDC- Capture and Auth'', C – ''Split Dial- Amex Auth'', D – ''Single Settle- Amex Set'', F – ''Amex Pip'''
          type: string
          enum:
            - A
            - B
            - C
            - D
            - F
        rqdtBestContactStartTime:
          type: string
          description: 'Holds information that tells the best time to contact the merchant. Time in 24:00 format'
          nullable: true
          example: '14:40'
        rqdtBestContactStopTime:
          type: string
          description: 'Holds information that tells the time after which the merchant won’t take any helpdesk call. Time in 24:00 format'
          nullable: true
          example: '17:00'
        rqdtBlockAutoRouting:
          type: string
          description: Identifier whether auto routing request to TASQ to be blocked or not. Auto-routing means where deployment group intervention does not require transferring the order to TASQ. Not null value will block auto routing
          example: PC CHARGE
        rqdtBlockDeployment:
          type: string
          maxLength: 10
        rqdtBlockDeploymentReason:
          type: string
        rqdtDeployable:
          maxLength: 10
          type: string
        deploymentInd:
          maxLength: 1
          type: string
          description: 'Deployment parameter for deployable/Log request to be created at POS. L –- ''Log request’, D – ‘Deployable TASQ Request’'
          example: L
          enum:
            - L
            - D
        rqdtExternalOrderId:
          type: string
          description: if source system is having any order id associated with the request
          nullable: true
          example: CMS2398614
        rqdtInstallComments:
          type: string
          description: Installation comments if any to be referred to by deployment group or FD helpdesk
          nullable: true
          example: 'IC VERIFY INSTALL AND TRAINING, SPEAKS VERY GOOD ENGLISH WITH JAPANESE ACCENT, PURCH POS REST 10 MONTH, FD200TI C/O'
        rqdtInstallContact:
          type: string
          description: Name of the person if any to be referred to by deployment group or FD helpdesk for setting up the terminal
          nullable: true
          example: TOM GLASHEEN
        rqdtKeyedBy:
          maxLength: 30
          minLength: 0
          type: string
          description: 'User name who is actually using this service from source system. Actual user id/Username of originating system. In case if this service is being used by any batch job or process, send ‘XXXXXSYS’'
          nullable: true
          example: '118380'
        rqdtLanguagePreference:
          maxLength: 3
          minLength: 0
          type: string
          description: Language in which the FD helpdesk/deployment group will talk with the merchant. The merchant is proficient with this language. Three letter codes in ISO standard
          nullable: true
          example: ENG
        rqdtSalesRepId:
          type: string
          description: Holds the salesman Representative Id from which the equipment data is keyed into the system
          nullable: true
          example: BREY
        rqdtSalesRegion:
          type: string
          description: Holds the salesman region from which the equipment data is keyed into system
          nullable: true
          example: BOA
        rqdtShipAttention:
          maxLength: 24
          minLength: 0
          type: string
          description: 'Any wording which will get attention during shipping. Any wording in 24 characters, Mandatory Order needs to be shipped to different address than Merchant address'
          nullable: true
        rqdtShipCity:
          maxLength: 24
          minLength: 0
          type: string
          description: 'Shipping city name. Any wording in 24 characters, Mandatory Order needs to be shipped to different address than Merchant address'
          nullable: true
          example: CORALSPRINGS
        rqdtShipName:
          maxLength: 24
          minLength: 0
          type: string
          description: 'Name to be displayed. Any wording in 24 characters, Mandatory Order needs to be shipped to different address than Merchant address'
          nullable: true
        rqdtShipState:
          maxLength: 2
          minLength: 0
          type: string
          description: 'Shipping state name. ISO standard state code, FL, MD etc. Mandatory Order needs to be shipped to different address than Merchant address'
          nullable: true
          example: FL
        rqdtShipStreet:
          maxLength: 40
          minLength: 0
          type: string
          description: 'Shipping street name. Any wording in 40 characters, Mandatory Order needs to be shipped to different address than Merchant address'
          nullable: true
          example: 4000 CORAL RIDGE DRIVE
        rqdtShipStreet2:
          maxLength: 24
          minLength: 0
          type: string
        rqdtShipTo:
          type: string
          description: Express where to ship in 6 character. Mandatory Order needs to be shipped to different address than Merchant address.
          enum:
            - OTHER
            - NOSHIP
            - OUTLET
            - DO_NOT
            - BILLTO
        rqdtShipZip:
          maxLength: 9
          minLength: 0
          type: string
          description: Shipping zip code. Mandatory Order needs to be shipped to different address than Merchant address
          nullable: true
          example: '33065'
        rqdtTrainingBestTime:
          type: string
          description: 'Holds information that tells the best time to start training. Time in 24:00 format'
          nullable: true
          example: '08:00'
        rqdtTrainingInd:
          type: string
          description: 'Holds flag that determines whether the merchant needs training or not. X – ''No Training Needed'', I – ''Installer Will Train'', N – ''MAG Will Train'', Y – ''Sales Rep Will Train'''
          nullable: true
          example: X
          enum:
            - X
            - I
            - 'N'
            - 'Y'
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/TrnsEquipamentParameterDtoInternal'
        equipRecords:
          type: array
          items:
            $ref: '#/components/schemas/TrnsEquipRecordDtoInternal'
    TrnsEquipParamItensDto:
      type: object
      properties:
        key:
          maxLength: 100
          minLength: 0
          type: string
        text:
          maxLength: 4000
          minLength: 0
          type: string
    TrnsEquipRecordDtoInternal:
      type: object
      required:
        - refId
      properties:
        refId:
          type: string
          description: Unique identificator. Used for referencing by other structures.
          pattern: '^[A-Za-z0-9\-]{0,15}$'
        appBusinessType:
          maxLength: 1
          type: string
          nullable: true
          default: R
          description: 'Business types supported by the system. When not passed, it is derived based on mcc code and defaulted to R if unable to derive through mcc code.'
          enum:
            - R
            - S
            - L
            - C
            - M
            - O
            - P
            - Q
        appNetwork:
          maxLength: 5
          minLength: 0
          type: string
          nullable: true
          description: Frontend network where terminal needs to be mapped
          enum:
            - AMEX
            - ASE
            - B24
            - BOH
            - BUYP
            - CDC
            - CKRT
            - CMPS
            - COMD
            - DEBT
            - DWLD
            - EBG
            - EDS
            - ETC
            - EXCG
            - FCC
            - FDCC
            - FDCN
            - GNSR
            - JBS
            - JCB
            - MAG
            - MAPP
            - MDI
            - NBS
            - NDC
            - NOVA
            - PAPR
            - PNSF
            - PNSN
            - RBC
            - S/88
            - SPS
            - TCD
            - TEL
            - TNET
            - TSYS
            - TTI
            - TYM
            - UNK
            - UPPS
            - VNET
            - WLLS
        billMethod:
          maxLength: 2
          minLength: 0
          type: string
          nullable: true
          description: Bill method with which the equipment will be created
          enum:
            - CO
            - IP
            - L
            - LR
            - M
            - R
            - RS
            - SR
        bundleInd:
          maxLength: 16
          minLength: 0
          type: string
          nullable: true
          description: To indicate whether multiple equipment will be bundled together through TASQ for delivery or not. If specified bundle Indicator is same for more than one equipment and if previous equipment is not shipped yet in that case all those equipment will be delivered altogether
          enum:
            - 72-0001
            - 75-0001
        charge:
          type: integer
          format: int32
          description: 'Charge in place for client resale/monthly rental and others. If not sent, charged as ZERO'
          example: 12
        commerceHubTid:
          maxLength: 30
          minLength: 0
          type: string
          nullable: true
          description: If the Terminal exists in Commerce Hub then the sustem need to receive the Commerce Hub TID here
          example: L356225315001
        duration:
          maxLength: 38
          minLength: 0
          type: string
          nullable: true
        equipCode:
          maxLength: 6
          minLength: 0
          type: string
          nullable: true
          example: '941402'
          description: Refers to the 4 digit equip code. For a list of valid codes use this API - /api/v1/productsnfeatures
        features:
          type: array
          items:
            $ref: '#/components/schemas/TrnsEquipRecordFeatDto'
        externalTerminalId:
          maxLength: 30
          minLength: 0
          type: string
          nullable: true
          description: 'If originating system is having any terminal related unique number, then that can be sent via this field'
          example: L356225315001
        leaseTerm:
          maxLength: 4
          type: integer
          format: int32
          nullable: true
          description: Lease term for an equipment which is on Lease. LeaseTerm and PurchaseDuration should not be set together
          enum:
            - 12
            - 24
            - 27
            - 36
            - 48
            - 60
        maintenanceBy:
          maxLength: 6
          minLength: 0
          type: string
          nullable: true
        merchantNumber:
          maxLength: 16
          minLength: 0
          type: string
          description: It refers to the backend MID. Currently supports North and Omaha backend MID
          nullable: true
        purchaseDuration:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
          description: Applicable for Installment purchase. LeaseTerm and PurchaseDuration should not be set together
          example: '1'
        quantity:
          type: integer
          format: int32
        salesRepId:
          maxLength: 40
          minLength: 0
          type: string
          nullable: true
          description: Holds the salesman Representative Id from which the equipment data is keyed into the system.
          example: BREY
        securityServiceLevel:
          maxLength: 255
          minLength: 0
          type: string
          nullable: true
        serialNumber:
          maxLength: 20
          minLength: 0
          type: string
          nullable: true
          description: The system receives serial number from boarding systems if any
          example: 6418-3066-3430-48FF
        sourceSysEquipRecordId:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
          description: This field holds the Unique ID from source system (if applicable) for any equipment. Main purpose of this field is to return this ID back to source system through event notifications so they can cross reference the event related equipment within the source system
        startBillingDate:
          type: string
          format: date
          description: Billing start date for Installment purchase/ Client Resale
          pattern: '^(2[0-9]{3})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))$'
        stopBillingDate:
          type: string
          format: date
          description: Billing stop date for Installment purchase/ Client Resale
          pattern: '^(2[0-9]{3})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))$'
    TrnsEquipRecordFeatDto:
      type: object
      properties:
        code:
          maxLength: 50
          type: string
          nullable: true
          description: The feature code. For a list of valid codes use this API - /api/v1/productsnfeatures
        text:
          maxLength: 50
          type: string
          nullable: true
          description: The feature value. For a list of valid values for this field use this API - /api/v1/productsnfeatures
    TrnsEquipamentParameterDtoInternal:
      type: object
      properties:
        name:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/TrnsEquipParamItensDto'
    FullApplicationDto:
      type: object
      required:
        - main
        - terminal-processing
      properties:
        main:
          $ref: '#/components/schemas/Main'
        terminal-processing:
          oneOf:
            - $ref: '#/components/schemas/GenericalTerminalRequest'
            - $ref: '#/components/schemas/TrnsDtoInternal'
          discriminator:
            propertyName: '@type'
        e-store:
          $ref: '#/components/schemas/EStoreDtoInternal'
      description: All data related to omnipay
    HierarchyDto:
      type: object
      required:
        - merchantLevelCode
      properties:
        internalMerchantId:
          pattern: '^[0-9]{8}$'
          type: string
          description: 'Unique merchant number to assign to the new merchant, this number will be generated by the API.'
          example: '00000099'
          readOnly: true
        merchantLevelCode:
          type: string
          description: The hierarchy level at which the merchant will be boarded.
          example: MEMBER
          enum:
            - GROUP
            - SUB_GROUP
            - MEMBER
        parentInternalMerchantId:
          pattern: '^[0-9]{8}$'
          type: string
          description: 'The internal OmniPay MID to which the merchant needs to be linked to as a child merchant. When populated should be an existing group /sub group merchant MID, if omitted the default is the institution number.'
          example: '00000100'
      description: Hierarchy data
    EStoreAdminDto:
      type: object
      properties:
        userId:
          type: string
          maxLength: 255
        password:
          type: string
          maxLength: 32
        certificatePassword:
          type: string
          maxLength: 32
        certificateId:
          type: string
          maxLength: 50
    EStoreDtoInternal:
      type: object
      required:
        - stReseller
        - stDefaultCurrency
        - stTimezone
        - stStatus
        - stAcquirer
      properties:
        mercUserId:
          type: string
          description: Database user id (in case of creating the store this user id will be used for the new user in the new store)
        mercUserPassword:
          type: string
          description: user password
          maxLength: 32
        mercUserCertificatePassword:
          type: string
          maxLength: 32
          description: certificate password
        mercUserCertificateId:
          type: string
          maxLength: 50
          description: Reference to the certificate content (located in mcsResponse/certificates). This element is used only in response if certificateDeliveryMethod is set to MCSRESPONSE
        stReseller:
          type: string
          maxLength: 50
          description: Reseller name as defined in the our system's Database. Please contact your support team to obtain list of resellers.
        stEmail:
          type: string
          maxLength: 100
          description: store email address.
        stUrl:
          type: string
          description: 'store url addrress - (e.g. https://www.webshop.com)'
          maxLength: 100
          example: 'https://www.webshop.com'
        stDefaultCurrency:
          type: integer
          format: int32
          description: ISO Alpha code of the default currency.
        stTimezone:
          type: string
          description: 'Timezone code (e.g. ''Europe/London'', ''Europe/Berlin'', ''Brazil/West'')'
          maxLength: 50
          example: Brazil/West
        stStatus:
          type: string
          example: OPEN
          description: 'Actual status of the store (e.g. OPEN,CLOSED)'
          enum:
            - OPEN
            - CLOSED
        stOpenDate:
          type: string
          format: date
          description: Open date of the store
        stCloseDate:
          type: string
          format: date
          description: Close date of the store
        stAcquirer:
          type: string
          maxLength: 32
          description: 'Acquirer 3dsecure configuration name, e.g. ''Dummy'' if 3dsecure is not relevant or in test environments. Please obtain list of names from your support team.'
        certificateDeliveryMethod:
          type: string
          maxLength: 256
        stFsBinBlockProfile:
          type: integer
          format: int32
          maximum: 99
          minimum: 0
          description: '1 - Germany 2 - Germany, Austria, Switzerland 3 - Ireland 4 - Greece 5 - Italy 6 - Italy, Switzerland 7 - United Kingdom 8 - United Kingdom, Ireland 9 - Austria, Belgium, Denmark, Finland, France, Germany, Ireland, Italy, Netherlands, Norway, Portugal, Spain, Sweden, Switzerland, United Kingdom, Greece 10 - Above countries + Australia, Canada, New Zealand, Japan, USA 11 - All countries except  Bulgaria, Cameroon, Egypt, Gambia, Ghana, Indonesia, Iran, Israel, Lithuania, Malaysia, Morocco, Nigeria, Pakistan, Romania, Russia, Turkey, Ukraine , Vietnam 99 - All countries Mind this will be changed soon to support also profile sets of other regions'
        stFsCheckBlockedIp:
          maxLength: 1
          minLength: 0
          type: string
          description: Logical value which determine if blocked IP check should be evaluated. In this check you can choose to block certain IP addresses from purchasing at your store. Anyone visiting your site from that IP address will not be able to purchase at your online store.
        stFsCheckBlockedClassC:
          maxLength: 1
          minLength: 0
          type: string
          description: Logical value which determine if blocked class-C check should be evaluated. In this check you can choose to block certain class C addresses from purchasing at your store. Anyone visiting your site from that class C address will not be able to purchase at your online store.
        stFsCheckBlockedName:
          maxLength: 1
          minLength: 0
          type: string
          description: Logical value which determine if blocked name check should be evaluated. In this check you can choose to block certain person's names from purchasing at your store. Anyone visiting your site with that name will not be able to purchase at your online store.
        stFsCheckBlockedCard:
          maxLength: 1
          minLength: 0
          type: string
          description: Logical value which determine if blocked card check should be evaluated. In this check you can choose to block certain card numbers from purchasing at your store. Those card numbers will be prohibited from buying at your online store.
        stFsBinBlockCustProfile:
          type: integer
          format: int32
          description: Number value of the bin block profile. Could be one of the following 1 - IMS 2 - IMS 3 - IMS 4 - IMS 5 - IMS 6 - IMS 7 - IMS 8 - IMS 9 - TELECASH Mind this may change soon to support different resllers.
        stFsDuplLockoutTimeSecs:
          type: integer
          format: int32
          description: Amount of time in seconds for duplicate lockout. You can choose how long a duplicate transaction will continue to be blocked. No duplicate orders will be approved until the lock out time has expired.
        stFsAutoLockoutTimeSecs:
          type: integer
          format: int32
          description: 'Amount of time in seconds for auto lockout. You can choose how long any automatically blocked transaction will continue to be blocked. No orders from that blocked name (or card, Domain, IP, or Class C address) will be approved until the lock out time has expired.'
        serviceFeatures:
          type: array
          items:
            $ref: '#/components/schemas/EStoreServiceFeaturesDto'
        purchaseLimits:
          type: array
          items:
            $ref: '#/components/schemas/EStorePurchaseLimitsDto'
        admin:
          $ref: '#/components/schemas/EStoreAdminDto'
        terminals:
          type: array
          description: Terminals list
          items:
            $ref: '#/components/schemas/EStoreTerminalsDto'
    EStorePurchaseLimitsDto:
      type: object
      properties:
        currency:
          type: string
          description: Currency ISO Alpha code
          maxLength: 3
          minLength: 3
          pattern: '^[a-zA-Z]{3}$'
          nullable: true
          example: EUR
        limit:
          type: integer
          format: int32
          description: Numeric limit of the purchase (must be positive number)
    EStoreServiceFeaturesDto:
      type: object
      properties:
        type:
          type: string
        config:
          type: array
          items:
            properties:
              item:
                type: string
                maxLength: 50
                description: 'Item type - e.g. allowMOTO, allowVoid, Mastercard, payPalBrandname. Please obtain list of eligible serviceConfigs from your support team.'
              value:
                type: string
                description: Specified value for given item type
                maxLength: 1024
    EStoreTerminalsDto:
      type: object
      properties:
        terminalRef:
          type: string
          description: Links to the equipRecord (from 'terminal-processing') with this refId.
          pattern: '^[A-Za-z0-9\-]{0,15}$'
        endpointId:
          type: string
          maxLength: 100
          description: Database endpoint id representing the remote system where our system will send transaction requests to.
        paymentMethod:
          type: array
          items:
            type: string
            enum:
              - AMEX
              - BCMC
              - CUP
              - DINERSCLUB
              - JCB
              - MASTERCARD
              - VISA
              - DEBITDE
              - MAESTRO
              - MEXICOLOCAL
              - DIREKT
              - GIROPAY
              - PAYPAL
              - MOBILETOPUP
              - SOFORT
              - IDEAL
              - KLARNA
              - CABAL
              - SOROCRED
              - IKEA
              - AMEX
              - BCMC
              - CUP
              - DINERSCLUB
              - JCB
              - MASTERCARD
              - VISA
              - DEBITDE
              - MAESTRO
              - MEXICOLOCAL
              - DIREKT
              - GIROPAY
              - PAYPAL
              - MOBILETOPUP
              - SOFORT
              - IDEAL
              - KLARNA
              - CABAL
              - SOROCRED
              - IKEA
            example: CUP
          example:
            - MASTERCARD
            - AMEX
        transactionOrigin:
          type: array
          example:
            - ECI
            - MOTO
          items:
            type: string
            example: ECI
            enum:
              - ECI
              - MOTO
              - RETAIL
        submissionComponent:
          type: array
          example:
            - API
            - VT
          items:
            type: string
            example: API
            enum:
              - API
              - CONNECT
              - VT
              - EPAS
        payerSecurityLevel:
          type: array
          description: 'in most cases both should be set. Only if 3dsecure traffic needs to be processed by diferent terminal, than only one of the two should be selected'
          example:
            - EMPTY
          items:
            type: string
            example: NOT_EMPTY
            enum:
              - EMPTY
              - NOT_EMPTY
        currency:
          type: array
          description: Currency Alpha ISO code supported by terminal
          items:
            type: string
            maxLength: 3
            minLength: 0
            pattern: '[A-Z]{3}|\d{3}'
            example: EUR
        active:
          type: boolean
        correlationId:
          type: string
          maxLength: 256
          description: 'Unique identifier for this terminal element. Used for pairing terminal elements between request and response. When creating a new store, terminal ID can be assigned by ouy system and correlation ID is used for easy request-resposne terminal pairing. This ID is not stored or processed, it''s only copied to this terminal element in the response.'
        terminalStatusCode:
          type: string
          enum:
            - ONLINE
            - CERTIFICATE_REVOKED
            - ONLINE
            - CERTIFICATE_REVOKED
    LocationDto:
      type: object
      required:
        - countryCode
        - cityName
      properties:
        countryCode:
          maxLength: 3
          minLength: 3
          pattern: '^[A-Z]{3}$'
          type: string
          description: 'ISO-3166 alpha country code representing the country the merchant is located in, the values are restricted based on institutions configuration. For a list of valid codes use Acquirer Profile API get reference_data end-point with query parameter classification equal to countryCode.'
          nullable: true
          example: IRE
        state:
          maxLength: 3
          minLength: 0
          type: string
          description: 'Code representing the state the merchant is located in. If the country selected is United States, Canada or Italy, this field is mandatory.'
          nullable: true
          example: MYS
        cityName:
          maxLength: 13
          minLength: 0
          type: string
          description: Merchant city
          nullable: true
          example: Paris
        zip:
          maxLength: 11
          minLength: 0
          type: string
          description: Merchant zip/postcode
          nullable: true
          example: D18 R529
        street:
          maxLength: 40
          minLength: 0
          type: string
          description: Merchant street
          nullable: true
          example: Rue Raynouard 24
        serviceTelNo:
          maxLength: 16
          minLength: 0
          pattern: '^[0-9]{0,16}$'
          type: string
          description: Merchant service telephone number
          nullable: true
          example: '0123456789111'
        countyIndex:
          maxLength: 3
          pattern: '^[0-9]{0,3}$'
          type: string
          description: County id where the merchant is located. As per Institution configuration. For a list of valid codes use this API - get /api/v1/application/data.
          nullable: true
          example: '840'
        municipalityIndex:
          maxLength: 5
          minLength: 0
          pattern: '^[0-9]{0,5}$'
          type: string
          description: County id where the merchant is located. As per Institution configuration. For a list of valid codes use this API - get /api/v1/application/data.
          nullable: true
          example: '80'
    Main:
      required:
        - requiredDetails
        - hierarchy
        - contract
        - location
        - addresses
        - accounts
      type: object
      properties:
        applicationId:
          minimum: 1
          type: integer
          description: Application identification. Returned on the API after first save.
          readOnly: true
          example: 123
        applicationStatus:
          $ref: '#/components/schemas/ApplicationStatusEnum'
        insertDate:
          type: string
          description: Date this information was first saved
          format: date
          readOnly: true
        lastUpdate:
          type: string
          description: Last update date
          format: date
          readOnly: true
        creationUser:
          type: string
          description: User whom created (first saved) this information
          readOnly: true
        updateUser:
          type: string
          description: Last user to update this data
          readOnly: true
        hierarchy:
          $ref: '#/components/schemas/HierarchyDto'
        requiredDetails:
          $ref: '#/components/schemas/RequiredDetailsDto'
        optionalDetails:
          $ref: '#/components/schemas/OptionalDetailsDto'
        contract:
          $ref: '#/components/schemas/ContractDto'
        location:
          $ref: '#/components/schemas/LocationDto'
        schemeDetails:
          $ref: '#/components/schemas/SchemeDetailsDto'
        salesDetails:
          $ref: '#/components/schemas/SalesDetailsDto'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/AddressDto'
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/AccountDto'
        services:
          type: array
          items:
            $ref: '#/components/schemas/ServiceDto'
        references:
          type: array
          items:
            $ref: '#/components/schemas/ReferencesDto'
        merchantDevices:
          type: array
          items:
            $ref: '#/components/schemas/MerchantDeviceDto'
        merchantAccountFees:
          type: array
          items:
            $ref: '#/components/schemas/MerchantAccountFeeDto'
        transactionCharges:
          type: array
          items:
            $ref: '#/components/schemas/TransactionChargesDto'
        merchantRequest:
          type: array
          items:
            $ref: '#/components/schemas/MerchantRequestDto'
        paymentInstructions:
          type: array
          items:
            $ref: '#/components/schemas/PaymentInstructionDto'
    MainInformationRequested:
      type: object
      properties:
        fieldsAndValues:
          type: array
          items:
            type: object
            properties:
              structure:
                type: string
                description: Indicates the structure where you will find the fieldName
                example: main.requiredDetails
              fieldName:
                type: string
                description: With the 'structure' field helps you identify to which field this information is related to.
                example: languageIndex
              valueType:
                type: string
                enum:
                  - MAP
                  - LIST
                  - TEXT
                  - NUMBER
                  - BOOLEAN
                  - DATE
                description: Feature value type
              possibleValues:
                type: object
                description: Possible values for the feature. May be a list (if valueType==LIST) or object (valueType==MAP)
              defaultValue:
                type: object
                description: Default value for this feature
              min:
                type: number
                description: Min value (included)
              max:
                type: number
                description: Max value (included)
              maxLength:
                type: number
                description: Maximum length for a string property
              pattern:
                type: string
                description: Regex validation pattern
    FullInformationRequested:
      type: object
      properties:
        featuresNProducts:
          type: object
          properties:
            products:
              type: array
              items:
                $ref: '#/components/schemas/ConfigProduct'
            features:
              type: array
              items:
                $ref: '#/components/schemas/ConfigFeature'
    MerchantAccountFeeDto:
      type: object
      required:
        - recordIdNumber
      properties:
        recordIdNumber:
          maxLength: 10
          minLength: 0
          pattern: '^[0-9]{10,10}$'
          type: string
          description: Record id of the client account fee to be overwritten. The corresponding id should belong to the client tariff id selected on the merchant contract details. For a list of valid codes use this API - get /api/v1/account-fees
          nullable: true
          example: '9999999999'
        feePercentage:
          pattern: '^[0-9\.]{0,11}$'
          type: string
          description: Fee percentage to be applied. Valid value as per the Format NNNNNN.NNNN
          nullable: true
          example: '5.0'
          default: '0.0000'
        feeBase:
          maxLength: 11
          minLength: 0
          pattern: '^[0-9\.]{0,11}$'
          type: string
          description: Fee base to be applied. Valid value as per the Format NNNNNN.NNNN
          nullable: true
          example: '100.0'
          default: '0.0000'
        feeMinimum:
          maxLength: 11
          minLength: 0
          pattern: '^[0-9\.]{0,11}$'
          type: string
          description: Fee minimum to be applied. Valid value as per the Format NNNNNN.NNNN
          nullable: true
          example: '13.0'
          default: '0.0000'
        feeMaximum:
          maxLength: 11
          minLength: 0
          pattern: '^[0-9\.]{0,11}$'
          type: string
          description: Fee maximum to be applied. Valid value as per the Format NNNNNN.NNNN
          nullable: true
          example: '342.0'
          default: '0.0000'
        feeMode:
          type: boolean
          description: 'Indicates if the fee is being generated (true) or suppressed (false). Suppressing a fee in effect is the same as setting the fee''s pricing to zero, i.e. no fee will be charged.'
          nullable: true
          example: false
          default: true
        triggerHighValue:
          pattern: '^[0-9\.]{0,18}$'
          type: string
          description: 'The trigger high value for fees, for example this need to be set for the minimum processing fee and minimum processing closed-fee.'
          nullable: true
          example: '250.0'
          default: '0.00'
    MerchantDeviceDto:
      type: object
      required:
        - externalTerminalId
      properties:
        terminalRef:
          type: string
          description: Links to the equipRecord (from 'terminal-processing') with this refId.
          pattern: '^[A-Za-z0-9\-]{0,15}$'
        externalTerminalId:
          description: The unique id for the terminal. This is unique within the institution. Generated.
          type: string
          example: '54999530'
          pattern: '^[a-zA-Z0-9]{1,20}$'
          readOnly: true
        serialNumber:
          maxLength: 32
          minLength: 0
          pattern: '^[a-zA-Z0-9_ \.\&\, ]{0,9}$'
          type: string
          description: The serial number of the terminal
          nullable: true
          example: '123456789'
        contactName:
          maxLength: 32
          minLength: 0
          pattern: '^[a-zA-Z0-9À-ý_ \.\&\, ]{0,41}$'
          type: string
          description: Contract name at terminal location
          nullable: true
          example: John Doe
        terminalLocation:
          maxLength: 25
          minLength: 0
          pattern: '^[a-zA-Z0-9À-ý_ \.\&\, ]{0,25}$'
          type: string
          description: Location of the terminal
          nullable: true
          example: Munich
        telephone:
          maxLength: 15
          minLength: 0
          pattern: '^[0-9]{0,15}$'
          type: string
          description: Connection id or phone number for the terminal
          nullable: true
          example: '003531123456'
        schemeId:
          maxLength: 6
          minLength: 0
          pattern: '^[0-9]{0,6}$'
          type: string
          description: The identity of the schema
          nullable: true
          example: '000000'
        accountCurrencyCode:
          maxLength: 3
          minLength: 0
          pattern: '^[A-Z]{3}$'
          type: string
          description: ISO 4217 currency code.
          nullable: true
          example: EUR
        system_batchId:
          maximum: 999999
          maxLength: 6
          pattern: '^[0-9]{6}$'
          type: integer
          description: Identity number of the system Batch
          format: int32
          nullable: true
          example: 234234
        feeEffeciveDate:
          maxLength: 8
          pattern: '^([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])$'
          type: string
          description: Date the terminal fee is effective from. Format YYYYMMDD. If ommited the default will be the current institution posting date.
          format: date
          nullable: true
        lastFeeDate:
          maxLength: 8
          pattern: '^([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])$'
          type: string
          description: Last fee date. Format YYYYMMDD
          format: date
          nullable: true
        clientFeeIndex:
          maximum: 999
          maxLength: 3
          minLength: 3
          pattern: '^[0-9]{3,3}$'
          type: integer
          description: 'If fees should be applied to the device, this code will indicate which is the corresponding fee to be triggered. For a list of valid codes use this API - get /api/v1/application/data'
          format: int32
          nullable: true
          example: 402
        feeExpiryDate:
          maxLength: 8
          pattern: '^([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])$'
          type: string
          description: Fee expiry date. Format YYYYMMDD
          format: date
          nullable: true
        configOfTerminalIndex:
          maxLength: 3
          pattern: '^[0-9]{3}$'
          type: string
          description: Code corresponding to the configuration of the terminal. For a list of valid codes use this API - get /api/v1/application/data
          nullable: true
          example: '001'
        installDate:
          maxLength: 8
          pattern: '^([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])$'
          type: string
          description: Date the terminal was installed. Format YYYYMMDD
          format: date
          nullable: true
        activeDate:
          maxLength: 8
          pattern: '^([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])$'
          type: string
          description: Date the terminal was activated. Format YYYYMMDD
          format: date
          nullable: true
        terminationDate:
          maxLength: 8
          pattern: '^([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])$'
          type: string
          description: Termination date. Format YYYYMMDD
          format: date
          nullable: true
        terminalPassword:
          maxLength: 8
          pattern: '^[a-zA-Z0-9À-ý_ \.\&\,]{8}$'
          type: string
          description: The password for the terminal
          nullable: true
          example: password
        terminalTypeIndex:
          maxLength: 3
          pattern: '^[0-9]{3}$'
          type: string
          description: Code corresponding to the terminal type. For a list of valid codes use this API - get /api/v1/application/data
          nullable: true
          example: '000'
        terminalCountryCode:
          maxLength: 3
          pattern: '^[A-Z]{3,3}$'
          type: string
          description: ISO-3166 alpha country code representing the country the terminal is located. For a list of valid codes use this API - get /api/v1/application/data
          nullable: true
          example: IRE
        serviceProviderIndex:
          maxLength: 3
          pattern: '^[0-9,]{3}$'
          type: string
          description: Code associated with the company who takes care of the terminal. For a list of valid codes use this API - get /api/v1/application/data
          nullable: true
          example: '001'
        emv:
          type: boolean
          description: Indicate if the terminal is EMV capable terminal
          nullable: true
          example: true
        city:
          maxLength: 13
          minLength: 0
          pattern: '^[a-zA-Z0-9À-ý_ \.\&\,]{0,13}$'
          type: string
          description: The city were the terminal resides at
          nullable: true
          example: Valletta
        amex:
          type: boolean
          description: 'Indicates if the terminal supports Amex transactions, if true additional fields are required.'
          nullable: true
          example: false
        acquiringProfileIndex:
          maxLength: 16
          minLength: 0
          pattern: '^[0-9]{16}$'
          type: string
          description: Code correspnding to the acquirer profile setup on the terminal. For a list of valid codes use this API - get /api/v1/application/data
          nullable: true
          example: '0000000000000000'
        templateId:
          maxLength: 4
          pattern: '^[0-9]{4}$'
          type: string
          description: Template id for the terminal
          nullable: true
          example: '1234'
        amexPhoneNo1:
          maxLength: 24
          minLength: 0
          pattern: '^[0-9]{0,24}$'
          type: string
          description: If Amex = true then Amex phone number 1 must be present.
          nullable: true
          example: '00012458754865148'
        amexPhoneNo2:
          maxLength: 24
          minLength: 0
          pattern: '^[0-9]{0,24}$'
          type: string
          description: If Amex = true then Amex phone number 2 must be present.
          nullable: true
          example: '00012458754865148'
        relatedTId:
          maxLength: 20
          minLength: 0
          pattern: '^[a-zA-Z0-9]{0,20}$'
          type: string
          description: If Amex = true then related TID must be present.
          nullable: true
          example: FreeText
        waiver:
          maxLength: 30
          minLength: 0
          pattern: '^[a-zA-Z0-9]{0,30}$'
          type: string
          description: Waiver indicator text or amount.
          nullable: true
          example: waiver02
        socCode:
          maxLength: 15
          minLength: 0
          pattern: '^[a-zA-Z0-9]{0,15}$'
          type: string
          description: Schedule of charges code
          nullable: true
          example: '00054214'
        setupFee:
          maxLength: 15
          minLength: 0
          pattern: '^[0-9]{7}$'
          type: string
          description: Setup fee
          nullable: true
          example: '3232000'
        gprsRentalAmount:
          maxLength: 7
          minLength: 0
          pattern: '^[0-9]{0,7}$'
          type: string
          description: GPRS Rental Amount
          nullable: true
          example: '325'
        gprsRental:
          maxLength: 8
          minLength: 0
          pattern: '^[a-zA-Z0-9]{0,8}$'
          type: string
          description: GPRS renal (Monthly/Annual)
          nullable: true
          example: '2342'
        installed:
          maxLength: 12
          minLength: 0
          pattern: '^([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])$'
          type: string
          description: Installed/De-Installed. Format YYYYMMDD
          nullable: true
          example: '20200121'
    MerchantRequestDto:
      required:
        - quantity
        - requestIndex
      type: object
      properties:
        requestIndex:
          maxLength: 3
          minLength: 3
          pattern: '^[0-9]{3}$'
          type: string
          description: Indicates the user defined physical device or Information to be sent. Configured per pnstitution. For a list of valid codes use this API - get /api/v1/application/data
          example: '001'
        quantity:
          minimum: 0
          type: integer
          description: Number of items being requested
          format: int32
    OptionalDetailsDto:
      type: object
      properties:
        registrationNo:
          maxLength: 15
          pattern: '^[A-Z0-9 \-\/\.]{0,15}$'
          type: string
          description: Merchant registration number. Note this value will be encrypted prior to be stored as this is considered PII data.
          nullable: true
          example: EA-3256
        vatRegNo:
          maxLength: 15
          pattern: '^[A-Z0-9 \-\/\.]{0,15}$'
          type: string
          description: Merchant registered value added tax number (VAT) . Note this value will be encrypted prior to be stored as this is considered PII data.
          nullable: true
          example: GB123456789
        contractReference:
          maxLength: 8
          pattern: '^[0-9]{0,8}$'
          type: string
          description: Application contract reference number. This is a free format field for information purpose only.
          nullable: true
          example: '32'
        bankReference:
          maxLength: 8
          pattern: '^[0-9]{0,8}$'
          type: string
          description: 'Merchant bank reference number. This is a free format field, where the value can be defined by the merchant/acquirer, information purposes only, no impact to transaction processing'
          nullable: true
          example: '420'
        floorLimitCurrencyCode:
          maxLength: 3
          minLength: 3
          pattern: '^[a-zA-Z]{3}$'
          type: string
          description: 'Merchant floor limit ISO 4217 currency code. This field contains the merchant floor limit currency for information purposes only, no impact to transaction processing.'
          nullable: true
          example: EUR
        dynamicPricing:
          type: boolean
          description: Indicate if the merchant uses dynamic pricing
          nullable: true
          example: false
        paymentAdviceGenerationIndex:
          maxLength: 3
          minLength: 3
          pattern: '^[0-9]{3}$'
          type: string
          description: 'Frequency of payment advice for information only, it does not affect the processing of the payment. Valid values are configured per institution. For a list of valid codes use Acquirer Profile API get reference_data end-point with query parameter classification equal to paymentAdviceGenerationIndex.'
          nullable: true
          example: '420'
        paymentDeliveryMethodCode:
          type: string
          description: 'Payment advice delivery method. This is for information only, it does not affect the processing of the payment.'
          nullable: true
          example: NA
          default: NA
          enum:
            - EMAIL
            - FAX
            - POST
            - COLLECT
            - HAND_DELIVER
            - COURIER
            - ONLINE
            - MY_02_FAX
            - MY_03_COURIE
            - MY_04_HAND_KL
            - MY_05_HAND_PJ
            - MY_06_SPECIAL_DELIVE
            - MY_07_EMAIL
            - MY_01_EMAIL
            - NA
        merchantGradeIndex:
          maxLength: 3
          minLength: 3
          pattern: '^[0-9]{3}$'
          type: string
          description: Merchant grouping by business type and volume. For a list of valid codes use this API - get /api/v1/application/data.
          nullable: true
          example: '420'
        priorityMemo:
          maxLength: 100
          pattern: '^[a-zA-Z0-9_\-\.\+ ]{0,100}$'
          type: string
          description: Free text for additonal note
          nullable: true
        siteUrl:
          maxLength: 13
          minLength: 0
          type: string
          description: 'URL for ecommerce merchants, if any'
          nullable: true
    PayableDto:
      type: object
      description: Details to be used when sending a payment instruction on the funding file
      properties:
        bankName:
          maxLength: 40
          pattern: '^[a-zA-Z0-9À-ý_ \.\&\,\-]{0,40}$'
          type: string
          description: 'Merchant''s bank name, When Billing Level set to true Bank Name must be populated'
          nullable: true
          example: Bank of Dublin
        accountName:
          maxLength: 35
          pattern: '^[a-zA-Z0-9À-ý_ \.\&\,\-]{0,35}$'
          type: string
          description: Merchant's bank account name. Mandatory if billing level is set to true.
          nullable: true
          example: John Doe Credit Account
        counterBankNumber:
          maxLength: 22
          pattern: '^[A-Z0-9_ \.\&\,\-\/]{0,22}$'
          type: string
          description: Clearing number of the merchant's bank i.e. the sort code or BSB number (Australia).
          nullable: true
          example: '13165987'
        accountNumber:
          maxLength: 35
          pattern: '^[A-Z0-9 \-\/\.]{0,35}$'
          type: string
          description: Merchant's bank account number. This is considered PII data; the value will be encrypted prior to storing.
          nullable: true
          example: ZZ999999999999999
        iban:
          maxLength: 35
          pattern: '^[A-Z0-9 \-\/\.]{0,35}$'
          type: string
          description: International Bank Account Number (IBAN) is a series of alphanumeric characters that uniquely identifies a customer's account held at a bank anywhere in the world. this is considered PII data; the value will be encrypted prior to storing
          nullable: true
          example: ZZ99999999999999999999
        bankTelephone:
          maxLength: 15
          pattern: '^[0-9]{0,15}$'
          type: string
          description: The telephone number of the merchant bank.
          nullable: true
          example: '00535125412123'
        bankContactName:
          maxLength: 35
          pattern: '^[a-zA-Z0-9À-ý_ \.\&\,\-]{0,35}$'
          type: string
          description: Name of contact at the merchant's bank. Mandatory if billing level is set to true.
          nullable: true
          example: Frank Castle
        customerPaymentText:
          maxLength: 18
          pattern: '^[a-zA-Z0-9]{0,18}$'
          type: string
          description: Additional text that may be used to identify a payment item on the merchants statement. Only valid for institutions using IFS funding solution.
          nullable: true
          example: '9999999999'
        bankCity:
          maxLength: 35
          pattern: '^[a-zA-Z0-9_ \.\&\,\-]{0,35}$'
          type: string
          description: CREDIT ACCOUNT Bank City optional field
          nullable: true
          example: Dublin
        paymentFormatIndex:
          maxLength: 3
          minLength: 3
          pattern: '^[0-9]{3}$'
          type: string
          description: Format to be used to present payments to the clearing entity. Only institutions using the IFS file for funding merchants. For a list of valid codes use this API - get /api/v1/application/data
          nullable: true
          example: '002'
        clearingEntityIndex:
          maxLength: 3
          minLength: 3
          pattern: '^[0-9]{3}$'
          type: string
          description: The financial institution that will receive the payment. Only institutions using the IFS file for funding merchants. For a list of valid codes use this API - get /api/v1/application/data
          nullable: true
          example: '001'
        correspondentBankAccount:
          maxLength: 16
          pattern: '^[A-Z0-9 \-\/\.]{0,16}$'
          type: string
          description: 'Bank account number for the intermediary bank used for fund transfers. Used in cases where merchant uses a small financial institution, for example a local credit union.'
          nullable: true
          example: ZZ 9842512858747
        calendarDays:
          maxLength: 3
          minLength: 3
          pattern: '^[0-9]{3}$'
          type: string
          description: Number of days to be added to the posting date to calculate the payment/collection funding date
          nullable: true
          example: '002'
        paymentDelayDays:
          maxLength: 3
          minLength: 3
          pattern: '^[0-9]{3}$'
          type: string
          description: Number of days to hold payment to the merchant
          example: '001'
        correspondentBankNo:
          maxLength: 11
          pattern: '^[A-Z0-9_ \.\&\,\-\/]{0,11}$'
          type: string
          description: For institutions using IFS funding file this field should contain the swift code of the payable bank (mapped to international bank code field on the IFS file).
          nullable: true
          example: ZZZZZZZZZZZ
    PaymentInstructionDto:
      type: object
      description: 'Payment instructions allow the acquirer to take away a portion of the calculated payment and post the portion of the amount to a another merchant account, the platform supports different types of instructions for example reserve, rolling reserve and factoring instructions. Payment instructions can only be setup against billing level accounts.'
      required:
        - accountTypeIndex
        - accountCurrencyCode
        - instructionTypeIndex
        - deductionStartDate
        - deductionEndDate
      properties:
        accountTypeIndex:
          maxLength: 3
          minLength: 3
          pattern: '^[0-9]{3}$'
          type: string
          description: 'From account array, this is the account type id for a billing level account for which the reserve, rolling reserve and/or factoring need to be set up'
          nullable: true
          example: '470'
        accountCurrencyCode:
          maxLength: 3
          minLength: 3
          pattern: '^[a-zA-Z]{3}$'
          type: string
          description: 'From the account array, the is the account currency corresponding to the selected account type id. ISO 4217'
          nullable: true
          example: GBP
        instructionTypeIndex:
          maxLength: 3
          minLength: 3
          pattern: '^[0-9]{3}$'
          type: string
          description: Indicates the type of payment instruction to be set for the selected account. The values depends on the configured payment instructions for the Institution. For a list of valid codes use this API - get /api/v1/application/data
          nullable: true
          example: '001'
        deductionStartDate:
          maxLength: 8
          minLength: 8
          pattern: '^([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])$'
          type: string
          description: Date when the instruction starts. Format YYYYMMDD
          format: date
          nullable: true
        deductionEndDate:
          maxLength: 8
          minLength: 8
          pattern: '^([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])$'
          type: string
          description: Date when the instruction ends. Format YYYYMMDD
          format: date
          nullable: true
        deductionPercentage:
          maxLength: 11
          minLength: 0
          pattern: '^[0-9\.\+\-]{0,11}$'
          type: string
          description: 'The payment percent to be deducted from the calculated total amount, to be paid from the account type selected.'
          nullable: true
          example: '5.0'
          default: '00.000000'
        deductionMinAmount:
          maxLength: 11
          minLength: 0
          pattern: '^[0-9\.\+\-]{0,11}$'
          type: string
          description: The minimum value to be deducted from the payment.
          nullable: true
          example: '250.0'
          default: '00.000000'
        deductionMaxAmount:
          maxLength: 11
          minLength: 0
          pattern: '^[0-9\.\+\-]{0,11}$'
          type: string
          description: The maximum value to be deducted from the payment.
          nullable: true
          example: '250.0'
          default: '00.000000'
        deductionBaseAmount:
          maxLength: 11
          minLength: 0
          pattern: '^[0-9\.\+\-]{0,11}$'
          type: string
          description: 'The amount to be deducted from the calculated total amount, to be paid from the account type selected.'
          nullable: true
          example: '250.0'
          default: '00.000000'
        deductionTotalCnt:
          maxLength: 11
          minLength: 0
          pattern: '^[0-9\.\+\-]{0,11}$'
          type: string
          description: Indicates how many times this instruction should be executed
          nullable: true
          example: '100000'
        deductionTotalAmount:
          maxLength: 18
          minLength: 0
          pattern: '^[0-9\.\+\-]{0,18}$'
          type: string
          description: Indicates how many times this instruction should be executed
          nullable: true
          example: '100000'
        factorAgent:
          maxLength: 24
          minLength: 0
          pattern: '^[a-zA-Z0-9À-ý_ \.\&\,]{0,24}$'
          type: string
          description: Name of the factor agent
          nullable: true
          example: James Kirk
        note:
          maxLength: 674
          minLength: 0
          pattern: '^[a-zA-Z0-9À-ý_ \.\&\,]{0,674}$'
          type: string
          description: Free Text for extra note
    ReceivableDto:
      type: object
      description: Details to be used when sending a collection instruction on the funding file
      properties:
        bankName:
          maxLength: 40
          pattern: '^[a-zA-Z0-9À-ý_ \.\&\,\-]{0,40}$'
          type: string
          description: Debit account merchant's bank name. When Billing Level set to true then bank name must be populated
          nullable: true
          example: BNP Paribas
        accountName:
          maxLength: 35
          pattern: '^[a-zA-Z0-9À-ý_ \.\&\,\-]{0,35}$'
          type: string
          description: Debit account merchant's bank account name. Mandatory if billing level is set to true.
          nullable: true
          example: John Doe Debit Account
        counterBankNumber:
          maxLength: 22
          pattern: '^[A-Z0-9_ \.\&\,\-\/]{0,22}$'
          type: string
          description: Debit account clearing number of the merchant's bank i.e. the sort code or BSB number (Australia). Mandatory if billing level is set to true.
          example: '18254'
        accountNumber:
          maxLength: 35
          pattern: '^[A-Z0-9 \-\/\.]{0,35}$'
          type: string
          description: Debit account clearing number of the merchant's bank. Mandatory if billing level is set to true. This is considered PII data; the value will be encrypted prior to storing.
          nullable: true
          example: '68973953036'
        iban:
          maxLength: 35
          pattern: '^[A-Z0-9 \-\/\.]{0,35}$'
          type: string
          description: 'Debit account International Bank Account Number (IBAN) is a series of alphanumeric characters that uniquely identifies a customer''s account held at a bank anywhere in the world. It typically contains a two-character ISO country code, two check digits for validation purposes followed by the domestic bank code and account number. This is considered PII data; the value will be encrypted prior to storing.'
          nullable: true
          example: FR32 18254 12225 68973953036 89
        bankTelephone:
          maxLength: 15
          pattern: '^[0-9]{0,15}$'
          type: string
          description: Debit account bank telephone number.
          nullable: true
        bankContactName:
          maxLength: 35
          pattern: '^[a-zA-Z0-9À-ý_ \.\&\,\-]{0,35}$'
          type: string
          description: Debit account contact name for Merchant's Bank.
          nullable: true
          example: Joanne Burke
        customerPaymentText:
          maxLength: 18
          pattern: '^[a-zA-Z0-9]{0,18}$'
          type: string
          description: Additional text that may be used to identify a payment item on the merchants statement. Only valid for institutions using IFS funding solution.
          nullable: true
          example: item number 6478
        bankCity:
          maxLength: 35
          pattern: '^[a-zA-Z0-9_ \.\&\,\-]{0,35}$'
          type: string
          description: Debit account bank city optional field
          nullable: true
          example: Dublin
        paymentFormatIndex:
          maxLength: 3
          minLength: 3
          pattern: '^[0-9]{3}$'
          type: string
          description: Debit account format to be used to present payments to the clearing entity. Only institutions using the IFS file for funding merchants. For a list of valid codes use this API - get /api/v1/application/data
          nullable: true
          example: '002'
        clearingEntityIndex:
          maxLength: 3
          minLength: 3
          pattern: '^[0-9]{3}$'
          type: string
          description: Debit account financial institution that will receive the collection. Only institutions using the IFS file for funding merchants. For a list of valid codes use this API - get /api/v1/application/data
          nullable: true
          example: '001'
        correspondentBankAccount:
          maxLength: 16
          pattern: '^[A-Z0-9 \-\/\.]{0,16}$'
          type: string
          description: 'Bank account number for the intermediary bank used for collect funds. Used in cases where merchant uses a small financial institution, for example a local credit union.'
          nullable: true
          example: ZZ 9842512858747
        calendarDays:
          maxLength: 3
          minLength: 3
          pattern: '^[0-9]{3}$'
          type: string
          description: Number of days to be added to the posting date to calculate the payment/collection funding date
          nullable: true
          example: '001'
        collectionDelayDays:
          maxLength: 3
          minLength: 3
          pattern: '^[0-9]{3}$'
          type: string
          description: dDaysDr = Delay days debit. This field indicates the number of days to hold collection
          nullable: true
          example: '001'
        correspondentBankNo:
          maxLength: 11
          pattern: '^[A-Z0-9_ \.\&\,\-\/]{0,11}$'
          type: string
          description: For institutions using IFS funding file this field should contain the swift code of the receiving bank (mapped to international bank code field on the IFS file).
          nullable: true
          example: ZZ99999999
    ReferencesDto:
      required:
        - referenceIndex
      type: object
      properties:
        referenceIndex:
          maxLength: 3
          minLength: 3
          pattern: '^[0-9]{3}$'
          type: string
          description: Predefined reference index to tag merchant with additional information. For a list of valid codes use this API - get /api/v1/application/data
        referenceValue:
          maxLength: 32
          minLength: 0
          type: string
          description: Value to be associated with the client reference. For a list of valid codes use this API - get /api/v1/application/data
    RequiredDetailsDto:
      required:
        - tradeName
        - externalMerchantId
        - companyName
        - legalFormIndex
        - languageIndex
        - mcciso
        - eCommerceIndCode
        - residentStatusCode
        - accountOfficerIndex
        - residencyFeeLevelCode
        - retailerClassificationCode
        - branchIndex
      type: object
      properties:
        externalMerchantId:
          maxLength: 20
          pattern: '^[a-zA-Z0-9]{0,20}$'
          type: string
          description: Merchant number to be used throughout the authorization and clearing cycle.
          nullable: true
        tradeName:
          maxLength: 22
          minLength: 1
          type: string
          description: Merchant Trade Name
          example: Burger King
        companyName:
          maxLength: 35
          minLength: 0
          type: string
          description: Merchant's legal company name.
          nullable: true
          example: Burger King Corporation
        legalFormIndex:
          maxLength: 3
          minLength: 3
          pattern: '^[0-9]{3}$'
          type: string
          description: 'Company entity type for information purposes only, no impact to transaction processing. For a list of valid codes use this API - get /api/v1/application/data'
          nullable: true
          example: '001'
        languageIndex:
          maxLength: 3
          minLength: 3
          pattern: '^[0-9]{3}$'
          type: string
          description: 'Merchant language for information purposes only, no impact to transaction processing. For a list of valid codes use this API - get /api/v1/application/data/{countryCode}'
          nullable: true
          example: '001'
        mcciso:
          maxLength: 4
          minLength: 4
          pattern: '^[0-9]{4}$'
          type: string
          description: 'Merchant category code (ISO 18245 ), depending on the client region setting this value may be used for clearing transactions to the scheme.'
          nullable: true
          example: '5814'
        residentStatusCode:
          type: string
          description: 'The residency status of the merchant. Indicates whether the merchant is a resident or non-resident for information purposes only, no impact to transaction processing.'
          nullable: true
          example: NA
          enum:
            - NA
            - RESIDENT
            - NON_RESIDENT
        accountOfficerIndex:
          maxLength: 3
          minLength: 3
          pattern: '^[0-9]{3}$'
          type: string
          description: 'Merchant account officer; the possible values can be customized per institution, use 000=N/A if not relevant for the institution. For a list of valid codes use this API - get /api/v1/application/data'
          nullable: true
          example: '001'
        residencyFeeLevelCode:
          type: string
          description: Indicator only applicable to institutions that charge a residency fee.
          nullable: true
          example: NA
          enum:
            - NA
            - GROUP_CLIENT
            - SUB_GROUP_CLIENT
            - MEMBER_CLIENT
        retailerClassificationCode:
          maxLength: 3
          minLength: 3
          pattern: '^[0-9]{3}$'
          type: string
          description: An RCC identifies the type of business performed within a merchant outlet. For a list of valid codes use this API - get /api/v1/application/data.
          nullable: true
          example: '001'
        branchIndex:
          maxLength: 3
          minLength: 3
          pattern: '^[0-9]{3}$'
          type: string
          description: 'Merchant branch; the possible values can be customized per institution, use 000=N/A if not relevant for the institution. For a list of valid codes use this API - get /api/v1/application/data'
          nullable: true
          example: '001'
        eCommerceIndCode:
          type: string
          description: Field is used for the quarterly stats which are sent to the schemes.
          nullable: true
          example: TRADITIONAL_ONLY
          enum:
            - TRADITIONAL_ONLY
            - ECOMMERCE_ONLY
            - BOTH
    SalesDetailsDto:
      type: object
      properties:
        accSignedDate:
          minLength: 8
          pattern: "^([0-9]{4})(-?)(1[0-2]|0[1-9])\x02(3[01]|0[1-9]|[12][0-9])$"
          type: string
          description: Date merchant was signed up. Format YYYYMMDD
          format: date
          nullable: true
        accCreationDate:
          minLength: 8
          pattern: "^([0-9]{4})(-?)(1[0-2]|0[1-9])\x02(3[01]|0[1-9]|[12][0-9])$"
          type: string
          description: Date merchant was created in the system. Format YYYYMMDD
          format: date
          nullable: true
        accApprovalDate:
          minLength: 8
          pattern: "^([0-9]{4})(-?)(1[0-2]|0[1-9])\x02(3[01]|0[1-9]|[12][0-9])$"
          type: string
          description: Date merchant application was approved. Format YYYYMMDD
          format: date
          nullable: true
        salesAgentId:
          maxLength: 8
          minLength: 8
          pattern: '^[0-9]{8}$'
          type: string
          description: Code of sales agent associated with the sales process. Available options depends on the institution configuration. For a list of valid codes use this API - get /api/v1/application/data.
          nullable: true
          example: '99999999'
        businessOwnerId:
          maxLength: 8
          minLength: 8
          pattern: '^[0-9]{8}$'
          type: string
          description: Code of the business owner associated with the sales process. Available options depends on the institution configuration. For a list of valid codes use Acquirer Profile API get reference_data end-point with query parameter classification equal to businessOwnerId.
          nullable: true
          example: '99999999'
        salesChannelIndex:
          maxLength: 3
          minLength: 3
          pattern: '^[0-9]{3}$'
          type: string
          description: Institution specific user defined list of potential sales channels. For a list of valid codes use Acquirer Profile API get reference_data end-point with query parameter classification equal to salesChannelIndex.
          nullable: true
          example: '023'
        salesCurrencyCode:
          maxLength: 3
          minLength: 3
          pattern: '^[a-zA-Z]{3}$'
          type: string
          description: ISO 4217 Apha Currency code of amount fields displayed
          nullable: true
          example: EUR
        signedSalesValue:
          maxLength: 18
          pattern: '^[0-9_\-\.\+]{0,18}$'
          type: string
          description: 'Contracted sales value for the merchant. Whether this value is per week, per month, per year, etc. is defined at institution level. Format NNN.NN'
          nullable: true
          example: '10.0'
        signedAverageTicketValue:
          maxLength: 18
          pattern: '^[0-9_\-\.\+]{0,18}$'
          type: string
          description: 'Contracted average ticket value for the merchant. Whether this value is per week, per month, per year, etc. is defined at institution level.'
          nullable: true
          example: '10.0'
        salesLead:
          maxLength: 15
          pattern: '^[a-zA-Z0-9_\-\.\+ ]{0,15}$'
          type: string
          description: Name or description of the sales lead
          nullable: true
          example: Free text
        signedNumberSales:
          maxLength: 18
          pattern: '^[0-9_\-\.\+]{0,18}$'
          type: string
          description: 'Contracted number of sales for the merchant. Whether this value is per week, per month, per year, etc. is defined at institution level'
          nullable: true
    SchemeDetailsDto:
      type: object
      properties:
        crossBorderFeeCode:
          type: string
          description: 'Indicates whether a merchant is liable for corss boder fees for MasterCard, Visa both.'
          nullable: true
          example: NONE
          default: NONE
          enum:
            - NONE
            - MASTERCARD
            - VISA
            - BOTH
        masterCardIPQualificationCode:
          type: string
          description: The MasterCard interchange program qualification lists the interchange programs for MasterCard.
          nullable: true
          example: NA
          default: NA
          enum:
            - NA
            - CHARITY
            - MASTERCARD_AID
            - MASTERCARD_QPS
        masterCardIPValue:
          maxLength: 10
          pattern: '^[0-9]{0,10}$'
          type: string
          description: The MasterCard interchange program value field assigned by MasterCard for the corresponding interchange program.
          nullable: true
          example: '55'
        visaIPQualificationCode:
          type: string
          description: The Visa interchange program qualification lists the possible interchange program for Visa.
          nullable: true
          example: NA
          default: NA
          enum:
            - NA
            - CHARITY
            - SG_EZ_LINKS
            - TRANCHE_2
            - TRANCHE_3
            - VAU_VALIDATED
            - VISA_EPS
            - VISA_MVP
        visaIPValue:
          maxLength: 10
          pattern: '^[0-9]{0,10}$'
          type: string
          description: This Visa interchange program value field is assigned by Visa for the corresponding interchange program.
          nullable: true
          example: '401938547'
        paymentLowValue:
          type: boolean
          description: Flag to determine if the merchant is eligible to qualify for UK domestic low value E-Commerce.
          example: false
        cbdipVisaSmiCode:
          maxLength: 9
          pattern: '^[a-zA-Z0-9]{0,9}$'
          type: string
          description: Single merchant identifier (SMI) provided by Visa when merchant is registered with cross border interchange program CBDIP
          nullable: true
          example: aTT345200
        mcPaymentFacilitatorId:
          maxLength: 9
          pattern: '^[0-9]{0,11}$'
          type: string
          description: Single merchant identifier (SMI) provided by Visa when merchant is registered with cross border interchange program CBDIP
          nullable: true
          example: '12345'
        mcIndependentSalesOrgId:
          maxLength: 9
          pattern: '^[0-9]{0,11}$'
          type: string
          description: MasterCard registered ISO for merchants processing ISO transactions
          nullable: true
          example: '1234'
        visaCanIasfFee:
          type: boolean
          description: Indicator if Visa international acquirer service Fee (IASF) cross border fee applies on all transactions assessed in Canada for non canadian issued cards.
          nullable: true
          example: false
          default: false
        viLacFeeCode:
          type: string
          description: 'Indicator for which VISA cross border fees (ISA, IA or both) in the Latin America and Caribbean (LAC) to be applied.'
          nullable: true
          example: NA
          default: NA
          enum:
            - NA
            - VISA_LAC_IA_FEE
            - VISA_LAC_ISA_FEE
            - BOTH_LAC_FEES
        mcLacFeeCode:
          type: string
          description: 'Indicator for which MC cross border fees (CB , CB Rebate or both) in the Latin America and Caribbean (LAC) to be applied.'
          nullable: true
          example: MC_LAC_BOTH
          default: NA
          enum:
            - NA
            - MC_LAC_CB
            - MC_LAC_CB_REBATE
            - MC_LAC_BOTH
        mcAbvFeeInd:
          type: boolean
          description: Indicator if MasterCard acquirer brand volume fee is applicable for the merchant
          nullable: true
          example: false
          default: false
        visaEuFeeIndCode:
          type: string
          description: 'Indicator for which EU fee to be charged; E.g Visa IA Fee or Visa E-Comm Fee, available options depends on the institution configuration. For a list of valid codes check the institution index file.'
          nullable: true
          example: BOTH_VISA_EU_FEES
          default: NEITHER
          enum:
            - NEITHER
            - VISA_IA_FEE
            - VISA_ECOM_FEE
            - BOTH_VISA_EU_FEES
        mcIntlEcomFee:
          type: boolean
          description: 'Indicates the enabling of the MasterCard International Ecommerce Fee, available options depends on the institution configuration. For a list of valid codes check the institution index file.'
          nullable: true
          example: false
          default: false
        viUsApIafFee:
          maxLength: 3
          pattern: '^[0-9]{0,3}$'
          type: string
          description: 'Indicator for which VISA fees (AP IAF, US IAF, both or neither) to be enabled, available options depends on the institution configuration. For a list of valid codes use Acquirer Profile API get reference_data end-point with query parameter classification equal viUsApIafFee.'
          nullable: true
          example: '3'
    ServiceDto:
      type: object
      required:
        - serviceIndex
        - assigned
        - tariffIndex
      properties:
        serviceIndex:
          maxLength: 3
          minLength: 3
          pattern: '^[0-9]{3}$'
          type: string
          description: Code id for the acquiring service. Valid values depends on the institution configuration. For a list of valid codes use this API - get /api/v1/application/data
          nullable: true
          example: '101'
        assigned:
          type: boolean
          description: Flag to indicate if the service is valid for the merchant.
          nullable: true
          example: true
        tariffIndex:
          maxLength: 6
          minLength: 6
          pattern: '^[0-9]{6}$'
          type: string
          description: Code ID for the tariff which drives the default transactions fees to be generated for the merchant per service. For a list of valid codes use this API - get /api/v1/application/data
          nullable: true
          example: '000573'
        floorLimit:
          maxLength: 18
          minLength: 0
          pattern: '^[0-9]{0,18}$'
          type: string
          description: Floor limit for merchant service selected; for information purpose only
          nullable: true
          example: '000000000000000000'
        dinersCode:
          type: string
          description: Processing model to be applied for the merchant for Diners and Discover. Required if the service id corresponds to a Diners/Discover service.
          nullable: true
          example: CONVEYANCE_CLEARING
          default: NA
          enum:
            - CONVEYANCE_CLEARING
            - DINERS_AND_DISCOVER
            - NA
        jcbStateCodeIndex:
          maxLength: 3
          minLength: 3
          pattern: '^[A-Z]{3}$'
          type: string
          description: State code required to process and clear JCB transaction. Only required for JCB services. Value depends on the institution configuration. For a list of valid codes use this API - get /api/v1/application/data
          nullable: true
          example: TXT
        jcbAreaCode1Index:
          maxLength: 2
          minLength: 2
          pattern: '^[0-9]{2}$'
          type: string
          description: Area code 1 required to process and clear JCB transaction. Only required for JCB services. State and selected area codes should be as per institution specific list of values. For a list of valid codes use this API - get /api/v1/application/data
          nullable: true
        jcbArea2Index:
          maxLength: 2
          minLength: 2
          pattern: '^[0-9]{2}$'
          type: string
          description: Area code 2 required to process and clear JCB transaction. Only required for JCB services. State and selected area codes should be as per institution specific list of values. For a list of valid codes use this API - get /api/v1/application/data
          nullable: true
        merchantSubId:
          pattern: '^[0-9]{6}$'
          type: string
          description: Merchant sub id required to process and clear Ideal transaction. Required for Ideal service. Must not exist on an already boarded merchant under same institution.
          example: '000001'
    TransactionChargesDto:
      type: object
      required:
        - recordIdNumber
        - expiryDate
      properties:
        recordIdNumber:
          maxLength: 10
          minLength: 10
          pattern: '^[0-9]{10}$'
          type: string
          description: Record id of the transaction fee to be overwritten. For a list of valid record ids check the institution index file.
          example: '9999999999'
        effectiveDate:
          maxLength: 8
          minLength: 8
          pattern: '^([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])$'
          type: string
          description: Detail today's date or a future date as appropriate. Format YYYYMMDD. If ommited it will be defaulted to the institution current posting date.
          format: date
          nullable: true
        expiryDate:
          maxLength: 8
          minLength: 8
          pattern: '^([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])$'
          type: string
          description: Expiry date for fee if defined or set to or future date 99991231. Format YYYYMMDD. The date should be in future
          format: date
          nullable: true
        feePercentage:
          maxLength: 11
          pattern: '^[0-9\.]{0,11}$'
          type: string
          description: Charge base to be applied.
          nullable: true
          example: '5.0'
          default: '0.0000'
        feeBase:
          maxLength: 11
          pattern: '^[0-9\.]{0,11}$'
          type: string
          description: Charge base amount to be applied.
          nullable: true
          example: '250.0'
          default: '0.0000'
        feeMinimum:
          maxLength: 11
          pattern: '^[0-9\.]{0,11}$'
          type: string
          description: Minimum charge amount.
          nullable: true
          example: '250.0'
          default: '0.0000'
        feeMaximum:
          maxLength: 11
          pattern: '^[0-9\.]{0,11}$'
          type: string
          description: Maximum charge amount.
          nullable: true
          example: '250.0'
          default: '0.0000'
        chargeCurrencyCode:
          maxLength: 3
          minLength: 3
          pattern: '^[A-Z]{0,3}$'
          type: string
          description: 'The ISO 4217 currency code for the charge base, minimum and maximun amounts. Values are restricted by institution configuration. For a list of valid codes check this API end-point get /api/v1/transaction-charges.'
          nullable: true
          example: EUR
        chargeTierLevel:
          maxLength: 20
          pattern: '^[a-zA-Z0-9_ \.\&\,]{0,20}$'
          type: string
          description: The tier assigned which will drive the merchant tiered pricing. The tier level that is assigned to the merchant. This will be N/A (Default) if the transaction charge record is not tiered.
          nullable: true
          example: Not Applicable
    SuccessfulResult:
      type: object
      properties:
        returnStatus:
          type: string
          description: Return of the application
          enum:
            - APPLICATION_BOARDED
            - TERMINAL_BOARDED
            - TERMINAL_UPDATED
            - TERMINAL_UNLINKED
        applicationId:
          type: number
          description: 'ApplicationId (returned to you on first saving). The number of fields may vary, depending on the products selected.'
        terminalId:
          type: number
          description: TerminalId (returned to you on first saving). Only filled if the original request is a terminal maintenance endpoint.
        idsnNumbers:
          type: object
          example:
            amexSENumber: '123523432212121'
            internalMerchantId: '12321231232'
    UnsuccessfulResult:
      type: object
      properties:
        returnStatus:
          type: string
          description: Return of the application
          enum:
            - ERROR
        applicationId:
          type: number
          description: ApplicationId (returned to you on first saving)
        errorStep:
          type: string
          description: Internal step where the error occured
        errors:
          type: array
          items:
            type: object
            properties:
              errorCode:
                type: string
                example: XPTO-21
              errorMessage:
                type: string
                description: Error message
                example: applicationId not found
    GenericalTerminalRequest:
      type: object
      required:
        - '@type'
        - maintenanceData
        - retailCardDataLayout122
        - retailLayout
        - traceAuditNumber
      properties:
        '@type':
          type: string
          description: '"TPBS24" for using this type. Please check with internal team the type you should use'
        maintenanceData:
          $ref: '#/components/schemas/MaintenanceData'
        retailAcqAuthLayout:
          $ref: '#/components/schemas/RetailAcqAuthLayout'
        retailCardDataLayout122:
          $ref: '#/components/schemas/RetailCardDataLayout122'
        retailLayout:
          $ref: '#/components/schemas/RetailLayout'
        terminalCardDataLayoutRecords:
          $ref: '#/components/schemas/TerminalCardDataLayoutRecord'
        terminalCardLayoutPTDD2:
          $ref: '#/components/schemas/TerminalCardDataLayoutRecord'
        terminalId:
          type: string
          example: '11988639'
          description: Terminal ID
        terminalLayout:
          $ref: '#/components/schemas/TerminalLayout'
        traceAuditNumber:
          type: string
          example: '000001'
          minLength: 6
          maxLength: 6
          description: System Trace Audit Number
    MaintenanceData:
      type: object
      required:
        - lastTransactionTime
      properties:
        completionRequired:
          type: string
          description: Completion Required
          minLength: 1
          maxLength: 1
          enum:
            - 'Y'
            - 'N'
          default: 'Y'
          example: 'N'
        dpcNumber:
          type: number
          description: DPC Number
          minimum: 0
          maximum: 9999
          exclusiveMinimum: false
          exclusiveMaximum: false
          default: 5000
        lastTransactionTime:
          type: string
          description: Last Transaction Timestamp
          format: ($date-time)
          example: '2020-09-01 14:06:54'
        logIndicator:
          type: string
          description: Log Indicator
          example: 'Y'
          minLength: 1
          maxLength: 1
          enum:
            - 'Y'
            - 'N'
          default: 'Y'
        stationIndex:
          type: integer
          description: Station Index
          example: 0
          minimum: 0
          maximum: 9999
          exclusiveMinimum: false
          exclusiveMaximum: false
          default: 0
        userInformation:
          type: string
          description: User Information
          minLength: 30
          maxLength: 30
          default: '000000000000000000000000000000'
          example: '000000000000000000000000000000'
    RetailAcqAuthLayout:
      type: object
      properties:
        entryModeAllowedIterations:
          type: integer
          minimum: 0
          maximum: 10
          exclusiveMinimum: false
          exclusiveMaximum: false
          description: Entry Mode Allowed Iterations
        entryModeAllowedList:
          type: array
          maxItems: 10
          items:
            $ref: '#/components/schemas/EntryModeAllowed'
        installmentsIterations:
          type: integer
          format: ($int32)
          minimum: 0
          maximum: 10
          exclusiveMinimum: false
          exclusiveMaximum: false
        installmentsList:
          type: array
          maxItems: 10
          items:
            $ref: '#/components/schemas/Installment'
        planIterations:
          type: integer
          maximum: 15
          exclusiveMinimum: false
          exclusiveMaximum: false
        plansList:
          type: array
          maxItems: 15
          items:
            $ref: '#/components/schemas/Plan'
    EntryModeAllowed:
      type: object
      properties:
        entryMode:
          type: string
          description: Entry Mode
          maxLength: 2
          pattern: '(^[0-9]?$)|(^0[0-9]$)|(^10$)'
          example: '10'
        maxAmount:
          type: number
          description: Maximum Amount
          example: 10000
        maxAmountDollar:
          type: number
          description: Maximum Amount in Dollars
          example: 50000
    Installment:
      type: object
      properties:
        cardType:
          $ref: '#/components/schemas/CardType'
        maximumAmountAccumulatedWithoutInstallment:
          type: number
          maximum: 999999999999.99
          multipleOf: 0.01
          description: Maximum Amount to be accumulated without Installment
        maximumAmountAccumulatedWithoutInstallmentDollar:
          type: number
          maximum: 999999999999.99
          multipleOf: 0.01
          description: Maximum Amount to be accumulated without Installment in Dollars
        maximumInstallmentAmount:
          type: number
          maximum: 999999999999.99
          multipleOf: 0.01
          description: Maximum Installment Amount
        maximumInstallmentAmountAccumulated:
          type: number
          maximum: 999999999999.99
          multipleOf: 0.01
          description: Maximum Installment Amount Accumulated
        maximumInstallmentAmountAccumulatedDollar:
          type: number
          maximum: 999999999999.99
          multipleOf: 0.01
          description: Maximum Installment Amount Accumulated in Dollars
        maximumInstallmentAmountDollar:
          type: number
          maximum: 999999999999.99
          multipleOf: 0.01
          description: Maximum Installment Amount in Dollars
        maximumInstallments:
          type: integer
          maximum: 99
          description: Maximum Installments
        minimumInstallmentAmount:
          type: number
          maximum: 999999999999.99
          multipleOf: 0.01
          description: Minimum Installment Amount
        minimumInstallmentAmountDollar:
          type: number
          maximum: 999999999999.99
          multipleOf: 0.01
          description: Minimum Installment Amount Dollar
        minimumInstallments:
          type: integer
          minimum: 1
          maximum: 99
          description: Minimum Installments
    Plan:
      type: object
      properties:
        cardType:
          $ref: '#/components/schemas/CardType'
        paymentPlan:
          type: string
          maxLength: 3
          description: Payment Plan
    CardType:
      type: string
      enum:
        - AD
        - AX
        - BD
        - C*
        - CB
        - D
        - DC
        - DS
        - M
        - MD
        - MM
        - P*
        - P1
        - S1
        - SC
        - SN
        - SP
        - SR
        - ST
        - V
        - VD
        - VV
      description: '<li>AD - Administrative (atm product only) <li>AX - American Express credit <li>BD - Business deposit ( atm and teller products only ) <li>C* - Private label credit ( includes C, C0–C9, CA, and CC–CZ ) <li>CB - Carte Blanche credit <li>D - Demonstration ( atm product only ) <li>DC - Diners Club credit <li>DS - Discover (Sears) credit <li>M - MasterCard credit <li>MD - MasterCard debit (for pos product "M" ) <li>MM - MasterCard dual (for pos product "M" ) <li>P* - Proprietary debit ( includes P, P0–P9, and PA–PZ ) <li>P1 - Clave Card <li>S1 - Secure Internet Validation Virtual PAN <li>SC - Special, Check ( pos product only ) <li>SN - Stored value no reload ( pos Stored Value add-on product only ) <li>SP - Special purpose ( atm self-service banking (SSB) Enhanced Check only ) <li>SR - Stored value reload ( pos Stored Value add-on product only ) <li>ST - Super teller ( atm self-service banking (SSB)  only ) <li>V - Visa credit <li>VD - Visa debit ( for pos product "V" ) <li>VV - Visa dual ( for pos product "V" )'
    RetailCardDataLayout122:
      type: object
      properties:
        cardCount:
          type: integer
          maximum: 20
        cards:
          maxItems: 20
          type: array
          items:
            type: object
            required:
              - cardType
            properties:
              alternateId:
                type: string
                description: Alternate Merchant ID
                default: ' '
              cardType:
                $ref: '#/components/schemas/CardType'
              ceilingLimit:
                type: integer
                description: Ceiling Limit
                example: 0
                minimum: 0
                default: 0
                maximum: 999999999
                exclusiveMinimum: false
                exclusiveMaximum: false
              checkFile:
                type: string
                enum:
                  - 'Y'
                  - 'N'
                default: 'N'
                example: 'N'
                description: Check File
              draftCapture:
                type: integer
                description: Draft Capture
                minimum: 1
                maximum: 9
                default: 1
    RetailLayout:
      type: object
      required:
        - account
        - address
        - afterHourPhone
        - city
        - county
        - multipleInstallmentTransaction
        - phone
        - postalCode
        - referralPhone
        - retailerGroup
        - retailerId
        - retailerName
        - sicCode
        - state
      properties:
        account:
          type: string
          example: '2315000060231500006'
          minLength: 19
          maxLength: 19
          pattern: '^[0-9]{19}$'
        address:
          type: string
          example: BELLA VISTA
          maxLength: 25
          description: Address
        afterHourPhone:
          type: string
          example: '8092211991'
          minLength: 0
          maxLength: 20
          pattern: '^[0-9]{0,20}$'
          description: After Hours Phone Number
        city:
          type: string
          maxLength: 18
          description: City
        county:
          type: string
          example: '1'
          minLength: 0
          maxLength: 3
          description: County
        multipleInstallmentTransaction:
          type: string
          minLength: 0
          maxLength: 8
          description: Multiple Installment Transaction
        phone:
          type: string
          example: '8092211991'
          minLength: 0
          maxLength: 20
          description: Phone
        postalCode:
          type: string
          example: '1111'
          minLength: 0
          maxLength: 10
          description: Postal Code
        referralPhone:
          type: string
          example: '8092211991'
          minLength: 0
          maxLength: 20
          description: Referral Phone
        retailerGroup:
          type: string
          example: G005
          minLength: 4
          maxLength: 4
          description: Retailer Group
        retailerId:
          type: string
          example: '9378528989'
          minLength: 0
          maxLength: 19
          description: Retailer ID
        retailerName:
          type: string
          example: PIZZA HUT BELLA VISTA MALL-8989
          maxLength: 40
          description: Retailer Name
        retailerProgram:
          type: string
          example: R
          minLength: 1
          maxLength: 1
          description: 'Retailer Program. Values: A = MasterCard retailer program B = MasterCard and Visa retailer programs N = Non-dial R = Regular program or standard Interlink merchant T = Visa retailer program W = Pre-existing qualified Interlink supermarket X = Pre-existing Interlink merchant Y = Qualified Interlink supermarket Z = All programs 0 = No program'
          default: R
          enum:
            - B
            - 'N'
            - R
            - T
            - W
            - X
            - 'Y'
            - Z
            - '0'
        serviceStablishment:
          type: integer
          format: ($int32)
          example: 0
          default: 0
          minimum: 0
          maximum: 9999999999
          exclusiveMinimum: false
          exclusiveMaximum: false
          description: Service Stablishment
        settlementMethod:
          type: string
          example: D
          minLength: 0
          maxLength: 1
          description: |-
            A code indicating the settlement method used by the retailer
            <li>P = Paper <li>D = Draft capture by card type
          default: D
          enum:
            - P
            - D
        sicCode:
          type: integer
          example: 5812
          minimum: 0
          maximum: 9999
          exclusiveMinimum: false
          exclusiveMaximum: false
          description: SIC Code
        state:
          type: string
          example: '1'
          minLength: 0
          maxLength: 3
          description: State
    TerminalCardDataLayoutRecord:
      type: object
      properties:
        cardCount:
          type: integer
          format: ($int32)
          example: 0
          description: Card Count
        cards:
          type: array
          items:
            $ref: '#/components/schemas/TerminalCardDataLayoutRecordCard'
    TerminalCardDataLayoutRecordCard:
      type: object
      properties:
        cardType:
          $ref: '#/components/schemas/CardType'
        cashAdvanceLimit:
          type: integer
          format: ($int32)
          example: 0
          minimum: 0
          maximum: 999999999
          exclusiveMinimum: false
          exclusiveMaximum: false
          description: Cash Advance Floor Limit
        electronicFollowup:
          type: integer
          format: ($int32)
          example: 1
          minimum: 0
          maximum: 9
          exclusiveMinimum: false
          exclusiveMaximum: false
          description: Electronic Follow Up
        mailOrderLimit:
          type: integer
          format: ($int32)
          example: 0
          minimum: 0
          maximum: 999999999
          exclusiveMinimum: false
          exclusiveMaximum: false
          description: Mail Order Floor Limit
        purchaseFloorLimit:
          type: integer
          format: ($int32)
          example: 0
          minimum: 0
          maximum: 999999999
          exclusiveMinimum: false
          exclusiveMaximum: false
          description: Purchase Floor Limit
        tranLimit:
          type: integer
          format: ($int32)
          example: 0
          minimum: 0
          maximum: 999999999
          exclusiveMinimum: false
          exclusiveMaximum: false
          description: Tran Limit
        transactionProfile:
          type: integer
          format: ($int32)
          example: 0
          minimum: 0
          maximum: 9
          exclusiveMinimum: false
          exclusiveMaximum: false
          description: Transaction Profile
    TerminalLayout:
      type: object
      required:
        - encryptionData
        - recordType
        - siteId
        - terminalCapabilities
        - terminalLimit
        - terminalOwner
      properties:
        billingInfo:
          type: string
          minLength: 0
          maxLength: 10
          description: Billing Info
        encryptionData:
          $ref: '#/components/schemas/EncryptionDataEncryptionData'
        languageId:
          type: integer
          format: ($int32)
          example: 0
          minimum: 0
          maximum: 9
          exclusiveMinimum: false
          exclusiveMaximum: false
          description: Language ID
        recordType:
          type: string
          example: P
          minLength: 1
          maxLength: 1
          description: Record Type
        serviceRepresentativeData:
          $ref: '#/components/schemas/ServiceRepresentativeData'
        siteId:
          type: string
          maxLength: 16
          description: Site ID
        terminalCapabilities:
          $ref: '#/components/schemas/TerminalCapabilities'
        terminalFlag:
          $ref: '#/components/schemas/TerminalFlag'
        terminalLimit:
          $ref: '#/components/schemas/TerminalLimit'
        terminalOwner:
          type: string
          example: PIZZA HUT BELLA VISTA
          minLength: 1
          maxLength: 22
          description: Terminal Owner
        terminalType:
          type: string
          example: D0
          default: D0
          minLength: 2
          maxLength: 2
          description: Terminal Type
        timeOffset:
          type: string
          example: '-6000'
          minLength: 5
          maxLength: 5
          pattern: '^[+-][0-9]{4}$'
          description: Time Offset
    EncryptionDataEncryptionData:
      type: object
      required:
        - checkDigitsMac
        - checkDigitsPin
        - macKey
        - macType
        - pinMasterKey
        - pinType
        - validatePin
      properties:
        checkDigitsMac:
          type: string
          example: '0000'
          minLength: 4
          maxLength: 4
          pattern: '^[0-9A-F]{4}$'
          description: Check Digits Mac
        checkDigitsPin:
          type: string
          example: '0000'
          minLength: 4
          maxLength: 4
          pattern: '^[0-9A-F]{4}$'
          description: Check Digits Pin
        macKey:
          type: string
          example: '16'
          minLength: 16
          maxLength: 16
          pattern: '^[0-9A-F]{16}$'
          exclusiveMinimum: false
          exclusiveMaximum: false
          description: Mac Master Key
        macType:
          type: integer
          format: ($int32)
          example: 0
          description: Mac Type
        pinCharacter:
          type: string
          example: F
          description: Pin Pad Character
        pinMasterKey:
          type: string
          example: '0000000000000000'
          minLength: 16
          maxLength: 16
          description: Pin Master Key
        pinType:
          type: integer
          format: ($int32)
          example: 0
          default: 0
          maximum: 2
          description: Pin Encryption Type
        validatePin:
          type: string
          example: 'N'
          default: 'N'
          minLength: 1
          maxLength: 1
          description: Validate Pin
    ServiceRepresentativeData:
      type: object
      required:
        - address
        - city
      properties:
        address:
          type: string
          example: MAX HENRIQUEZ URENA 6
          minLength: 1
          maxLength: 25
          description: Address
        city:
          type: string
          example: SANTO DOMINGO
          minLength: 1
          maxLength: 16
          description: City
        name:
          type: string
          example: CARDNET
          minLength: 1
          maxLength: 25
          description: Name
        phone:
          type: string
          example: '80947332008094733200'
          minLength: 20
          maxLength: 20
          description: Phone
    TerminalCapabilities:
      type: object
      properties:
        cardCapture:
          type: integer
          format: ($int32)
          example: 0
          default: 0
          description: Card Capture
        cardholderAuthentication:
          type: integer
          format: ($int32)
          example: 4
          default: 4
          description: Cardholder Authentication
        cardholderTerminal:
          type: integer
          format: ($int32)
          example: 0
          default: 0
          description: Cardholder Activate Terminal
        contactCapabilities:
          type: integer
          format: ($int32)
          default: 8
          example: 8
          description: Contact Input Capabilities
        contactlessCapabilities:
          type: integer
          format: ($int32)
          example: 0
          default: 0
          description: Contactless Input Capabilities
        softwareControl:
          type: string
          minLength: 1
          maxLength: 1
          description: Software Version Control
        terminalAttendance:
          type: integer
          format: ($int32)
          example: 0
          default: 0
          description: Terminal Attendance
        terminalCapabilities:
          type: integer
          format: ($int32)
          example: 4
          default: 4
          description: Terminal Output Capabilities
        terminalControl:
          type: string
          minLength: 1
          maxLength: 1
          description: Terminal Retailer Control
        terminalLocation:
          type: integer
          format: ($int32)
          example: 0
          default: 0
          description: Terminal Location
        terminalVersion:
          type: string
          minLength: 0
          maxLength: 16
          description: Terminal Software Version
    TerminalFlag:
      type: object
      required:
        - acquiredProfile
        - serialNumber
      properties:
        acquiredProfile:
          type: string
          example: P500-GP01-1
          minLength: 1
          maxLength: 16
          description: Acquired Profile
        adjustAmt1:
          type: string
          default: 'Y'
          example: 'Y'
          minLength: 1
          maxLength: 1
          description: Adjust Amt>Amt1
        authAmount:
          type: string
          example: 'Y'
          default: 'Y'
          minLength: 1
          maxLength: 1
          description: Auth Lesse Amount
        balanceReturn:
          type: string
          example: 'N'
          default: 'N'
          minLength: 1
          maxLength: 1
          description: Balance Return
        completeData:
          type: string
          example: 'Y'
          default: 'Y'
          minLength: 1
          maxLength: 1
          description: Complete Data
        currencyCode:
          type: integer
          format: ($int32)
          example: 214
          minimum: 1
          maximum: 999
          exclusiveMinimum: false
          exclusiveMaximum: false
          description: 'Currency Code. Retrieved from API /api/v1/data/{countryCode}'
        custBalanceDisplay:
          type: integer
          format: ($int32)
          example: 3
          default: 3
          minimum: 1
          maximum: 9
          exclusiveMinimum: false
          exclusiveMaximum: false
          description: Customer Balance Display
        salesDraft:
          type: integer
          format: ($int32)
          example: 1
          default: 1
          description: Sales Draft
        serialNumber:
          type: string
          minLength: 9
          maxLength: 9
          description: Serial Number
        softwareRelease:
          type: string
          description: Software Release
          maxLength: 8
    TerminalLimit:
      type: object
      required:
        - preTime
      properties:
        adjustCount:
          type: string
          example: '0000'
          default: '0000'
          minLength: 4
          maxLength: 4
          description: Adjust Count
        adjustLimit:
          type: string
          example: '000000000000000'
          default: '000000000000000'
          minLength: 15
          maxLength: 15
          description: Adjust Limit
        defaultAmount:
          type: integer
          format: ($int32)
          example: 0
          default: 0
          description: Default Pre Auth Amount
        preIncrement:
          type: integer
          format: ($int32)
          example: 0
          default: 0
          minimum: 0
          maximum: 9
          exclusiveMinimum: false
          exclusiveMaximum: false
          description: Pre-auth Hold Increment
        preTime:
          type: string
          minLength: 2
          maxLength: 2
          description: Pre-auth Hold Time
        returnCount:
          type: integer
          format: ($int32)
          example: 4
          default: 4
          minimum: 4
          maximum: 4
          exclusiveMinimum: false
          exclusiveMaximum: false
          description: Return Count
        returnLimit:
          type: string
          default: '000000000000000'
          example: '000000000000000'
          minLength: 15
          maxLength: 15
          description: Return Limit
