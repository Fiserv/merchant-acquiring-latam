openapi: 3.0.2
info:
  description: Merchant Registration Changes History
  version: "1.0"
  title: Merchant Registration Changes History
  termsOfService: urn:tos
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
servers:
  - url: https://cat.api.firstdata.com
x-header-api-key: 'X0GW3QGOYFn4r7DHcVC8KuatUnNs6MGB'
x-header-api-secret: 'N93nmFmoY0NzSMC5'
x-production-url: prod.api.firstdata.com
x-config:
  tryItOut: true
tags:
  - name: Merchant Registration Changes History
    description: Merchant Registration Changes History
paths:
  "/bwa/alteracoes-cadastrais/v1/consulta":
    get:
      tags:
        - Merchant Registration Changes History
      x-proxy-name: Merchant Information - Demographic History
      x-group-name: Merchant Information & Cases
      x-child-product-name: Banworks
      description: Merchant Registration Changes History
      summary: Merchant Registration Changes History
      operationId: Merchant Registration Changes History
      parameters:
        - name: Message-Signature
          in: header
          description: HMAC
          required: true
          example: 1tsmkG9Ip3k2rcO5cETButfP3D/RS6U8troFF+mUrno=
          schema:
            type: string
        - name: Api-Key
          in: header
          description: APigee Key
          required: true
          example: X0GW3QGOYFn4r7DHcVC8KuatUnNs6MGB
          schema:
            type: string
        - name: auth
          in: header
          description: Oauth Key
          required: true
          example:
          schema:
            type: string
        - name: Timestamp
          in: header
          description: Date - Epoch format
          required: true
          example: 1563309156733
          schema:
            type: string
        - name: Client-Request-Id
          in: header
          description: Randomly generated by client
          required: true
          example: 6NYHj9Pgyxc84rmafpwG4fjhLwFfJYFVmxJOcgziD0QN3q6mGC
          schema:
            type: string
        - name: instituicao
          in: header
          description: Merchant Institution Number
          example: "00000003"
          required: true
          schema:
            type: string
        - name: estabelecimento
          in: header
          description: Merchant Code
          required: true
          example: "98703001"
          schema:
            type: string
        - name: page
          in: query
          description: Search page number (Default 0)
          example: 0
          required: false
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: Number of records to search on the page (Default 20)
          example: 33
          required: false
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: Ordering field can be any return field. It is possible to determine as ASC (ascending), DESC (descending) or none
          example: "dtEfetivacao | dtEfetivacao,asc | dtEfetivacao,desc"
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseEntity"
        '206':
          description: Partial Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialContent'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conflict'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
components:
  schemas:
    PartialContent:
      type: object
      properties:
        codigoRetorno:
          description: Return Code
          example: 9
          type: integer
          format: int32
          enum:
            - 9
            - 10
        mensagem:
          description: Description return code
          example: Campos mandatorios (meaning mdantory Fields Missing)
          type: string
          enum:
            - "9 - Campos mandatorios - (meaning Mandatory Fields Missing)"
            - "10 - (Erro validaçao) - (meaning Validation Error)"
    Unauthorized:
      type: object
      properties:
        codigoRetorno:
          description: Return Code
          type: integer
          example: 4
        mensagem:
          description: Description return code
          example: Acesso nao autorizado ao conteudo pesquisado - (meaning Unauthorized Access)
          type: string
    Forbidden:
      type: object
      properties:
        codigoRetorno:
          description: Return Code
          example: 3
          type: integer
          format: int32
          enum:
            - 3
            - 6
        mensagem:
          description: Description return code
          example: Acesso negado- (meaning Access Denied)
          type: string
          enum:
            - "3 - Acesso negado - (meaning Access Denied)"
            - "6 - Token expirado - (meaning Expired Token)"
    NotFound:
      type: object
      properties:
        codigoRetorno:
          description: Return Code
          type: integer
          example: 5
        mensagem:
          description: Description return code
          example: Item nao encontrado - (meaning Item not Found)
          type: string
    Conflict:
      type: object
      properties:
        codigoRetorno:
          description: Return Code
          type: integer
          example: 8
        mensagem:
          description: Description return code
          example: Item duplicado - (meaning Item Duplicated)
          type: string
    InternalServerError:
      type: object
      properties:
        codigoRetorno:
          description: Return Code
          example: 2
          type: integer
          format: int32
          enum:
            - 2
            - 7
        mensagem:
          description: Description return code
          example: Erro Interno - (meaning Internal Error)
          type: string
          enum:
            - "2 - Erro Interno - (meaning Internal Error)"
            - "7 - Erro na integracao da API. Detalhe - (meaning API Integration Error)"
    ResponseEntity:
      type: object
      properties:
        codigoRetorno:
          description: Return code
          example: 0
          type: integer
          format: int32
          enum:
            - 0
            - 101
        mensagem:
          description: Description return code
          example: Sucesso.
          type: string
          enum:
            - >-
              0 - Sucesso.
        conteudo:
          type: array
          items:
            $ref: '#/components/schemas/Response'
        lastPage:
          description: Informs if it is the last page of the search
          example: true
          type: boolean
        totalPages:
          description: Total search pages
          example: 10
          type: integer
          format: int32
        totalItems:
          description: Total records found in the search
          example: 350
          type: integer
          format: int32
        currentPage:
          description: Current search page
          example: 0
          type: integer
          format: int32
        totalCurrentItems:
          description: Total records brought to the page
          example: 30
          type: integer
          format: int32
    Response:
      type: object
      properties:
        email:
          type: string
          description: Contact email
          example: "usuario@firstdatacorpo.com.br"
        nomeContato:
          type: string
          description: Contact name
          example: "name"
        pais:
          type: string
          description: Country
          example: "BRA"
        bairro:
          type: string
          description: Neighborhood
          example: "Jardim venesa"
        codMetEntrega:
          type: string
          description: Delivery method code. It will return only the code
          example: "026"
          enum:
            - "000	Não aplicável"
            - "001	Corresp normal"
            - "002	Reter-Coletar CPD"
            - "003	Cobrar da agência"
            - "004	Correio aéreo"
            - "005	Carta registrada"
            - "025	Eletrônico/Internet"
            - "026	EDI"
            - "027	Bandeja de Anexo"
            - "028	SMS"
            - "029	Fatura eletrônica"
            - "101	Remessa de PIN"
            - "102	Extratos"
            - "103	Correspondência"
            - "104	Outros"
            - "105	Padrão"
            - "106	Cartão"
            - "200	Documento impresso"
            - "500	E-mail"
            - "700	eWallet INTRA msg"
        dtEfetivacao:
          type: string
          description: Effective Date
          example: "20191212"
        estado:
          type: string
          description: Government
          example: "SP"
        catEndereco:
          type: string
          description: Address category
          example: "Comercial"
          enum:
            - "n/a"
            - "Standard"
            - "Comercial"
            - "Jurídico"
            - "Temporário"
            - "Extrato"
            - "Alternativo"
            - "Emissor do cartão"
            - "Remessa do PIN"
            - "Endereço postal"
            - "Corporativo"
            - "Cópia do extrato"
            - "Exterior"
            - "Fiador"
            - "Todos"
        comp1:
          type: string
          description: Complement
          example: "Casa 2"
        cep:
          type: string
          description: cep
          example: "12221432"
        cidade:
          type: string
          description: City
          example: "São Paulo"
        endNumero:
          type: string
          description: Address number
          example: "14"
        telFax:
          type: string
          description: Telephone fax
          example: "011997979898"
        dtRegistro:
          type: string
          description: Date of registration
          example: "20191212"
        endereco:
          type: string
          description: Address
          example: "Rua dos pardais"
        comp2:
          type: string
          description: Complement
          example: "Casa 1"
        telSede:
          type: string
          description: Head office phone
          example: "011997979797"
        descMetEntrega:
          type: string
          description: Description delivery method. It will return the description.
          example: "EDI"
          enum:
            - "000	Não aplicável"
            - "001	Corresp normal"
            - "002	Reter-Coletar CPD"
            - "003	Cobrar da agência"
            - "004	Correio aéreo"
            - "005	Carta registrada"
            - "025	Eletrônico/Internet"
            - "026	EDI"
            - "027	Bandeja de Anexo"
            - "028	SMS"
            - "029	Fatura eletrônica"
            - "101	Remessa de PIN"
            - "102	Extratos"
            - "103	Correspondência"
            - "104	Outros"
            - "105	Padrão"
            - "106	Cartão"
            - "200	Documento impresso"
            - "500	E-mail"
            - "700	eWallet INTRA msg"
        nrEstabelecimento:
          type: string
          description: Establishment number
          example: "24041964"
