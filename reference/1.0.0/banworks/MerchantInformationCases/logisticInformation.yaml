openapi: 3.0.2
info:
  description: Consult or Update Logistic Information
  version: "1.0"
  title: Consult or Update Logistic Information
  termsOfService: urn:tos
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
servers:
  - url: https://cat.api.firstdata.com
x-header-api-key: 'X0GW3QGOYFn4r7DHcVC8KuatUnNs6MGB'
x-header-api-secret: 'N93nmFmoY0NzSMC5'
x-production-url: prod.api.firstdata.com
x-config:
  tryItOut: true
tags:
  - name: Consult or Update Logistic Information
paths:
  "/bwa/dados-logistica/":
    post:
      tags:
        - Consult or Update Logistic Information
      x-proxy-name: Merchant Logistic Information - Add/Update
      x-group-name: Merchant Information & Cases
      x-child-product-name: Banworks
      description: Add or Update Logistic Information
      summary: Merchant Information & Cases
      operationId: addOrUpdateLogisticInformation
      parameters:
        - name: Message-Signature
          in: header
          description: HMAC
          required: true
          example: 1tsmkG9Ip3k2rcO5cETButfP3D/RS6U8troFF+mUrno=
          schema:
            type: string
        - name: Api-Key
          in: header
          description: APigee Key
          required: true
          example: X0GW3QGOYFn4r7DHcVC8KuatUnNs6MGB
          schema:
            type: string
        - name: auth
          in: header
          description: Oauth Key
          required: true
          example:
          schema:
            type: string
        - name: Timestamp
          in: header
          description: Date - Epoch format
          required: true
          example: 1563309156733
          schema:
            type: string
        - name: Client-Request-Id
          in: header
          description: Randomly generated by client
          required: true
          example: 6NYHj9Pgyxc84rmafpwG4fjhLwFfJYFVmxJOcgziD0QN3q6mGC
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DadosLogistica"
        description: dadosLogistica
        required: true
      responses:
        "200":
          description: Check returns from service
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseInclusao"
  "/bwa/dados-logistica/{numeroInstituicao}/{merchantId}/{cnpjCpf}":
    get:
      tags:
        - Consult or Update Logistic Information
      x-proxy-name: Merchant Logistic Information - Consult Logistic Information
      x-group-name: Merchant Information & Cases
      x-child-product-name: Banworks
      description: Merchant Logistic Information - Consult Logistic Information
      summary: Merchant Information & Cases
      operationId: consultLogisticInformation
      parameters:
        - name: Message-Signature
          in: header
          description: HMAC
          required: true
          example: 1tsmkG9Ip3k2rcO5cETButfP3D/RS6U8troFF+mUrno=
          schema:
            type: string
        - name: Api-Key
          in: header
          description: APigee Key
          required: true
          example: X0GW3QGOYFn4r7DHcVC8KuatUnNs6MGB
          schema:
            type: string
        - name: auth
          in: header
          description: Oauth Key
          required: true
          example:
          schema:
            type: string
        - name: Timestamp
          in: header
          description: Date - Epoch Format
          required: true
          example: 1563309156733
          schema:
            type: string
        - name: Client-Request-Id
          in: header
          description: Randomly generated by client
          required: true
          example: 6NYHj9Pgyxc84rmafpwG4fjhLwFfJYFVmxJOcgziD0QN3q6mGC
          schema:
            type: string
        - name: numeroInstituicao
          in: path
          description: Merchant Institution Number
          example: "00000003"
          required: true
          schema:
            type: string
        - name: merchantId
          in: path
          description: Merchant Code
          example: "91002806"
          required: true
          schema:
            type: string
        - name: cnpjCpf
          in: path
          description: Merchant Tax ID (CPF or CNPJ)
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successfully done
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseRetorno"
components:
  schemas:
    DadosLogistica:
      type: object
      required:
        - contatoDestinatario
        - merchantID
      properties:
        contatoDestinatario:
          type: integer
          format: int64
          description: Delivery Contact Phone Number
          example: "11983836161"
        complemento:
          type: string
          description: Delivery Address Complement
          example: Store 1
        merchantID:
          type: string
          description: Delivery Merchant Code
          example: "91002806"
        nomeDestinatario:
          type: string
          description: Delivery Name
          example: Mario de Almeida
        nomeEstabelecimento:
          type: string
          description: Delivery Merchant Name
          example: Hamburguers store
        pontoReferencia:
          type: string
          description: Landmark Information
          example: Close to the gas Station XYZ
        ramoAtividade:
          type: string
          description: MErchant Type of Activity
          example: Eating
        tipoLocalEntrega:
          type: string
          description: Type of Delivery Address
          example: Shopping Mall
        geolocalizacao:
          $ref: "#/components/schemas/Geolocalizacao"
        horarioAlmoco:
          $ref: "#/components/schemas/HorarioAlmoco"
        horarioManutencao:
          $ref: "#/components/schemas/HorarioManutencao"
    Geolocalizacao:
      type: object
      description: Geo Location Information
      properties:
        latitude:
          type: string
          description: Address Latitude
        longitude:
          type: string
          description: Address Longitude
    HorarioAlmoco:
      properties:
        sun:
          type: string
          description: Lunch Time - format HH:MM
          example: ["13:00", "14:00", "18:00", "19:00"]
        mon:
          type: string
          description: Lunch Time - format HH:MM
          example: ["13:00", "14:00", "18:00", "19:00"]
        tue:
          type: string
          description: Lunch Time - format HH:MM
          example: ["13:00", "14:00", "18:00", "19:00"]
        wed:
          type: string
          description: Lunch Time - format HH:MM
          example: ["13:00", "14:00", "18:00", "19:00"]
        thu:
          type: string
          description: Lunch Time - format HH:MM
          example: ["13:00", "14:00", "18:00", "19:00"]
        fri:
          type: string
          description: Lunch Time - format HH:MM
          example: ["13:00", "14:00", "18:00", "19:00"]
        sat:
          type: string
          description: Lunch Time - format HH:MM
          example: ["13:00", "14:00", "18:00", "19:00"]
    HorarioManutencao:
      type: object
      properties:
        sun:
          type: string
          description: Maintenance Available Time - format HH:MM
          example: ["08:00", "13:00", "15:00", "18:00"]
        mon:
          type: string
          description: Maintenance Available Time - format HH:MM
          example: ["08:00", "13:00", "15:00", "18:00"]
        tue:
          type: string
          description: Maintenance Available Time - format HH:MM
          example: ["08:00", "13:00", "15:00", "18:00"]
        wed:
          type: string
          description: Maintenance Available Time - format HH:MM
          example: ["08:00", "13:00", "15:00", "18:00"]
        thu:
          type: string
          description: Maintenance Available Time - format HH:MM
          example: ["08:00", "13:00", "15:00", "18:00"]
        fri:
          type: string
          description: Maintenance Available Time - format HH:MM
          example: ["08:00", "13:00", "15:00", "18:00"]
        sat:
          type: string
          description: Maintenance Available Time - format HH:MM
          example: ["08:00", "13:00", "15:00", "18:00"]
    responseRetorno:
      type: object
      description: Response Information
      properties:
        codigoRetorno:
          type: string
          description: Return Code
          example: "00"
          enum:
            - "00 - Successfully done"
            - "01 - System Error"
        descricaoRetorno:
          type: string
          description: Return Code Description
          example: "Successfully Done"
          enum:
            - "00 - Successfully done"
            - "01 - System Error"
        dadoslogistica:
          type: object
          description: Logistic Information
          allOf:
            - $ref: "#/components/schemas/DadosLogistica"
    ResponseInclusao:
      type: object
      properties:
        processMessage:
          type: array
          items:
            $ref: "#/components/schemas/reponseRetornoAtlz"
    reponseRetornoAtlz:
      type: object
      properties:
        codigoRetorno:
          description: Return Code
          example: "00"
          enum:
            - "00 - Successfully done"
            - "01 - System Error"
        descricaoRetorno:
          type: string
          description: Return Code Description
          example: "Successfully Done"
          enum:
            - "00 - Successfully done"
            - "01 - System Error"
