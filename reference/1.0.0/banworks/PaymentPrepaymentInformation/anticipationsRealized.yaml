openapi: 3.0.1
info:
  title: View the SOCs
  description: View the SOCs related to the payment of a Manual and Automatic prepayment.
  termsOfService: 'urn:tos'
  contact:
    name: Fiserv
    url: 'https://merchants.fiserv.com/pt-br/'
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0'
  version: '1.0'
x-header-api-key: X0GW3QGOYFn4r7DHcVC8KuatUnNs6MGB
x-config:
  tryItOut: true
x-header-api-secret: N93nmFmoY0NzSMC5
x-production-url: 'https://prod.api.firstdata.com'
servers:
  - url: 'https://cat.api.firstdata.com'
paths:
  /bwa/antecipacoes-realizadas/v1/sumarizacao/socPeriodo:
    get:
      tags:
        - Payment & Prepayment Information/Transactions Carried Out
      x-proxy-name: Transactions related to Manual/Automatic Prepayment - Get details of sales on prepayments made by period
      x-group-name: Payment & Prepayment Information
      x-child-product-name: Banworks
      description: Get details of sales on prepayments made
      operationId: sumarizacaoSOCPER
      parameters:
        - name: instituicao
          in: header
          description: Merchant Institution Number
          required: true
          schema:
            type: string
          example: '00000003'
        - name: estabelecimento
          in: header
          description: Merchant Code
          required: true
          schema:
            type: string
          example: 33333332
        - name: dataInicio
          in: query
          description: Search start date. yyyyMMdd format
          required: true
          schema:
            type: string
          example: 20210131
        - name: dataFim
          in: query
          description: Search end date. yyyyMMdd format
          required: true
          schema:
            type: string
          example: 20210228
        - name: tipoConta
          in: query
          description: 'Type of account. Possible Values: 050(VISA Credit) | 051(MC Credit) | 055(CABAL Credit) | 059(Hipercard Credit) | 060(ELO Credit) | 062(Diners Credit) | 063(Amex Credit)'
          required: false
          schema:
            type: string
            enum:
              - '050'
              - '051'
              - '055'
              - '059'
              - '060'
              - '062'
              - '063'  
        - name: page
          in: query
          description: Search page number (Default 0)
          required: false
          schema:
            type: string
          example: 0
        - name: Message-Signature
          in: header
          description: HMAC
          required: true
          schema:
            type: string
          example: 1tsmkG9Ip3k2rcO5cETButfP3D/RS6U8troFF+mUrno=
        - name: Api-Key
          in: header
          description: APigee Key
          required: true
          schema:
            type: string
          example: X0GW3QGOYFn4r7DHcVC8KuatUnNs6MGB
        - name: auth
          in: header
          description: Authorization token. Oauth Key
          required: true
          schema:
            type: string
        - name: Timestamp
          in: header
          description: Date - Epoch format
          required: true
          schema:
            type: string
          example: 1563309156733
        - name: Client-Request-Id
          in: header
          description: Randomly generated by client
          required: true
          schema:
            type: string
          example: 6NYHj9Pgyxc84rmafpwG4fjhLwFfJYFVmxJOcgziD0QN3q6mGC
        - name: size
          in: query
          description: Number of records to search on the page (Default 20)
          schema:
            type: string
          example: 20
        - name: sort
          in: query
          description: Sorting can be done by data | valorBruto | valorLiquido | quantidadeResumos | valorAntecipado | using ASC or DESC
          schema:
            type: string
          example: 'numeroSimulacao,desc'
      responses:
        '200':
          description: Successfully Done
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessDetalhamentoSOCPERAntecipacoes'
        '206':
          description: Partial Content
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PartialContent'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Forbidden'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/NotFound'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Conflict'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/InternalServerError'
  /bwa/antecipacoes-realizadas/v1/sumarizacao/socNumero:
    get:
      tags:
        - Payment & Prepayment Information/Transactions Carried Out
      x-proxy-name: Transactions related to Manual/Automatic Prepayment - Get details of sales on prepayments made by number
      x-group-name: Payment & Prepayment Information
      x-child-product-name: Banworks
      description: Get details of sales on prepayments made by number
      operationId: sumarizacaoSOC
      parameters:
        - name: instituicao
          in: header
          description: Merchant Institution Number
          required: true
          schema:
            type: string
          example: '00000003'
        - name: estabelecimento
          in: header
          description: Merchant Code
          required: true
          schema:
            type: string
          example: 33333332
        - name: dataInicio
          in: query
          description: Search start date. yyyyMMdd format
          required: true
          schema:
            type: string
          example: 20210131
        - name: dataFim
          in: query
          description: Search end date. yyyyMMdd format
          required: true
          schema:
            type: string
          example: 20210228
        - name: tipoConta
          in: query
          description: 'Type of account. Possible Values: 050(VISA Credit) | 051(MC Credit) | 055(CABAL Credit) | 059(Hipercard Credit) | 060(ELO Credit) | 062(Diners Credit) | 063(Amex Credit)'
          required: false
          schema:
            type: string
            enum:
              - '050'
              - '051'
              - '055'
              - '059'
              - '060'
              - '062'
              - '063'
        - name: page
          in: query
          description: Search page number (Default 0)
          required: false
          schema:
            type: string
          example: 0
        - name: Message-Signature
          in: header
          description: HMAC
          required: true
          schema:
            type: string
          example: 1tsmkG9Ip3k2rcO5cETButfP3D/RS6U8troFF+mUrno=
        - name: Api-Key
          in: header
          description: APigee Key
          required: true
          schema:
            type: string
          example: X0GW3QGOYFn4r7DHcVC8KuatUnNs6MGB
        - name: auth
          in: header
          description: Authorization token. Oauth Key
          required: true
          schema:
            type: string
        - name: Timestamp
          in: header
          description: Date - Epoch format
          required: true
          schema:
            type: string
          example: 1563309156733
        - name: Client-Request-Id
          in: header
          description: Randomly generated by client
          required: true
          schema:
            type: string
          example: 6NYHj9Pgyxc84rmafpwG4fjhLwFfJYFVmxJOcgziD0QN3q6mGC
        - name: size
          in: query
          description: Number of records to search on the page (Default 20)
          schema:
            type: string
          example: 20
        - name: sort
          in: query
          description: Sorting can be done by data | numeroSimulacao | valorBruto | valorLiquido | quantidadeResumos | dataAntecipacao | valorAntecipacao | tipoAntecipacao using ASC or DESC
          schema:
            type: string
          example: 'numeroSimulacao,desc'
      responses:
        '200':
          description: Successfully Done
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessDetalhamentoSOCAntecipacoes'
        '206':
          description: Partial Content
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PartialContent'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Forbidden'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/NotFound'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Conflict'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/InternalServerError'
  /bwa/antecipacoes-realizadas/v1/detalhamento/antecipacoesRealizadas:
    get:
      tags:
        - Payment & Prepayment Information/Transactions Carried Out
      x-proxy-name: Transactions related to Manual/Automatic Prepayment
      x-group-name: Transactions related to Manual/Automatic Prepayment
      x-child-product-name: Payment & Prepayment Information
      description: Get details of sales on prepayments made
      operationId: detalhamentoAntecipacoes
      parameters:
        - name: instituicao
          in: header
          description: Merchant Institution Number
          required: true
          schema:
            type: string
          example: '00000003'
        - name: estabelecimento
          in: header
          description: Merchant Code
          required: true
          schema:
            type: string
          example: 33333332
        - name: dataInicio
          in: query
          description: Search start date. yyyyMMdd format
          required: true
          schema:
            type: string
          example: 20210131
        - name: dataFim
          in: query
          description: Search end date. yyyyMMdd format
          required: true
          schema:
            type: string
          example: 20210228
        - name: numeroSimulacao
          in: query
          description: Anticipation simulation number
          required: false
          schema:
            type: string
          example: 00000129725
        - name: tipoAntecipacao
          in: query
          description: 'Type of anticipation. Possible values: MANUAL | AUTOMATICA'
          required: false
          schema:
            type: string
            enum:
              - MANUAL
              - AUTOMATICA
          example: MANUAL
        - name: tipoConta
          in: query
          description: 'Type of account. Possible Values: 050(VISA Credit) | 051(MC Credit) | 055(CABAL Credit) | 059(Hipercard Credit) | 060(ELO Credit) | 062(Diners Credit) | 063(Amex Credit)'
          required: false
          schema:
            type: string
            enum:
              - '050'
              - '051'
              - '055'
              - '059'
              - '060'
              - '062'
              - '063'
        - name: page
          in: query
          description: Search page number (Default 0)
          required: false
          schema:
            type: string
          example: 0
        - name: Message-Signature
          in: header
          description: HMAC
          required: true
          schema:
            type: string
          example: 1tsmkG9Ip3k2rcO5cETButfP3D/RS6U8troFF+mUrno=
        - name: Api-Key
          in: header
          description: APigee Key
          required: true
          schema:
            type: string
          example: X0GW3QGOYFn4r7DHcVC8KuatUnNs6MGB
        - name: auth
          in: header
          description: Authorization token. Oauth Key
          required: true
          schema:
            type: string
        - name: Timestamp
          in: header
          description: Date - Epoch format
          required: true
          schema:
            type: string
          example: 1563309156733
        - name: Client-Request-Id
          in: header
          description: Randomly generated by client
          required: true
          schema:
            type: string
          example: 6NYHj9Pgyxc84rmafpwG4fjhLwFfJYFVmxJOcgziD0QN3q6mGC
        - name: size
          in: query
          description: Number of records to search on the page (Default 20)
          schema:
            type: string
          example: 20
        - name: sort
          in: query
          description: Sorting can be done by numeroSimulacao | tipoConta | dataCredito | valorBruto | valorCreditoOriginal | valorLiquidoAntecipacao | dataAntecipacao using ASC or DESC
          schema:
            type: string
          example: 'numeroSimulacao,desc'
      responses:
        '200':
          description: Successfully Done
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessDetalhamentoAntecipacoes'
        '206':
          description: Partial Content
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PartialContent'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Forbidden'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/NotFound'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Conflict'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/InternalServerError'
components:
  schemas:
    NotFound:
      type: object
      properties:
        codigoRetorno:
          type: integer
          description: Return code
          format: int32
          example: 5
          enum:
            - 5
        mensagem:
          type: string
          description: Description return code
          example: Item nao encontrado - (Meaning item not found)
          enum:
            - 5 - Item nao encontrado (Meaning item not found)
    Unauthorized:
      type: object
      properties:
        codigoRetorno:
          type: integer
          description: Return code
          format: int32
          example: 4
          enum:
            - 4
        mensagem:
          type: string
          description: Description return code
          example: Acesso nao autorizado ao conteudo pesquisado - Meaning Not Authorized Access
          enum:
            - Acesso nao autorizado ao conteudo pesquisado - Meaning Not Authorized Access
    IDetalhamentoSOCPERAntecipacoesDTO:
      type: object
      properties:
        quantidadeResumos:
          type: string
          description: Quantity of abstracts
          example: '5'
        valorAntecipado:
          type: string
          description: Net Amount
          example: '6742.36'
        valorLiquido:
          type: string
          description: Net Anticipation amount
          example: '150.78'
        valorBruto:
          type: string
          description: 'SOC''s gross amount, referring to the transactions that make up the minimum amount'
          example: '45.74'
        totalPeriodo:
          type: string
          description: 'Total period '
          example: '5'
      description: Field containing the request return
    SuccessDetalhamentoSOCPERAntecipacoes:
      type: object
      properties:
        codigoRetorno:
          type: integer
          description: Return code
          format: int32
          example: 0
          enum:
            - 0
            - 101
            - 102
            - 103
            - 104
            - 105
            - 106
        mensagem:
          type: string
          description: Sucesso.
          enum:
            - Sucesso.
            - 101- Tipo de conta invalido
            - 102- Tipo de antecipacao invalido
            - 103- Formato da data nao suportado
            - 104- Data inicio nao pode ser maior que data fim
            - 105- O numero de dias suportado para pesquisa deve menor ou igual a 30
            - 106- Nao existe resultado para os parametros informado
        conteudo:
          type: array
          description: Field containing the request return
          items:
            $ref: '#/components/schemas/IDetalhamentoSOCPERAntecipacoesDTO'
        lastPage:
          type: boolean
          description: Last page indicator
          example: true
          enum:
            - true
            - false
        totalPages:
          type: integer
          description: Total page counter
          format: int32
          example: 1
        totalItems:
          type: integer
          description: Total Items counter
          format: int64
          example: 1
        currentPage:
          type: integer
          description: Current page number
          format: int32
          example: 0
        totalCurrentItems:
          type: integer
          description: Current item total item counter
          format: int32
          example: 1
    Conflict:
      type: object
      properties:
        codigoRetorno:
          type: integer
          description: Return code
          format: int32
          example: 8
          enum:
            - 8
        mensagem:
          type: string
          description: Description return code
          example: Item duplicado - (Meaning Duplicated Item)
          enum:
            - 8 - Item duplicado (Meaning Duplicated Item)
    Forbidden:
      type: object
      properties:
        codigoRetorno:
          type: integer
          description: Return code
          format: int32
          example: 3
          enum:
            - 3
            - 6
        mensagem:
          type: string
          description: Description return code
          example: Acesso negado - (Meaning Denied Access)
          enum:
            - 3 - Acesso negado - (Meaning Denied Access)
            - 10 - Token expirado - (Meaning Expired Token
    PartialContent:
      type: object
      properties:
        codigoRetorno:
          type: integer
          description: Return code
          format: int32
          example: 9
          enum:
            - 9
            - 10
        mensagem:
          type: string
          description: Description return code
          example: 'Campos mandatorios: ... (meaning Mandatory Fields)'
          enum:
            - '9 - Campos mandatorios: ... (meaning Mandatory Fields)'
            - 10 - (Erro validaçao) (meaning VAlidation Error)
    InternalServerError:
      type: object
      properties:
        codigoRetorno:
          type: integer
          description: Return code
          format: int32
          example: 2
          enum:
            - 2
            - 7
        mensagem:
          type: string
          description: Description return code
          example: Erro Interno - (Meaning Internal Error)
          enum:
            - 2 - Erro Interno (Meaning Internal Error)
            - 7 - Erro na integracao da API. Detalhe (Meaning Integration Error)
    IDetalhamentoSOCAntecipacoesDTO:
      type: object
      properties:
        data:
          type: string
          description: Date. Format YYYYMMDD
          example: '20210102'
        tipoAntecipacao:
          type: string
          description: 'Type of anticipation. Possible values: Manual | Automatica'
          example: Manual
          enum:
            - Manual
            - Automatica
        numeroSimulacao:
          type: string
          description: 'Prepayment Number '
          example: '00000135104'
        quantidadeResumos:
          type: string
          description: Quantity of abstracts
          example: '5'
        valorAntecipacao:
          type: string
          description: Net Amount
          example: '6742.36'
        dataAntecipacao:
          type: string
          description: Anticipation date. Format YYYYMMDD
          example: '20210301'
        instituicao:
          type: string
          description: Merchant Institution Number
          example: '00000001'
        numeroEc:
          type: string
          description: Client Number
          example: '33333332'
        valorLiquido:
          type: string
          description: Net Anticipation amount
          example: '150.78'
        valorBruto:
          type: string
          description: 'SOC''s gross amount, referring to the transactions that make up the minimum amount'
          example: '45.74'
      description: Field containing the request return
    SuccessDetalhamentoSOCAntecipacoes:
      type: object
      properties:
        codigoRetorno:
          type: integer
          description: Return code
          format: int32
          example: 0
          enum:
            - 0
            - 101
            - 102
            - 103
            - 104
            - 105
            - 106
        mensagem:
          type: string
          description: Sucesso.
          enum:
            - Sucesso.
            - 101- Tipo de conta invalido
            - 102- Tipo de antecipacao invalido
            - 103- Formato da data nao suportado
            - 104- Data inicio nao pode ser maior que data fim
            - 105- O numero de dias suportado para pesquisa deve menor ou igual a 30
            - 106- Nao existe resultado para os parametros informado
        conteudo:
          type: array
          description: Field containing the request return
          items:
            $ref: '#/components/schemas/IDetalhamentoSOCAntecipacoesDTO'
        lastPage:
          type: boolean
          description: Last page indicator
          example: true
          enum:
            - true
            - false
        totalPages:
          type: integer
          description: Total page counter
          format: int32
          example: 1
        totalItems:
          type: integer
          description: Total Items counter
          format: int64
          example: 1
        currentPage:
          type: integer
          description: Current page number
          format: int32
          example: 0
        totalCurrentItems:
          type: integer
          description: Current item total item counter
          format: int32
          example: 1
    IDetalhamentoAntecipacoesDTO:
      type: object
      properties:
        tipoAntecipacao:
          type: string
          description: 'Type of anticipation. Possible values: Manual | Automatica'
          example: Manual
          enum:
            - Manual
            - Automatica
        numeroSimulacao:
          type: string
          description: Anticipation simulation number
          example: 00000129725
        dataAntecipacao:
          type: string
          description: Anticipation date. Format YYYYMMDD
          example: '20210301'
        estabelecimento:
          type: string
          description: Merchant Code
          example: '33333332'
        valorCreditoOriginal:
          type: string
          description: 'SOC net amount/gross anticipation amount, referring to the transactions that make up the minimum amount'
          example: '50.12'
        valorLiquidoAntecipacao:
          type: string
          description: Net Anticipation amount
          example: '150.78'
        instituicao:
          type: string
          description: Merchant Institution Number
          example: '00000001'
        valorBruto:
          type: string
          description: 'SOC''s gross amount, referring to the transactions that make up the minimum amount'
          example: '45.74'
        dataCredito:
          type: string
          description: Credit date. Format YYYYMMDD
          example: '20210205'
        plano:
          type: string
          description: Plan number
          example: '8'
        dataPagamento:
          type: string
          description: Payment date. Format YYYYMMDD
          example: '20210102'
        parcela:
          type: string
          description: Installment number
          example: '005'
        resumoVendas:
          type: string
          description: Sales summary number
          example: 00803309531281
        tipoConta:
          type: string
          description: Identification of the account that the transactions belong
          example: MasterCard Crédito
          enum:
            - Amex Credit
            - CABAL Credit
            - CABAL Crédito
            - Diners Credit
            - ELO Credit
            - Hipercard Credit
            - MasterCard Crédito
            - MC Credit
            - VISA Credit
            - VISA Crédito
      description: Field containing the request return
    SuccessDetalhamentoAntecipacoes:
      type: object
      properties:
        codigoRetorno:
          type: integer
          description: Return code
          format: int32
          example: 0
          enum:
            - 0
            - 101
            - 102
            - 103
            - 104
            - 105
            - 106
        mensagem:
          type: string
          description: Sucesso.
          enum:
            - Sucesso.
            - 101- Tipo de conta invalido
            - 102- Tipo de antecipacao invalido
            - 103- Formato da data nao suportado
            - 104- Data inicio nao pode ser maior que data fim
            - 105- O numero de dias suportado para pesquisa deve menor ou igual a 30
            - 106- Nao existe resultado para os parametros informado
        conteudo:
          type: array
          description: Field containing the request return
          items:
            $ref: '#/components/schemas/IDetalhamentoAntecipacoesDTO'
        lastPage:
          type: boolean
          description: Last page indicator
          example: true
          enum:
            - true
            - false
        totalPages:
          type: integer
          description: Total page counter
          format: int32
          example: 1
        totalItems:
          type: integer
          description: Total Items counter
          format: int64
          example: 1
        currentPage:
          type: integer
          description: Current page number
          format: int32
          example: 0
        totalCurrentItems:
          type: integer
          description: Current item total item counter
          format: int32
          example: 1
